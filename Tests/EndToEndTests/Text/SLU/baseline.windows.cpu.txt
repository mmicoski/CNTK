CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU W3550 @ 3.07GHz
    Hardware threads: 4
    Total Memory: 12580388 kB
-------------------------------------------------------------------
=== Running /cygdrive/c/jenkins/workspace/CNTK-Test-Windows-W1/x64/release/cntk.exe configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/globals.cntk+rnnlu.ndl.cntk currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu DeviceId=-1 timestamping=true
-------------------------------------------------------------------
Build info: 

		Built time: Aug  4 2016 06:18:04
		Last modified date: Thu Aug  4 03:39:14 2016
		Build type: Release
		Build target: GPU
		With 1bit-SGD: no
		Math lib: mkl
		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
		CUB_PATH: C:\src\cub-1.4.1
		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
		Build Branch: HEAD
		Build SHA1: 0f61695dfc335f2406284d335678f57c215e6e9c
		Built by svcphil on dphaim-26-new
		Build Path: c:\jenkins\workspace\CNTK-Build-Windows@3\Source\CNTK\
-------------------------------------------------------------------
Changed current directory to C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
08/04/2016 09:24:58: -------------------------------------------------------------------
08/04/2016 09:24:58: Build info: 

08/04/2016 09:24:58: 		Built time: Aug  4 2016 06:18:04
08/04/2016 09:24:58: 		Last modified date: Thu Aug  4 03:39:14 2016
08/04/2016 09:24:58: 		Build type: Release
08/04/2016 09:24:58: 		Build target: GPU
08/04/2016 09:24:58: 		With 1bit-SGD: no
08/04/2016 09:24:58: 		Math lib: mkl
08/04/2016 09:24:58: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
08/04/2016 09:24:58: 		CUB_PATH: C:\src\cub-1.4.1
08/04/2016 09:24:58: 		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
08/04/2016 09:24:58: 		Build Branch: HEAD
08/04/2016 09:24:58: 		Build SHA1: 0f61695dfc335f2406284d335678f57c215e6e9c
08/04/2016 09:24:58: 		Built by svcphil on dphaim-26-new
08/04/2016 09:24:58: 		Build Path: c:\jenkins\workspace\CNTK-Build-Windows@3\Source\CNTK\
08/04/2016 09:24:58: -------------------------------------------------------------------
08/04/2016 09:24:59: -------------------------------------------------------------------
08/04/2016 09:24:59: GPU info:

08/04/2016 09:24:59: 		Device[0]: cores = 2496; computeCapability = 5.2; type = "Quadro M4000"; memory = 8192 MB
08/04/2016 09:24:59: -------------------------------------------------------------------

08/04/2016 09:24:59: Running on cntk-muc02 at 2016/08/04 09:24:59
08/04/2016 09:24:59: Command line: 
C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\release\cntk.exe  configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/globals.cntk+rnnlu.ndl.cntk  currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU  RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu  DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU  ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU  OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu  DeviceId=-1  timestamping=true



08/04/2016 09:24:59: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
08/04/2016 09:24:59: NdlDir=$ConfigDir$
ExpDir=$RunDir$
OutDir=$OutputDir$
precision="double"
deviceId = $DeviceId$
command=LSTM:LSTMTest
traceLevel=1
LSTM=[
  action=train
  makeMode=true
  minibatchSize=10
  epochSize=4430000
  modelPath=$ExpDir$/cntkdebug.dnn
  NDLNetworkBuilder=[
      networkDescription=$NdlDir$/lstm.ndl
  ]
  SGD=[
    learningRatesPerSample=0.1
    momentumPerMB=0.90
    gradientClippingWithTruncation=true
    clippingThresholdPerSample=15.0
    maxEpochs=3
    gradientcheck=false
    numMBsToShowResult=1000
    loadBestModel=true
    AutoAdjust=[
      autoAdjustLR=adjustafterepoch
      reduceLearnRateIfImproveLessThan=0
      increaseLearnRateIfImproveMoreThan=1000000000
      learnRateDecreaseFactor=0.5
      learnRateIncreaseFactor=1.382
      numMiniBatch4LRSearch=100
      numPrevLearnRates=5
      numBestSearchEpoch=1
    ]
    dropoutRate=0
  ]
  reader=[
    readerType=LUSequenceReader
    wordContext=0:1:2
    randomize=None
    nbruttsineachrecurrentiter=10
    wfile=$ExpDir$/sequenceSentence.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    unk="<unk>"
    wordmap=$DataDir$/inputmap.txt
    file=$DataDir$/atis.train.apos.pred.pos.head.IOB.simple
    features=[
      dim=0
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      usewordmap=true
      labelDim=10000
      labelMappingFile=$ExpDir$/sentenceLabels.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=$DataDir$/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="O"
      endSequence="O"
      token=$DataDir$/output.txt
    labelMappingFile=$ExpDir$/sentenceLabels.out.txt
      sectionType=labels
      mapping=[
        sectionType=labelMapping
      ]
      category=[
        sectionType=categoryLabels
      ]
    ]
  ]
  cvReader=[
    readerType=LUSequenceReader
    randomize=None
    wordContext=0:1:2
    wfile=$ExpDir$/sequenceSentence.valid.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    unk="<unk>"
    wordmap=$DataDir$/inputmap.txt
    file=$DataDir$/atis.dev.IOB.simple
    features=[
      dim=0
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      labelDim=10000
      labelMappingFile=$ExpDir$/sentenceLabels.in.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=$DataDir$/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="O"
      endSequence="O"
      token=$DataDir$/output.txt
      labelDim=10000
      labelMappingFile=$ExpDir$/sentenceLabels.out.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=3
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=3
        sectionType=categoryLabels
      ]
    ]
  ]
]
LSTMTest=[
  action=write
  minibatchSize=100
  epochSize=4430000
  defaultHiddenActivity=0.1
  modelPath=$ExpDir$/cntkdebug.dnn
  outputNodeNames=outputs
  reader=[
    readerType=LUSequenceReader
    randomize=None
    wordContext=0:1:2
    unk="<unk>"
    wordmap=$DataDir$/inputmap.txt
    file=$DataDir$/atis.test.apos.pred.pos.head.IOB.simple
    wfile=$ExpDir$/sequenceSentence.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    features=[
      dim=0 
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      labelDim=10000
      labelMappingFile=$ExpDir$/sentenceLabels.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=$DataDir$/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      token=$DataDir$/output.txt
      labelDim=127
      labelMappingFile=$ExpDir$/sentenceLabels.out.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=3
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=3
        sectionType=categoryLabels
      ]
    ]
  ]
  writer=[
    writerType=LUSequenceWriter
    outputs=[
      file=$OutDir$/output.rec.txt
      token=$DataDir$/output.txt
    ]
  ]
]
currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu
DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu
DeviceId=-1
timestamping=true

08/04/2016 09:24:59: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<

08/04/2016 09:24:59: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
08/04/2016 09:24:59: NdlDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
ExpDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu
OutDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu
precision="double"
deviceId = -1
command=LSTM:LSTMTest
traceLevel=1
LSTM=[
  action=train
  makeMode=true
  minibatchSize=10
  epochSize=4430000
  modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu/cntkdebug.dnn
  NDLNetworkBuilder=[
      networkDescription=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/lstm.ndl
  ]
  SGD=[
    learningRatesPerSample=0.1
    momentumPerMB=0.90
    gradientClippingWithTruncation=true
    clippingThresholdPerSample=15.0
    maxEpochs=3
    gradientcheck=false
    numMBsToShowResult=1000
    loadBestModel=true
    AutoAdjust=[
      autoAdjustLR=adjustafterepoch
      reduceLearnRateIfImproveLessThan=0
      increaseLearnRateIfImproveMoreThan=1000000000
      learnRateDecreaseFactor=0.5
      learnRateIncreaseFactor=1.382
      numMiniBatch4LRSearch=100
      numPrevLearnRates=5
      numBestSearchEpoch=1
    ]
    dropoutRate=0
  ]
  reader=[
    readerType=LUSequenceReader
    wordContext=0:1:2
    randomize=None
    nbruttsineachrecurrentiter=10
    wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu/sequenceSentence.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    unk="<unk>"
    wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
    file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.train.apos.pred.pos.head.IOB.simple
    features=[
      dim=0
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      usewordmap=true
      labelDim=10000
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu/sentenceLabels.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="O"
      endSequence="O"
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
    labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu/sentenceLabels.out.txt
      sectionType=labels
      mapping=[
        sectionType=labelMapping
      ]
      category=[
        sectionType=categoryLabels
      ]
    ]
  ]
  cvReader=[
    readerType=LUSequenceReader
    randomize=None
    wordContext=0:1:2
    wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu/sequenceSentence.valid.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    unk="<unk>"
    wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
    file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.dev.IOB.simple
    features=[
      dim=0
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      labelDim=10000
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu/sentenceLabels.in.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="O"
      endSequence="O"
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
      labelDim=10000
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu/sentenceLabels.out.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=3
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=3
        sectionType=categoryLabels
      ]
    ]
  ]
]
LSTMTest=[
  action=write
  minibatchSize=100
  epochSize=4430000
  defaultHiddenActivity=0.1
  modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu/cntkdebug.dnn
  outputNodeNames=outputs
  reader=[
    readerType=LUSequenceReader
    randomize=None
    wordContext=0:1:2
    unk="<unk>"
    wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
    file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.test.apos.pred.pos.head.IOB.simple
    wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu/sequenceSentence.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    features=[
      dim=0 
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      labelDim=10000
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu/sentenceLabels.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
      labelDim=127
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu/sentenceLabels.out.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=3
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=3
        sectionType=categoryLabels
      ]
    ]
  ]
  writer=[
    writerType=LUSequenceWriter
    outputs=[
      file=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu/output.rec.txt
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
    ]
  ]
]
currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu
DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu
DeviceId=-1
timestamping=true

08/04/2016 09:24:59: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<

08/04/2016 09:24:59: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
configparameters: rnnlu.ndl.cntk:command=LSTM:LSTMTest
configparameters: rnnlu.ndl.cntk:ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
configparameters: rnnlu.ndl.cntk:currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
configparameters: rnnlu.ndl.cntk:DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
configparameters: rnnlu.ndl.cntk:deviceId=-1
configparameters: rnnlu.ndl.cntk:ExpDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu
configparameters: rnnlu.ndl.cntk:LSTM=[
  action=train
  makeMode=true
  minibatchSize=10
  epochSize=4430000
  modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu/cntkdebug.dnn
  NDLNetworkBuilder=[
      networkDescription=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/lstm.ndl
  ]
  SGD=[
    learningRatesPerSample=0.1
    momentumPerMB=0.90
    gradientClippingWithTruncation=true
    clippingThresholdPerSample=15.0
    maxEpochs=3
    gradientcheck=false
    numMBsToShowResult=1000
    loadBestModel=true
    AutoAdjust=[
      autoAdjustLR=adjustafterepoch
      reduceLearnRateIfImproveLessThan=0
      increaseLearnRateIfImproveMoreThan=1000000000
      learnRateDecreaseFactor=0.5
      learnRateIncreaseFactor=1.382
      numMiniBatch4LRSearch=100
      numPrevLearnRates=5
      numBestSearchEpoch=1
    ]
    dropoutRate=0
  ]
  reader=[
    readerType=LUSequenceReader
    wordContext=0:1:2
    randomize=None
    nbruttsineachrecurrentiter=10
    wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu/sequenceSentence.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    unk="<unk>"
    wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
    file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.train.apos.pred.pos.head.IOB.simple
    features=[
      dim=0
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      usewordmap=true
      labelDim=10000
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu/sentenceLabels.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="O"
      endSequence="O"
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
    labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu/sentenceLabels.out.txt
      sectionType=labels
      mapping=[
        sectionType=labelMapping
      ]
      category=[
        sectionType=categoryLabels
      ]
    ]
  ]
  cvReader=[
    readerType=LUSequenceReader
    randomize=None
    wordContext=0:1:2
    wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu/sequenceSentence.valid.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    unk="<unk>"
    wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
    file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.dev.IOB.simple
    features=[
      dim=0
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      labelDim=10000
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu/sentenceLabels.in.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="O"
      endSequence="O"
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
      labelDim=10000
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu/sentenceLabels.out.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=3
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=3
        sectionType=categoryLabels
      ]
    ]
  ]
]

configparameters: rnnlu.ndl.cntk:LSTMTest=[
  action=write
  minibatchSize=100
  epochSize=4430000
  defaultHiddenActivity=0.1
  modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu/cntkdebug.dnn
  outputNodeNames=outputs
  reader=[
    readerType=LUSequenceReader
    randomize=None
    wordContext=0:1:2
    unk="<unk>"
    wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
    file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.test.apos.pred.pos.head.IOB.simple
    wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu/sequenceSentence.bin
    wsize=256
    wrecords=1000
    windowSize=10000
    features=[
      dim=0 
      sectionType=data
    ]
    sequence=[
      dim=1
      wrecords=2
      sectionType=data
    ]
    labelIn=[
      dim=1
      labelDim=10000
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu/sentenceLabels.txt
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      usewordmap=true
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=11
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=11
        sectionType=categoryLabels
      ]
    ]
    labels=[
      dim=1
      labelType=Category
      beginSequence="BOS"
      endSequence="EOS"
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
      labelDim=127
      labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu/sentenceLabels.out.txt
      elementSize=4
      sectionType=labels
      mapping=[
        wrecords=3
        elementSize=10
        sectionType=labelMapping
      ]
      category=[
        dim=3
        sectionType=categoryLabels
      ]
    ]
  ]
  writer=[
    writerType=LUSequenceWriter
    outputs=[
      file=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu/output.rec.txt
      token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
    ]
  ]
]

configparameters: rnnlu.ndl.cntk:NdlDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
configparameters: rnnlu.ndl.cntk:OutDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu
configparameters: rnnlu.ndl.cntk:OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu
configparameters: rnnlu.ndl.cntk:precision=double
configparameters: rnnlu.ndl.cntk:RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu
configparameters: rnnlu.ndl.cntk:timestamping=true
configparameters: rnnlu.ndl.cntk:traceLevel=1
08/04/2016 09:24:59: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
08/04/2016 09:24:59: Commands: LSTM LSTMTest
08/04/2016 09:24:59: Precision = "double"
08/04/2016 09:24:59: CNTKModelPath: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu/cntkdebug.dnn
08/04/2016 09:24:59: CNTKCommandTrainInfo: LSTM : 3
08/04/2016 09:24:59: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 3

08/04/2016 09:24:59: ##############################################################################
08/04/2016 09:24:59: #                                                                            #
08/04/2016 09:24:59: # Action "train"                                                             #
08/04/2016 09:24:59: #                                                                            #
08/04/2016 09:24:59: ##############################################################################

08/04/2016 09:24:59: CNTKCommandTrainBegin: LSTM
NDLBuilder Using CPU
BatchLUSequenceReader: Input file is C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.train.apos.pred.pos.head.IOB.simple
BatchLUSequenceReader: Input file is C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.dev.IOB.simple

08/04/2016 09:24:59: Creating virgin network.

Post-processing network...

4 roots:
	LSTMoutputW1 = Times()
	ce = CrossEntropyWithSoftmax()
	err = CrossEntropyWithSoftmax()
	outputs = Softmax()

Loop[0] --> Loop_LSTMoutput.outputTest -> 31 nodes

	LSTMoutput.delayHO	LSTMoutput.WhodelayHO	LSTMoutput.unnamed134
	LSTMoutput.delayHF	LSTMoutput.WhfdelayHF	LSTMoutput.unnamed131
	LSTMoutput.delayCF	LSTMoutput.WcfdelayCF	LSTMoutput.unnamed130
	LSTMoutput.ft	LSTMoutput.delayCC	LSTMoutput.bft
	LSTMoutput.delayHI	LSTMoutput.WhidelayHI	LSTMoutput.unnamed125
	LSTMoutput.delayCI	LSTMoutput.WcidelayCI	LSTMoutput.unnamed124
	LSTMoutput.it	LSTMoutput.delayHC	LSTMoutput.WhcdelayHC
	LSTMoutput.unnamed129	LSTMoutput.unnamed128	LSTMoutput.unnamed127
	LSTMoutput.bit	LSTMoutput.ct	LSTMoutput.Wcoct
	LSTMoutput.unnamed133	LSTMoutput.ot	LSTMoutput.unnamed136
	LSTMoutput.outputTest

Validating network. 62 nodes to process in pass 1.

Validating --> W1 = LearnableParameter() :  -> [127 x 300]
Validating --> LSTMoutput.Wxo = LearnableParameter() :  -> [300 x 150]
Validating --> Wlookup = LearnableParameter() :  -> [50 x 944]
Validating --> features = InputValue() :  -> [2832 x *]
Validating --> featLookuped = LookupTable (Wlookup, features) : [50 x 944], [2832 x *] -> [150 x *]
Validating --> LSTMoutput.Wxoinput = Times (LSTMoutput.Wxo, featLookuped) : [300 x 150], [150 x *] -> [300 x *]
Validating --> LSTMoutput.bo = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.unnamed135 = Plus (LSTMoutput.Wxoinput, LSTMoutput.bo) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> LSTMoutput.Who = LearnableParameter() :  -> [300 x 300]
Validating --> LSTMoutput.Wco = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.Wxf = LearnableParameter() :  -> [300 x 150]
Validating --> LSTMoutput.Wxfinput = Times (LSTMoutput.Wxf, featLookuped) : [300 x 150], [150 x *] -> [300 x *]
Validating --> LSTMoutput.bf = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.unnamed132 = Plus (LSTMoutput.Wxfinput, LSTMoutput.bf) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> LSTMoutput.Whf = LearnableParameter() :  -> [300 x 300]
Validating --> LSTMoutput.Wcf = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.Wxi = LearnableParameter() :  -> [300 x 150]
Validating --> LSTMoutput.WxiInput = Times (LSTMoutput.Wxi, featLookuped) : [300 x 150], [150 x *] -> [300 x *]
Validating --> LSTMoutput.bi = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.unnamed126 = Plus (LSTMoutput.WxiInput, LSTMoutput.bi) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> LSTMoutput.Whi = LearnableParameter() :  -> [300 x 300]
Validating --> LSTMoutput.Wci = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.Wxc = LearnableParameter() :  -> [300 x 150]
Validating --> LSTMoutput.WxcInput = Times (LSTMoutput.Wxc, featLookuped) : [300 x 150], [150 x *] -> [300 x *]
Validating --> LSTMoutput.Whc = LearnableParameter() :  -> [300 x 300]
Validating --> LSTMoutput.bc = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.WhodelayHO = Times (LSTMoutput.Who, LSTMoutput.delayHO) : [300 x 300], [300] -> [300]
Validating --> LSTMoutput.unnamed134 = Plus (LSTMoutput.unnamed135, LSTMoutput.WhodelayHO) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> LSTMoutput.WhfdelayHF = Times (LSTMoutput.Whf, LSTMoutput.delayHF) : [300 x 300], [300] -> [300]
Validating --> LSTMoutput.unnamed131 = Plus (LSTMoutput.unnamed132, LSTMoutput.WhfdelayHF) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> LSTMoutput.WcfdelayCF = DiagTimes (LSTMoutput.Wcf, LSTMoutput.delayCF) : [300 x 1], [300] -> [300]
Validating --> LSTMoutput.unnamed130 = Plus (LSTMoutput.unnamed131, LSTMoutput.WcfdelayCF) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> LSTMoutput.ft = Sigmoid (LSTMoutput.unnamed130) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.bft = ElementTimes (LSTMoutput.ft, LSTMoutput.delayCC) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> LSTMoutput.WhidelayHI = Times (LSTMoutput.Whi, LSTMoutput.delayHI) : [300 x 300], [300] -> [300]
Validating --> LSTMoutput.unnamed125 = Plus (LSTMoutput.unnamed126, LSTMoutput.WhidelayHI) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> LSTMoutput.WcidelayCI = DiagTimes (LSTMoutput.Wci, LSTMoutput.delayCI) : [300 x 1], [300] -> [300]
Validating --> LSTMoutput.unnamed124 = Plus (LSTMoutput.unnamed125, LSTMoutput.WcidelayCI) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> LSTMoutput.it = Sigmoid (LSTMoutput.unnamed124) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.WhcdelayHC = Times (LSTMoutput.Whc, LSTMoutput.delayHC) : [300 x 300], [300] -> [300]
Validating --> LSTMoutput.unnamed129 = Plus (LSTMoutput.WhcdelayHC, LSTMoutput.bc) : [300], [300 x 1] -> [300 x 1]
Validating --> LSTMoutput.unnamed128 = Plus (LSTMoutput.WxcInput, LSTMoutput.unnamed129) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> LSTMoutput.unnamed127 = Tanh (LSTMoutput.unnamed128) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.bit = ElementTimes (LSTMoutput.it, LSTMoutput.unnamed127) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.ct = Plus (LSTMoutput.bft, LSTMoutput.bit) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.Wcoct = DiagTimes (LSTMoutput.Wco, LSTMoutput.ct) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.unnamed133 = Plus (LSTMoutput.unnamed134, LSTMoutput.Wcoct) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.ot = Sigmoid (LSTMoutput.unnamed133) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.unnamed136 = Tanh (LSTMoutput.ct) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.outputTest = ElementTimes (LSTMoutput.ot, LSTMoutput.unnamed136) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutputW1 = Times (W1, LSTMoutput.outputTest) : [127 x 300], [300 x 1 x *] -> [127 x 1 x *]
Validating --> labels = InputValue() :  -> [127 x *]
Validating --> ce = CrossEntropyWithSoftmax (labels, LSTMoutputW1) : [127 x *], [127 x 1 x *] -> [1]
Validating --> err = CrossEntropyWithSoftmax (labels, LSTMoutputW1) : [127 x *], [127 x 1 x *] -> [1]
Validating --> outputs = Softmax (LSTMoutputW1) : [127 x 1 x *] -> [127 x 1 x *]

Validating network. 43 nodes to process in pass 2.

Validating --> LSTMoutput.delayHO = PastValue (LSTMoutput.outputTest) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.WhodelayHO = Times (LSTMoutput.Who, LSTMoutput.delayHO) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.delayHF = PastValue (LSTMoutput.outputTest) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.WhfdelayHF = Times (LSTMoutput.Whf, LSTMoutput.delayHF) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.delayCF = PastValue (LSTMoutput.ct) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.WcfdelayCF = DiagTimes (LSTMoutput.Wcf, LSTMoutput.delayCF) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.delayCC = PastValue (LSTMoutput.ct) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.delayHI = PastValue (LSTMoutput.outputTest) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.WhidelayHI = Times (LSTMoutput.Whi, LSTMoutput.delayHI) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.delayCI = PastValue (LSTMoutput.ct) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.WcidelayCI = DiagTimes (LSTMoutput.Wci, LSTMoutput.delayCI) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.delayHC = PastValue (LSTMoutput.outputTest) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.WhcdelayHC = Times (LSTMoutput.Whc, LSTMoutput.delayHC) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> LSTMoutput.unnamed129 = Plus (LSTMoutput.WhcdelayHC, LSTMoutput.bc) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]

Validating network. 14 nodes to process in pass 3.


Validating network, final pass.



19 out of 62 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

08/04/2016 09:24:59: Created model with 62 nodes on CPU.

08/04/2016 09:24:59: Training criterion node(s):
08/04/2016 09:24:59: 	ce = CrossEntropyWithSoftmax

08/04/2016 09:24:59: Evaluation criterion node(s):

08/04/2016 09:24:59: 	err = CrossEntropyWithSoftmax


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

0000000000000000: {[err Gradient[1]] [features Gradient[2832 x *]] [labels Gradient[127 x *]] [outputs Gradient[127 x 1 x *]] }
0000003398EDA180: {[LSTMoutput.Wcoct Value[300 x 1 x *]] }
0000003398EDA220: {[LSTMoutput.Wco Gradient[300 x 1]] }
0000003398EDA2C0: {[LSTMoutput.unnamed133 Value[300 x 1 x *]] }
0000003398EDA360: {[LSTMoutput.WhodelayHO Value[300 x 1 x *]] }
0000003398EDA4A0: {[LSTMoutput.bft Value[300 x 1 x *]] }
0000003398EDA540: {[LSTMoutput.WhidelayHI Value[300 x 1 x *]] }
0000003398EDA5E0: {[LSTMoutput.ot Gradient[300 x 1 x *]] [LSTMoutputW1 Gradient[127 x 1 x *]] }
0000003398EDA680: {[LSTMoutput.unnamed124 Value[300 x 1 x *]] }
0000003398EDA720: {[LSTMoutput.unnamed136 Gradient[300 x 1 x *]] }
0000003398EDA860: {[LSTMoutput.bit Gradient[300 x 1 x *]] }
0000003398EDA900: {[LSTMoutput.unnamed136 Value[300 x 1 x *]] }
0000003398EDA9A0: {[LSTMoutput.unnamed127 Gradient[300 x 1 x *]] }
0000003398EDAA40: {[LSTMoutput.it Value[300 x 1 x *]] }
0000003398EDAAE0: {[LSTMoutput.WhcdelayHC Gradient[300 x 1 x *]] }
0000003398EDAB80: {[LSTMoutput.WhfdelayHF Value[300 x 1 x *]] }
0000003398EDAC20: {[W1 Gradient[127 x 300]] }
0000003398EDACC0: {[LSTMoutput.WcfdelayCF Value[300 x 1 x *]] }
0000003398EDAD60: {[LSTMoutput.ot Value[300 x 1 x *]] }
0000003398EDAE00: {[LSTMoutput.outputTest Gradient[300 x 1 x *]] }
0000003398EDAF40: {[LSTMoutput.outputTest Value[300 x 1 x *]] }
0000003398EDB080: {[LSTMoutput.unnamed134 Gradient[300 x 1 x *]] }
0000003398EDB120: {[LSTMoutput.unnamed129 Value[300 x 1 x *]] }
0000003398EDB1C0: {[ce Gradient[1]] }
0000003398EDB260: {[LSTMoutput.unnamed131 Value[300 x 1 x *]] }
0000003398EDB300: {[LSTMoutput.bit Value[300 x 1 x *]] }
0000003398EDB3A0: {[LSTMoutput.ct Value[300 x 1 x *]] }
0000003398EDB440: {[LSTMoutput.unnamed133 Gradient[300 x 1 x *]] }
0000003398EDB4E0: {[LSTMoutput.WcidelayCI Value[300 x 1 x *]] }
0000003398EDB580: {[LSTMoutput.Wcoct Gradient[300 x 1 x *]] }
0000003398EDB620: {[LSTMoutput.bft Gradient[300 x 1 x *]] }
0000003398EDB6C0: {[LSTMoutput.it Gradient[300 x 1 x *]] }
0000003398EDB760: {[LSTMoutput.WxcInput Gradient[300 x *]] [LSTMoutput.bi Gradient[300 x 1]] }
0000003398EDB8A0: {[LSTMoutput.unnamed128 Gradient[300 x 1 x *]] }
0000003398EDB940: {[LSTMoutput.bc Gradient[300 x 1]] }
0000003398EDB9E0: {[LSTMoutput.unnamed134 Value[300 x 1 x *]] }
0000003398EDBA80: {[LSTMoutput.unnamed125 Value[300 x 1 x *]] }
0000003398EDBB20: {[LSTMoutput.unnamed128 Value[300 x 1 x *]] }
0000003398EDBC60: {[LSTMoutput.unnamed129 Gradient[300 x 1 x *]] }
0000003398EDBD00: {[LSTMoutput.unnamed130 Value[300 x 1 x *]] }
0000003398EDBDA0: {[LSTMoutput.ct Gradient[300 x 1 x *]] }
0000003398EDBE40: {[LSTMoutput.WhcdelayHC Value[300 x 1 x *]] }
0000003398EDBEE0: {[LSTMoutput.WxcInput Value[300 x *]] [LSTMoutput.WxiInput Gradient[300 x *]] [LSTMoutput.bf Gradient[300 x 1]] }
0000003398EDBF80: {[LSTMoutput.unnamed127 Value[300 x 1 x *]] }
0000003398EDC020: {[LSTMoutput.ft Value[300 x 1 x *]] }
0000003398EDE380: {[LSTMoutput.Whi Gradient[300 x 300]] }
0000003398EDE600: {[LSTMoutput.Whc Gradient[300 x 300]] }
0000003398EDE6A0: {[LSTMoutput.WcidelayCI Gradient[300 x 1 x *]] }
0000003398EDE740: {[LSTMoutput.delayHC Gradient[300 x 1 x *]] }
0000003398EDE880: {[LSTMoutput.Wci Gradient[300 x 1]] }
0000003398EDE920: {[LSTMoutput.unnamed132 Gradient[300 x 1 x *]] }
0000003398EDE9C0: {[LSTMoutput.Whf Gradient[300 x 300]] }
0000003398EDEBA0: {[LSTMoutput.ft Gradient[300 x 1 x *]] }
0000003398EDEC40: {[LSTMoutput.unnamed126 Gradient[300 x 1 x *]] }
0000003398EDECE0: {[LSTMoutput.unnamed130 Gradient[300 x 1 x *]] }
0000003398EDEE20: {[LSTMoutput.WhidelayHI Gradient[300 x 1 x *]] }
0000003398EDEEC0: {[LSTMoutput.WhfdelayHF Gradient[300 x 1 x *]] }
0000003398EDF0A0: {[LSTMoutput.unnamed125 Gradient[300 x 1 x *]] }
0000003398EDF140: {[LSTMoutput.unnamed135 Gradient[300 x 1 x *]] }
0000003398EDF280: {[LSTMoutput.delayCC Gradient[300 x 1 x *]] }
0000003398EDF320: {[LSTMoutput.delayHO Gradient[300 x 1 x *]] [featLookuped Gradient[150 x *]] }
0000003398EDF500: {[LSTMoutput.delayCF Gradient[300 x 1 x *]] }
0000003398EDF820: {[LSTMoutput.unnamed124 Gradient[300 x 1 x *]] }
0000003398EDFA00: {[LSTMoutput.delayHI Gradient[300 x 1 x *]] }
0000003398EDFAA0: {[LSTMoutput.Wcf Gradient[300 x 1]] }
0000003398EDFB40: {[LSTMoutput.WhodelayHO Gradient[300 x 1 x *]] }
0000003398EDFD20: {[LSTMoutput.unnamed131 Gradient[300 x 1 x *]] }
0000003398EDFE60: {[LSTMoutput.delayCI Gradient[300 x 1 x *]] }
0000003398EDFF00: {[LSTMoutput.delayHF Gradient[300 x 1 x *]] }
0000003398EDFFA0: {[LSTMoutput.Who Gradient[300 x 300]] }
0000003398EE0040: {[LSTMoutput.WcfdelayCF Gradient[300 x 1 x *]] }
0000003398EFC570: {[LSTMoutput.Wxi Gradient[300 x 150]] [LSTMoutput.unnamed126 Value[300 x 1 x *]] }
0000003398EFC7F0: {[err Value[1]] }
0000003398EFD330: {[W1 Value[127 x 300]] }
0000003398EFDDD0: {[LSTMoutputW1 Value[127 x 1 x *]] }
0000003398EFDE70: {[outputs Value[127 x 1 x *]] }
0000003398EFDF10: {[ce Value[1]] }
0000003398EFDFB0: {[LSTMoutput.Wxoinput Value[300 x *]] [Wlookup Gradient[50 x 944]] }
0000003398EFE190: {[LSTMoutput.Wxo Gradient[300 x 150]] [LSTMoutput.unnamed135 Value[300 x 1 x *]] }
0000003398EFE230: {[LSTMoutput.Wxfinput Value[300 x *]] [LSTMoutput.Wxoinput Gradient[300 x *]] }
0000003398EFE2D0: {[LSTMoutput.Wxf Gradient[300 x 150]] [LSTMoutput.unnamed132 Value[300 x 1 x *]] }
0000003398EFE370: {[featLookuped Value[150 x *]] }
0000003398EFE410: {[LSTMoutput.Wxfinput Gradient[300 x *]] [LSTMoutput.WxiInput Value[300 x *]] [LSTMoutput.bo Gradient[300 x 1]] }
00000033A798DA00: {[labels Value[127 x *]] }
00000033A86407F0: {[features Value[2832 x *]] }
00000033A86464F0: {[LSTMoutput.Wxf Value[300 x 150]] }
00000033A8646590: {[LSTMoutput.Wxc Value[300 x 150]] }
00000033A8646810: {[LSTMoutput.Wcf Value[300 x 1]] }
00000033A86469F0: {[LSTMoutput.Whc Value[300 x 300]] }
00000033A8646B30: {[LSTMoutput.delayHC Value[300 x 1 x *]] }
00000033A8646D10: {[LSTMoutput.delayHI Value[300 x 1 x *]] }
00000033A8646DB0: {[LSTMoutput.delayHF Value[300 x 1 x *]] }
00000033A8646F90: {[LSTMoutput.delayCF Value[300 x 1 x *]] }
00000033A8647210: {[LSTMoutput.Wxc Gradient[300 x 150]] [LSTMoutput.delayHO Value[300 x 1 x *]] }
00000033A8647350: {[LSTMoutput.delayCI Value[300 x 1 x *]] }
00000033A8647490: {[LSTMoutput.delayCC Value[300 x 1 x *]] }
00000033A86477B0: {[LSTMoutput.Who Value[300 x 300]] }
00000033A8647850: {[LSTMoutput.Wxi Value[300 x 150]] }
00000033A86478F0: {[Wlookup Value[50 x 944]] }
00000033A8647990: {[LSTMoutput.Whi Value[300 x 300]] }
00000033A8647B70: {[LSTMoutput.Wxo Value[300 x 150]] }
00000033A8647CB0: {[LSTMoutput.Whf Value[300 x 300]] }
00000033A8647D50: {[LSTMoutput.bi Value[300 x 1]] }
00000033A8647DF0: {[LSTMoutput.bf Value[300 x 1]] }
00000033A8647E90: {[LSTMoutput.bo Value[300 x 1]] }
00000033A8647F30: {[LSTMoutput.bc Value[300 x 1]] }
00000033A8648070: {[LSTMoutput.Wco Value[300 x 1]] }
00000033A86481B0: {[LSTMoutput.Wci Value[300 x 1]] }

08/04/2016 09:24:59: No PreCompute nodes found, skipping PreCompute step.

08/04/2016 09:24:59: Starting Epoch 1: learning rate per sample = 0.100000  effective momentum = 0.900000  momentum as time constant = 94.9 samples

08/04/2016 09:24:59: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 51 lines with a total of 36+51 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 09:24:59: Finished Epoch[ 1 of 3]: [Training] ce = 4.73985552 * 81; err = 4.73985552 * 81; totalSamplesSeen = 81; learningRatePerSample = 0.1; epochTime=0.099474s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 51 lines with a total of 36+51 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 09:24:59: Final Results: Minibatch[1-51]: ce = 4.47236315 * 81; perplexity = 87.56340456; err = 4.47236315 * 81; perplexity = 87.56340456
08/04/2016 09:24:59: Finished Epoch[ 1 of 3]: [Validate] ce = 4.47236315 * 81; err = 4.47236315 * 81
08/04/2016 09:24:59: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu/cntkdebug.dnn.1'

08/04/2016 09:24:59: Starting Epoch 2: learning rate per sample = 0.100000  effective momentum = 0.900000  momentum as time constant = 94.9 samples

08/04/2016 09:24:59: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 51 lines with a total of 36+51 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 09:24:59: Finished Epoch[ 2 of 3]: [Training] ce = 4.18123967 * 81; err = 4.18123967 * 81; totalSamplesSeen = 162; learningRatePerSample = 0.1; epochTime=0.0913s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 51 lines with a total of 36+51 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 09:24:59: Final Results: Minibatch[1-51]: ce = 3.57867566 * 81; perplexity = 35.82606362; err = 3.57867566 * 81; perplexity = 35.82606362
08/04/2016 09:24:59: Finished Epoch[ 2 of 3]: [Validate] ce = 3.57867566 * 81; err = 3.57867566 * 81
08/04/2016 09:25:00: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu/cntkdebug.dnn.2'

08/04/2016 09:25:00: Starting Epoch 3: learning rate per sample = 0.100000  effective momentum = 0.900000  momentum as time constant = 94.9 samples

08/04/2016 09:25:00: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 51 lines with a total of 36+51 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 09:25:00: Finished Epoch[ 3 of 3]: [Training] ce = 2.99693329 * 81; err = 2.99693329 * 81; totalSamplesSeen = 243; learningRatePerSample = 0.1; epochTime=0.128017s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 51 lines with a total of 36+51 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 09:25:00: Final Results: Minibatch[1-51]: ce = 2.27111876 * 81; perplexity = 9.69023576; err = 2.27111876 * 81; perplexity = 9.69023576
08/04/2016 09:25:00: Finished Epoch[ 3 of 3]: [Validate] ce = 2.27111876 * 81; err = 2.27111876 * 81
08/04/2016 09:25:00: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091806.347762\Text_SLU@release_cpu/cntkdebug.dnn'
08/04/2016 09:25:00: CNTKCommandTrainEnd: LSTM

08/04/2016 09:25:00: Action "train" complete.


08/04/2016 09:25:00: ##############################################################################
08/04/2016 09:25:00: #                                                                            #
08/04/2016 09:25:00: # Action "write"                                                             #
08/04/2016 09:25:00: #                                                                            #
08/04/2016 09:25:00: ##############################################################################

BatchLUSequenceReader: Input file is C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.test.apos.pred.pos.head.IOB.simple

Post-processing network...

3 roots:
	ce = CrossEntropyWithSoftmax()
	err = CrossEntropyWithSoftmax()
	outputs = Softmax()

Loop[0] --> Loop_LSTMoutput.outputTest -> 31 nodes

	LSTMoutput.delayHO	LSTMoutput.WhodelayHO	LSTMoutput.unnamed134
	LSTMoutput.delayHF	LSTMoutput.WhfdelayHF	LSTMoutput.unnamed131
	LSTMoutput.delayCF	LSTMoutput.WcfdelayCF	LSTMoutput.unnamed130
	LSTMoutput.ft	LSTMoutput.delayCC	LSTMoutput.bft
	LSTMoutput.delayHI	LSTMoutput.WhidelayHI	LSTMoutput.unnamed125
	LSTMoutput.delayCI	LSTMoutput.WcidelayCI	LSTMoutput.unnamed124
	LSTMoutput.it	LSTMoutput.delayHC	LSTMoutput.WhcdelayHC
	LSTMoutput.unnamed129	LSTMoutput.unnamed128	LSTMoutput.unnamed127
	LSTMoutput.bit	LSTMoutput.ct	LSTMoutput.Wcoct
	LSTMoutput.unnamed133	LSTMoutput.ot	LSTMoutput.unnamed136
	LSTMoutput.outputTest

Validating network. 62 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [127 x *1]
Validating --> W1 = LearnableParameter() :  -> [127 x 300]
Validating --> LSTMoutput.Wxo = LearnableParameter() :  -> [300 x 150]
Validating --> Wlookup = LearnableParameter() :  -> [50 x 944]
Validating --> features = InputValue() :  -> [2832 x *1]
Validating --> featLookuped = LookupTable (Wlookup, features) : [50 x 944], [2832 x *1] -> [150 x *1]
Validating --> LSTMoutput.Wxoinput = Times (LSTMoutput.Wxo, featLookuped) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> LSTMoutput.bo = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.unnamed135 = Plus (LSTMoutput.Wxoinput, LSTMoutput.bo) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.Who = LearnableParameter() :  -> [300 x 300]
Validating --> LSTMoutput.Wco = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.Wxf = LearnableParameter() :  -> [300 x 150]
Validating --> LSTMoutput.Wxfinput = Times (LSTMoutput.Wxf, featLookuped) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> LSTMoutput.bf = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.unnamed132 = Plus (LSTMoutput.Wxfinput, LSTMoutput.bf) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.Whf = LearnableParameter() :  -> [300 x 300]
Validating --> LSTMoutput.Wcf = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.Wxi = LearnableParameter() :  -> [300 x 150]
Validating --> LSTMoutput.WxiInput = Times (LSTMoutput.Wxi, featLookuped) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> LSTMoutput.bi = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.unnamed126 = Plus (LSTMoutput.WxiInput, LSTMoutput.bi) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.Whi = LearnableParameter() :  -> [300 x 300]
Validating --> LSTMoutput.Wci = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.Wxc = LearnableParameter() :  -> [300 x 150]
Validating --> LSTMoutput.WxcInput = Times (LSTMoutput.Wxc, featLookuped) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> LSTMoutput.Whc = LearnableParameter() :  -> [300 x 300]
Validating --> LSTMoutput.bc = LearnableParameter() :  -> [300 x 1]
Validating --> LSTMoutput.WhodelayHO = Times (LSTMoutput.Who, LSTMoutput.delayHO) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> LSTMoutput.unnamed134 = Plus (LSTMoutput.unnamed135, LSTMoutput.WhodelayHO) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WhfdelayHF = Times (LSTMoutput.Whf, LSTMoutput.delayHF) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> LSTMoutput.unnamed131 = Plus (LSTMoutput.unnamed132, LSTMoutput.WhfdelayHF) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WcfdelayCF = DiagTimes (LSTMoutput.Wcf, LSTMoutput.delayCF) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> LSTMoutput.unnamed130 = Plus (LSTMoutput.unnamed131, LSTMoutput.WcfdelayCF) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.ft = Sigmoid (LSTMoutput.unnamed130) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.bft = ElementTimes (LSTMoutput.ft, LSTMoutput.delayCC) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WhidelayHI = Times (LSTMoutput.Whi, LSTMoutput.delayHI) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> LSTMoutput.unnamed125 = Plus (LSTMoutput.unnamed126, LSTMoutput.WhidelayHI) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WcidelayCI = DiagTimes (LSTMoutput.Wci, LSTMoutput.delayCI) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> LSTMoutput.unnamed124 = Plus (LSTMoutput.unnamed125, LSTMoutput.WcidelayCI) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.it = Sigmoid (LSTMoutput.unnamed124) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WhcdelayHC = Times (LSTMoutput.Whc, LSTMoutput.delayHC) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> LSTMoutput.unnamed129 = Plus (LSTMoutput.WhcdelayHC, LSTMoutput.bc) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> LSTMoutput.unnamed128 = Plus (LSTMoutput.WxcInput, LSTMoutput.unnamed129) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> LSTMoutput.unnamed127 = Tanh (LSTMoutput.unnamed128) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.bit = ElementTimes (LSTMoutput.it, LSTMoutput.unnamed127) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.ct = Plus (LSTMoutput.bft, LSTMoutput.bit) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.Wcoct = DiagTimes (LSTMoutput.Wco, LSTMoutput.ct) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.unnamed133 = Plus (LSTMoutput.unnamed134, LSTMoutput.Wcoct) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.ot = Sigmoid (LSTMoutput.unnamed133) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.unnamed136 = Tanh (LSTMoutput.ct) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.outputTest = ElementTimes (LSTMoutput.ot, LSTMoutput.unnamed136) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutputW1 = Times (W1, LSTMoutput.outputTest) : [127 x 300], [300 x 1 x *1] -> [127 x 1 x *1]
Validating --> ce = CrossEntropyWithSoftmax (labels, LSTMoutputW1) : [127 x *1], [127 x 1 x *1] -> [1]
Validating --> err = CrossEntropyWithSoftmax (labels, LSTMoutputW1) : [127 x *1], [127 x 1 x *1] -> [1]
Validating --> outputs = Softmax (LSTMoutputW1) : [127 x 1 x *1] -> [127 x 1 x *1]

Validating network. 43 nodes to process in pass 2.

Validating --> LSTMoutput.delayHO = PastValue (LSTMoutput.outputTest) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WhodelayHO = Times (LSTMoutput.Who, LSTMoutput.delayHO) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.delayHF = PastValue (LSTMoutput.outputTest) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WhfdelayHF = Times (LSTMoutput.Whf, LSTMoutput.delayHF) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.delayCF = PastValue (LSTMoutput.ct) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WcfdelayCF = DiagTimes (LSTMoutput.Wcf, LSTMoutput.delayCF) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.delayCC = PastValue (LSTMoutput.ct) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.delayHI = PastValue (LSTMoutput.outputTest) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WhidelayHI = Times (LSTMoutput.Whi, LSTMoutput.delayHI) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.delayCI = PastValue (LSTMoutput.ct) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WcidelayCI = DiagTimes (LSTMoutput.Wci, LSTMoutput.delayCI) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.delayHC = PastValue (LSTMoutput.outputTest) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.WhcdelayHC = Times (LSTMoutput.Whc, LSTMoutput.delayHC) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> LSTMoutput.unnamed129 = Plus (LSTMoutput.WhcdelayHC, LSTMoutput.bc) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]

Validating network. 14 nodes to process in pass 3.


Validating network, final pass.



19 out of 62 nodes do not share the minibatch layout with the input data.

Post-processing network complete.



Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

0000000000000000: {[LSTMoutput.Wcf Gradient[300 x 1]] [LSTMoutput.WcfdelayCF Gradient[300 x 1 x *1]] [LSTMoutput.Wci Gradient[300 x 1]] [LSTMoutput.WcidelayCI Gradient[300 x 1 x *1]] [LSTMoutput.Wco Gradient[300 x 1]] [LSTMoutput.Wcoct Gradient[300 x 1 x *1]] [LSTMoutput.Whc Gradient[300 x 300]] [LSTMoutput.WhcdelayHC Gradient[300 x 1 x *1]] [LSTMoutput.Whf Gradient[300 x 300]] [LSTMoutput.WhfdelayHF Gradient[300 x 1 x *1]] [LSTMoutput.Whi Gradient[300 x 300]] [LSTMoutput.WhidelayHI Gradient[300 x 1 x *1]] [LSTMoutput.Who Gradient[300 x 300]] [LSTMoutput.WhodelayHO Gradient[300 x 1 x *1]] [LSTMoutput.Wxc Gradient[300 x 150]] [LSTMoutput.WxcInput Gradient[300 x *1]] [LSTMoutput.Wxf Gradient[300 x 150]] [LSTMoutput.Wxfinput Gradient[300 x *1]] [LSTMoutput.Wxi Gradient[300 x 150]] [LSTMoutput.WxiInput Gradient[300 x *1]] [LSTMoutput.Wxo Gradient[300 x 150]] [LSTMoutput.Wxoinput Gradient[300 x *1]] [LSTMoutput.bc Gradient[300 x 1]] [LSTMoutput.bf Gradient[300 x 1]] [LSTMoutput.bft Gradient[300 x 1 x *1]] [LSTMoutput.bi Gradient[300 x 1]] [LSTMoutput.bit Gradient[300 x 1 x *1]] [LSTMoutput.bo Gradient[300 x 1]] [LSTMoutput.ct Gradient[300 x 1 x *1]] [LSTMoutput.delayCC Gradient[300 x 1 x *1]] [LSTMoutput.delayCF Gradient[300 x 1 x *1]] [LSTMoutput.delayCI Gradient[300 x 1 x *1]] [LSTMoutput.delayHC Gradient[300 x 1 x *1]] [LSTMoutput.delayHF Gradient[300 x 1 x *1]] [LSTMoutput.delayHI Gradient[300 x 1 x *1]] [LSTMoutput.delayHO Gradient[300 x 1 x *1]] [LSTMoutput.ft Gradient[300 x 1 x *1]] [LSTMoutput.it Gradient[300 x 1 x *1]] [LSTMoutput.ot Gradient[300 x 1 x *1]] [LSTMoutput.outputTest Gradient[300 x 1 x *1]] [LSTMoutput.unnamed124 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed125 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed126 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed127 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed128 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed129 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed130 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed131 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed132 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed133 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed134 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed135 Gradient[300 x 1 x *1]] [LSTMoutput.unnamed136 Gradient[300 x 1 x *1]] [LSTMoutputW1 Gradient[127 x 1 x *1]] [W1 Gradient[127 x 300]] [Wlookup Gradient[50 x 944]] [ce Gradient[1]] [ce Value[1]] [err Gradient[1]] [err Value[1]] [featLookuped Gradient[150 x *1]] [features Gradient[2832 x *1]] [labels Gradient[127 x *1]] [outputs Gradient[127 x 1 x *1]] }
00000033A798DAA0: {[LSTMoutput.Wci Value[300 x 1]] }
00000033A7AD5460: {[LSTMoutput.unnamed130 Value[300 x 1 x *1]] }
00000033A7AD5500: {[LSTMoutput.ot Value[300 x 1 x *1]] }
00000033A7AD5780: {[LSTMoutput.ct Value[300 x 1 x *1]] }
00000033A7AD5820: {[LSTMoutputW1 Value[127 x 1 x *1]] }
00000033A7AD5960: {[LSTMoutput.unnamed129 Value[300 x 1 x *1]] }
00000033A7AD5A00: {[LSTMoutput.unnamed128 Value[300 x 1 x *1]] }
00000033A7AD5AA0: {[LSTMoutput.unnamed133 Value[300 x 1 x *1]] }
00000033A7AD5D20: {[LSTMoutput.unnamed131 Value[300 x 1 x *1]] }
00000033A7AD5DC0: {[LSTMoutput.WhidelayHI Value[300 x 1 x *1]] }
00000033A7AD5E60: {[LSTMoutput.outputTest Value[300 x 1 x *1]] }
00000033A7AD5FA0: {[LSTMoutput.unnamed125 Value[300 x 1 x *1]] }
00000033A7AD6040: {[LSTMoutput.unnamed127 Value[300 x 1 x *1]] }
00000033A7AD6220: {[LSTMoutput.WcidelayCI Value[300 x 1 x *1]] }
00000033A7AD62C0: {[LSTMoutput.unnamed124 Value[300 x 1 x *1]] }
00000033A7AD6360: {[LSTMoutput.unnamed136 Value[300 x 1 x *1]] }
00000033A7AD6400: {[LSTMoutput.WcfdelayCF Value[300 x 1 x *1]] }
00000033A7AD6900: {[LSTMoutput.WhcdelayHC Value[300 x 1 x *1]] }
00000033A7AD6AE0: {[LSTMoutput.ft Value[300 x 1 x *1]] }
00000033A7AD6B80: {[LSTMoutput.it Value[300 x 1 x *1]] }
00000033A7AD6D60: {[LSTMoutput.Wcoct Value[300 x 1 x *1]] }
00000033A7AD6F40: {[LSTMoutput.bft Value[300 x 1 x *1]] }
00000033A7AD7300: {[LSTMoutput.bit Value[300 x 1 x *1]] }
00000033A86406B0: {[LSTMoutput.Wcf Value[300 x 1]] }
00000033A86464F0: {[LSTMoutput.Wxc Value[300 x 150]] }
00000033A8646590: {[outputs Value[127 x 1 x *1]] }
00000033A8646630: {[LSTMoutput.Wxoinput Value[300 x *1]] }
00000033A86466D0: {[LSTMoutput.unnamed135 Value[300 x 1 x *1]] }
00000033A8646770: {[LSTMoutput.Wxfinput Value[300 x *1]] }
00000033A8646810: {[featLookuped Value[150 x *1]] }
00000033A86468B0: {[LSTMoutput.Wco Value[300 x 1]] }
00000033A8646C70: {[LSTMoutput.unnamed132 Value[300 x 1 x *1]] }
00000033A8646D10: {[LSTMoutput.WxiInput Value[300 x *1]] }
00000033A8646E50: {[LSTMoutput.unnamed126 Value[300 x 1 x *1]] }
00000033A8646EF0: {[LSTMoutput.WxcInput Value[300 x *1]] }
00000033A8647030: {[LSTMoutput.WhodelayHO Value[300 x 1 x *1]] }
00000033A86470D0: {[LSTMoutput.Whf Value[300 x 300]] }
00000033A8647170: {[LSTMoutput.unnamed134 Value[300 x 1 x *1]] }
00000033A8647490: {[LSTMoutput.WhfdelayHF Value[300 x 1 x *1]] }
00000033A8647670: {[LSTMoutput.Who Value[300 x 300]] }
00000033A8647710: {[LSTMoutput.Whc Value[300 x 300]] }
00000033A86477B0: {[LSTMoutput.Whi Value[300 x 300]] }
00000033A8647990: {[LSTMoutput.Wxo Value[300 x 150]] }
00000033A8647A30: {[W1 Value[127 x 300]] }
00000033A8647AD0: {[Wlookup Value[50 x 944]] }
00000033A8647FD0: {[LSTMoutput.Wxf Value[300 x 150]] }
00000033A8648070: {[LSTMoutput.Wxi Value[300 x 150]] }
00000033A87AA860: {[LSTMoutput.delayHI Value[300 x 1 x *1]] }
00000033A87AACC0: {[LSTMoutput.bc Value[300 x 1]] }
00000033A87AAE00: {[LSTMoutput.bi Value[300 x 1]] }
00000033A87AAF40: {[LSTMoutput.bo Value[300 x 1]] }
00000033A87AB260: {[LSTMoutput.bf Value[300 x 1]] }
00000033A87AB800: {[LSTMoutput.delayCC Value[300 x 1 x *1]] }
00000033A87AB8A0: {[LSTMoutput.delayHO Value[300 x 1 x *1]] }
00000033A87ABC60: {[LSTMoutput.delayHC Value[300 x 1 x *1]] }
00000033A87AC020: {[LSTMoutput.delayHF Value[300 x 1 x *1]] }
00000033A87AC0C0: {[LSTMoutput.delayCF Value[300 x 1 x *1]] }
00000033A87AC340: {[labels Value[127 x *1]] }
00000033A87AC480: {[features Value[2832 x *1]] }
00000033A87AC660: {[LSTMoutput.delayCI Value[300 x 1 x *1]] }

BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 5 lines with a total of 92+5 tokens.
O O O O O O O O O O O O O O O O O O O O O 
O O O O O O O O O O O O O O O O O O 
O O O O O O O O O O O O O O O 
O O O O O O O O O O O O O O O O O O 
O O O O O O O O O O O O O O O O O O O 
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
Total Samples Evaluated = 91

08/04/2016 09:25:01: Action "write" complete.

08/04/2016 09:25:01: __COMPLETED__