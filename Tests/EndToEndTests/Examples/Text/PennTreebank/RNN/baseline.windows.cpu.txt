CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU W3565 @ 3.20GHz
    Hardware threads: 8
    Total Memory: 12580436 kB
-------------------------------------------------------------------
=== Running /cygdrive/c/jenkins/workspace/CNTK-Test-Windows-W1/x64/release/cntk.exe configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Config/rnn.cntk currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Config OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu DeviceId=-1 timestamping=true initOnCPUOnly=true command=writeWordAndClassInfo:train:test train=[SGD=[maxEpochs=3]] train=[epochSize=2048]] test=[SGD=[maxEpochs=3]] train=[epochSize=2048]]
-------------------------------------------------------------------
Build info: 

		Built time: Aug  4 2016 06:18:04
		Last modified date: Thu Aug  4 03:39:14 2016
		Build type: Release
		Build target: GPU
		With 1bit-SGD: no
		Math lib: mkl
		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
		CUB_PATH: C:\src\cub-1.4.1
		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
		Build Branch: HEAD
		Build SHA1: 0f61695dfc335f2406284d335678f57c215e6e9c
		Built by svcphil on dphaim-26-new
		Build Path: c:\jenkins\workspace\CNTK-Build-Windows@3\Source\CNTK\
-------------------------------------------------------------------
Changed current directory to C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data
08/04/2016 08:09:50: -------------------------------------------------------------------
08/04/2016 08:09:50: Build info: 

08/04/2016 08:09:50: 		Built time: Aug  4 2016 06:18:04
08/04/2016 08:09:50: 		Last modified date: Thu Aug  4 03:39:14 2016
08/04/2016 08:09:50: 		Build type: Release
08/04/2016 08:09:50: 		Build target: GPU
08/04/2016 08:09:50: 		With 1bit-SGD: no
08/04/2016 08:09:50: 		Math lib: mkl
08/04/2016 08:09:50: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
08/04/2016 08:09:50: 		CUB_PATH: C:\src\cub-1.4.1
08/04/2016 08:09:50: 		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
08/04/2016 08:09:50: 		Build Branch: HEAD
08/04/2016 08:09:50: 		Build SHA1: 0f61695dfc335f2406284d335678f57c215e6e9c
08/04/2016 08:09:50: 		Built by svcphil on dphaim-26-new
08/04/2016 08:09:50: 		Build Path: c:\jenkins\workspace\CNTK-Build-Windows@3\Source\CNTK\
08/04/2016 08:09:50: -------------------------------------------------------------------
08/04/2016 08:09:51: -------------------------------------------------------------------
08/04/2016 08:09:51: GPU info:

08/04/2016 08:09:51: 		Device[0]: cores = 2496; computeCapability = 5.2; type = "Quadro M4000"; memory = 8192 MB
08/04/2016 08:09:51: -------------------------------------------------------------------

08/04/2016 08:09:51: Running on cntk-muc01 at 2016/08/04 08:09:51
08/04/2016 08:09:51: Command line: 
C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\release\cntk.exe  configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Config/rnn.cntk  currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data  RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu  DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data  ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Config  OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu  DeviceId=-1  timestamping=true  initOnCPUOnly=true  command=writeWordAndClassInfo:train:test  train=[SGD=[maxEpochs=3]]  train=[epochSize=2048]]  test=[SGD=[maxEpochs=3]]  train=[epochSize=2048]]



08/04/2016 08:09:51: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
08/04/2016 08:09:51: RootDir = ".."
ConfigDir = "$RootDir$/Config"
DataDir   = "$RootDir$/Data"
OutputDir = "$RootDir$/Output"
ModelDir  = "$OutputDir$/Models"
deviceId = "auto"
command = writeWordAndClassInfo:train:test:write
precision  = "float"
traceLevel = 1
modelPath  = "$ModelDir$/rnn.dnn"
numCPUThreads = 1
confVocabSize = 10000
confClassSize = 50
trainFile = "ptb.train.txt"
validFile = "ptb.valid.txt"
testFile  = "ptb.test.txt"
writeWordAndClassInfo = [
    action = "writeWordAndClass"
    inputFile = "$DataDir$/$trainFile$"
    beginSequence = "</s>"
    endSequence   = "</s>"
    outputVocabFile = "$ModelDir$/vocab.txt"
    outputWord2Cls  = "$ModelDir$/word2cls.txt"
    outputCls2Index = "$ModelDir$/cls2idx.txt"
    vocabSize = "$confVocabSize$"
    nbrClass = "$confClassSize$"
    cutoff = 0
    printValues = true
]
train = [
    action = "train"
    traceLevel = 1
epochSize = 0               
    SimpleNetworkBuilder = [
rnnType = "CLASSLSTM"   
recurrentLayer = 1      
        trainingCriterion = "classCrossEntropyWithSoftmax"
        evalCriterion     = "classCrossEntropyWithSoftmax"
        initValueScale = 6.0
        uniformInit = true
        layerSizes = "$confVocabSize$:150:200:10000"
defaultHiddenActivity = 0.1 
        addPrior = false
        addDropoutNodes = false
        applyMeanVarNorm = false
lookupTableOrder = 1        
        vocabSize = "$confVocabSize$"
        nbrClass  = "$confClassSize$"
    ]
    SGD = [
        minibatchSize = 128:256:512
        learningRatesPerSample = 0.1
        momentumPerMB = 0
        gradientClippingWithTruncation = true
        clippingThresholdPerSample = 15.0
        maxEpochs = 16
        numMBsToShowResult = 100
        gradUpdateType = "none"
        loadBestModel = true
        dropoutRate = 0.0
        AutoAdjust = [
            autoAdjustLR = "adjustAfterEpoch"
            reduceLearnRateIfImproveLessThan = 0.001
            continueReduce = false
            increaseLearnRateIfImproveMoreThan = 1000000000
            learnRateDecreaseFactor = 0.5
            learnRateIncreaseFactor = 1.382
            numMiniBatch4LRSearch = 100
            numPrevLearnRates = 5
            numBestSearchEpoch = 1
        ]
    ]
    reader = [
        readerType = "LMSequenceReader"
randomize = "none"              
nbruttsineachrecurrentiter = 0  
cacheBlockSize = 2000000        
        wordclass = "$ModelDir$/vocab.txt"
        wfile = "$OutputDir$/sequenceSentence.bin"
        wsize = 256
        wrecords = 1000
        windowSize = "$confVocabSize$"
        file = "$DataDir$/$trainFile$"
        features = [
            dim = 0
            sectionType = "data"
        ]
        labelIn = [
            dim = 1
            labelType = "Category"
            beginSequence = "</s>"
            endSequence = "</s>"
            labelDim = "$confVocabSize$"
            labelMappingFile = "$OutputDir$/sentenceLabels.txt"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 11                
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 11
                sectionType = "categoryLabels"
            ]
        ]
        labels = [
            dim = 1
            labelType = "NextWord"
            beginSequence = "O"
            endSequence = "O"
            labelDim = "$confVocabSize$"
            labelMappingFile = "$OutputDir$/sentenceLabels.out.txt"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 3
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 3
                sectionType = categoryLabels
            ]
        ]
    ]
    cvReader = [
        readerType = "LMSequenceReader"
        randomize = "none"
nbruttsineachrecurrentiter = 0  
cacheBlockSize = 2000000        
        wordclass = "$ModelDir$/vocab.txt"
        wfile = "$OutputDir$/sequenceSentence.valid.bin"
        wsize = 256
        wrecords = 1000
        windowSize = "$confVocabSize$"
        file = "$DataDir$/$validFile$"
        features = [
            dim = 0
            sectionType = "data"
        ]
        labelIn = [
            dim = 1
            labelDim = "$confVocabSize$"
            labelMappingFile = "$OutputDir$/sentenceLabels.out.txt"
            labelType = "Category"
            beginSequence = "</s>"
            endSequence = "</s>"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 11
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 11
                sectionType = "categoryLabels"
            ]
        ]
        labels = [
            dim = 1
            labelType = "NextWord"
            beginSequence = "O"
            endSequence = "O"
            labelDim = "$confVocabSize$"
            labelMappingFile = "$OutputDir$/sentenceLabels.out.txt"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 3
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 3
                sectionType = "categoryLabels"
            ]
        ]
    ]
]
test = [
    action = "eval"
minibatchSize = 8192                
    traceLevel = 1
    epochSize = 0
    reader = [
        readerType = "LMSequenceReader"
        randomize = "none"
nbruttsineachrecurrentiter = 0  
cacheBlockSize = 2000000        
        wordclass = "$ModelDir$/vocab.txt"
        wfile = "$OutputDir$/sequenceSentence.bin"
        wsize = 256
        wrecords = 1000
        windowSize = "$confVocabSize$"
        file = "$DataDir$/$testFile$"
        features = [
            dim = 0
            sectionType = "data"
        ]
        labelIn = [
            dim = 1
            labelDim = "$confVocabSize$"
            labelMappingFile = "$OutputDir$/sentenceLabels.txt"
            labelType = "Category"
            beginSequence = "</s>"
            endSequence = "</s>"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 11
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 11
                sectionType = "categoryLabels"
            ]
        ]
        labels = [
            dim = 1
            labelType = "NextWord"
            beginSequence = "O"
            endSequence = "O"
            labelDim = "$confVocabSize$"
            labelMappingFile = "$OutputDir$/sentenceLabels.out.txt"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 3
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 3
                sectionType = "categoryLabels"
            ]
        ]
    ]
]
write = [
    action = "write"
    outputPath = "$OutputDir$/Write"
outputNodeNames = TrainNodeClassBasedCrossEntropy 
    format = [
sequencePrologue = "log P(W)="    
        type = "real"
    ]
minibatchSize = 8192                
    traceLevel = 1
    epochSize = 0
    reader = [
        readerType = "LMSequenceReader"
randomize = "none"              
nbruttsineachrecurrentiter = 1  
cacheBlockSize = 1              
        wordclass = "$ModelDir$/vocab.txt"
        wfile = "$OutputDir$/sequenceSentence.bin"
        wsize = 256
        wrecords = 1000
        windowSize = "$confVocabSize$"
        file = "$DataDir$/$testFile$"
        features = [
            dim = 0
            sectionType = "data"
        ]
        labelIn = [
            dim = 1
            labelDim = "$confVocabSize$"
            labelMappingFile = "$OutputDir$/sentenceLabels.txt"
            labelType = "Category"
            beginSequence = "</s>"
            endSequence = "</s>"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 11
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 11
                sectionType = "categoryLabels"
            ]
        ]
        labels = [
            dim = 1
            labelType = "NextWord"
            beginSequence = "O"
            endSequence = "O"
            labelDim = "$confVocabSize$"
            labelMappingFile = "$OutputDir$/sentenceLabels.out.txt"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 3
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 3
                sectionType = "categoryLabels"
            ]
        ]
    ]
]
currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data
RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu
DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data
ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Config
OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu
DeviceId=-1
timestamping=true
initOnCPUOnly=true
command=writeWordAndClassInfo:train:test
train=[SGD=[maxEpochs=3]]
train=[epochSize=2048]]
test=[SGD=[maxEpochs=3]]
train=[epochSize=2048]]

08/04/2016 08:09:51: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<

08/04/2016 08:09:51: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
08/04/2016 08:09:51: RootDir = ".."
ConfigDir = "../Config"
DataDir   = "../Data"
OutputDir = "../Output"
ModelDir  = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/Models"
deviceId = "auto"
command = writeWordAndClassInfo:train:test:write
precision  = "float"
traceLevel = 1
modelPath  = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/Models/rnn.dnn"
numCPUThreads = 1
confVocabSize = 10000
confClassSize = 50
trainFile = "ptb.train.txt"
validFile = "ptb.valid.txt"
testFile  = "ptb.test.txt"
writeWordAndClassInfo = [
    action = "writeWordAndClass"
    inputFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data/ptb.train.txt"
    beginSequence = "</s>"
    endSequence   = "</s>"
    outputVocabFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/Models/vocab.txt"
    outputWord2Cls  = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/Models/word2cls.txt"
    outputCls2Index = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/Models/cls2idx.txt"
    vocabSize = "10000"
    nbrClass = "50"
    cutoff = 0
    printValues = true
]
train = [
    action = "train"
    traceLevel = 1
epochSize = 0               
    SimpleNetworkBuilder = [
rnnType = "CLASSLSTM"   
recurrentLayer = 1      
        trainingCriterion = "classCrossEntropyWithSoftmax"
        evalCriterion     = "classCrossEntropyWithSoftmax"
        initValueScale = 6.0
        uniformInit = true
        layerSizes = "10000:150:200:10000"
defaultHiddenActivity = 0.1 
        addPrior = false
        addDropoutNodes = false
        applyMeanVarNorm = false
lookupTableOrder = 1        
        vocabSize = "10000"
        nbrClass  = "50"
    ]
    SGD = [
        minibatchSize = 128:256:512
        learningRatesPerSample = 0.1
        momentumPerMB = 0
        gradientClippingWithTruncation = true
        clippingThresholdPerSample = 15.0
        maxEpochs = 16
        numMBsToShowResult = 100
        gradUpdateType = "none"
        loadBestModel = true
        dropoutRate = 0.0
        AutoAdjust = [
            autoAdjustLR = "adjustAfterEpoch"
            reduceLearnRateIfImproveLessThan = 0.001
            continueReduce = false
            increaseLearnRateIfImproveMoreThan = 1000000000
            learnRateDecreaseFactor = 0.5
            learnRateIncreaseFactor = 1.382
            numMiniBatch4LRSearch = 100
            numPrevLearnRates = 5
            numBestSearchEpoch = 1
        ]
    ]
    reader = [
        readerType = "LMSequenceReader"
randomize = "none"              
nbruttsineachrecurrentiter = 0  
cacheBlockSize = 2000000        
        wordclass = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/Models/vocab.txt"
        wfile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/sequenceSentence.bin"
        wsize = 256
        wrecords = 1000
        windowSize = "10000"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data/ptb.train.txt"
        features = [
            dim = 0
            sectionType = "data"
        ]
        labelIn = [
            dim = 1
            labelType = "Category"
            beginSequence = "</s>"
            endSequence = "</s>"
            labelDim = "10000"
            labelMappingFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.txt"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 11                
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 11
                sectionType = "categoryLabels"
            ]
        ]
        labels = [
            dim = 1
            labelType = "NextWord"
            beginSequence = "O"
            endSequence = "O"
            labelDim = "10000"
            labelMappingFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.out.txt"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 3
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 3
                sectionType = categoryLabels
            ]
        ]
    ]
    cvReader = [
        readerType = "LMSequenceReader"
        randomize = "none"
nbruttsineachrecurrentiter = 0  
cacheBlockSize = 2000000        
        wordclass = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/Models/vocab.txt"
        wfile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/sequenceSentence.valid.bin"
        wsize = 256
        wrecords = 1000
        windowSize = "10000"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data/ptb.valid.txt"
        features = [
            dim = 0
            sectionType = "data"
        ]
        labelIn = [
            dim = 1
            labelDim = "10000"
            labelMappingFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.out.txt"
            labelType = "Category"
            beginSequence = "</s>"
            endSequence = "</s>"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 11
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 11
                sectionType = "categoryLabels"
            ]
        ]
        labels = [
            dim = 1
            labelType = "NextWord"
            beginSequence = "O"
            endSequence = "O"
            labelDim = "10000"
            labelMappingFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.out.txt"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 3
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 3
                sectionType = "categoryLabels"
            ]
        ]
    ]
]
test = [
    action = "eval"
minibatchSize = 8192                
    traceLevel = 1
    epochSize = 0
    reader = [
        readerType = "LMSequenceReader"
        randomize = "none"
nbruttsineachrecurrentiter = 0  
cacheBlockSize = 2000000        
        wordclass = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/Models/vocab.txt"
        wfile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/sequenceSentence.bin"
        wsize = 256
        wrecords = 1000
        windowSize = "10000"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data/ptb.test.txt"
        features = [
            dim = 0
            sectionType = "data"
        ]
        labelIn = [
            dim = 1
            labelDim = "10000"
            labelMappingFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.txt"
            labelType = "Category"
            beginSequence = "</s>"
            endSequence = "</s>"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 11
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 11
                sectionType = "categoryLabels"
            ]
        ]
        labels = [
            dim = 1
            labelType = "NextWord"
            beginSequence = "O"
            endSequence = "O"
            labelDim = "10000"
            labelMappingFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.out.txt"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 3
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 3
                sectionType = "categoryLabels"
            ]
        ]
    ]
]
write = [
    action = "write"
    outputPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/Write"
outputNodeNames = TrainNodeClassBasedCrossEntropy 
    format = [
sequencePrologue = "log P(W)="    
        type = "real"
    ]
minibatchSize = 8192                
    traceLevel = 1
    epochSize = 0
    reader = [
        readerType = "LMSequenceReader"
randomize = "none"              
nbruttsineachrecurrentiter = 1  
cacheBlockSize = 1              
        wordclass = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/Models/vocab.txt"
        wfile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/sequenceSentence.bin"
        wsize = 256
        wrecords = 1000
        windowSize = "10000"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data/ptb.test.txt"
        features = [
            dim = 0
            sectionType = "data"
        ]
        labelIn = [
            dim = 1
            labelDim = "10000"
            labelMappingFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.txt"
            labelType = "Category"
            beginSequence = "</s>"
            endSequence = "</s>"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 11
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 11
                sectionType = "categoryLabels"
            ]
        ]
        labels = [
            dim = 1
            labelType = "NextWord"
            beginSequence = "O"
            endSequence = "O"
            labelDim = "10000"
            labelMappingFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.out.txt"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 3
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 3
                sectionType = "categoryLabels"
            ]
        ]
    ]
]
currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data
RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu
DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data
ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Config
OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu
DeviceId=-1
timestamping=true
initOnCPUOnly=true
command=writeWordAndClassInfo:train:test
train=[SGD=[maxEpochs=3]]
train=[epochSize=2048]]
test=[SGD=[maxEpochs=3]]
train=[epochSize=2048]]

08/04/2016 08:09:51: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<

08/04/2016 08:09:51: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
configparameters: rnn.cntk:]=true
configparameters: rnn.cntk:command=writeWordAndClassInfo:train:test
configparameters: rnn.cntk:confClassSize=50
configparameters: rnn.cntk:ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Config
configparameters: rnn.cntk:confVocabSize=10000
configparameters: rnn.cntk:currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data
configparameters: rnn.cntk:DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data
configparameters: rnn.cntk:deviceId=-1
configparameters: rnn.cntk:initOnCPUOnly=true
configparameters: rnn.cntk:ModelDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/Models
configparameters: rnn.cntk:modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/Models/rnn.dnn
configparameters: rnn.cntk:numCPUThreads=1
configparameters: rnn.cntk:OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu
configparameters: rnn.cntk:precision=float
configparameters: rnn.cntk:RootDir=..
configparameters: rnn.cntk:RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu
configparameters: rnn.cntk:test=[
    action = "eval"
minibatchSize = 8192                
    traceLevel = 1
    epochSize = 0
    reader = [
        readerType = "LMSequenceReader"
        randomize = "none"
nbruttsineachrecurrentiter = 0  
cacheBlockSize = 2000000        
        wordclass = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/Models/vocab.txt"
        wfile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/sequenceSentence.bin"
        wsize = 256
        wrecords = 1000
        windowSize = "10000"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data/ptb.test.txt"
        features = [
            dim = 0
            sectionType = "data"
        ]
        labelIn = [
            dim = 1
            labelDim = "10000"
            labelMappingFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.txt"
            labelType = "Category"
            beginSequence = "</s>"
            endSequence = "</s>"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 11
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 11
                sectionType = "categoryLabels"
            ]
        ]
        labels = [
            dim = 1
            labelType = "NextWord"
            beginSequence = "O"
            endSequence = "O"
            labelDim = "10000"
            labelMappingFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.out.txt"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 3
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 3
                sectionType = "categoryLabels"
            ]
        ]
    ]
] [SGD=[maxEpochs=3]]

configparameters: rnn.cntk:testFile=ptb.test.txt
configparameters: rnn.cntk:timestamping=true
configparameters: rnn.cntk:traceLevel=1
configparameters: rnn.cntk:train=[
    action = "train"
    traceLevel = 1
epochSize = 0               
    SimpleNetworkBuilder = [
rnnType = "CLASSLSTM"   
recurrentLayer = 1      
        trainingCriterion = "classCrossEntropyWithSoftmax"
        evalCriterion     = "classCrossEntropyWithSoftmax"
        initValueScale = 6.0
        uniformInit = true
        layerSizes = "10000:150:200:10000"
defaultHiddenActivity = 0.1 
        addPrior = false
        addDropoutNodes = false
        applyMeanVarNorm = false
lookupTableOrder = 1        
        vocabSize = "10000"
        nbrClass  = "50"
    ]
    SGD = [
        minibatchSize = 128:256:512
        learningRatesPerSample = 0.1
        momentumPerMB = 0
        gradientClippingWithTruncation = true
        clippingThresholdPerSample = 15.0
        maxEpochs = 16
        numMBsToShowResult = 100
        gradUpdateType = "none"
        loadBestModel = true
        dropoutRate = 0.0
        AutoAdjust = [
            autoAdjustLR = "adjustAfterEpoch"
            reduceLearnRateIfImproveLessThan = 0.001
            continueReduce = false
            increaseLearnRateIfImproveMoreThan = 1000000000
            learnRateDecreaseFactor = 0.5
            learnRateIncreaseFactor = 1.382
            numMiniBatch4LRSearch = 100
            numPrevLearnRates = 5
            numBestSearchEpoch = 1
        ]
    ]
    reader = [
        readerType = "LMSequenceReader"
randomize = "none"              
nbruttsineachrecurrentiter = 0  
cacheBlockSize = 2000000        
        wordclass = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/Models/vocab.txt"
        wfile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/sequenceSentence.bin"
        wsize = 256
        wrecords = 1000
        windowSize = "10000"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data/ptb.train.txt"
        features = [
            dim = 0
            sectionType = "data"
        ]
        labelIn = [
            dim = 1
            labelType = "Category"
            beginSequence = "</s>"
            endSequence = "</s>"
            labelDim = "10000"
            labelMappingFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.txt"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 11                
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 11
                sectionType = "categoryLabels"
            ]
        ]
        labels = [
            dim = 1
            labelType = "NextWord"
            beginSequence = "O"
            endSequence = "O"
            labelDim = "10000"
            labelMappingFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.out.txt"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 3
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 3
                sectionType = categoryLabels
            ]
        ]
    ]
    cvReader = [
        readerType = "LMSequenceReader"
        randomize = "none"
nbruttsineachrecurrentiter = 0  
cacheBlockSize = 2000000        
        wordclass = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/Models/vocab.txt"
        wfile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/sequenceSentence.valid.bin"
        wsize = 256
        wrecords = 1000
        windowSize = "10000"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data/ptb.valid.txt"
        features = [
            dim = 0
            sectionType = "data"
        ]
        labelIn = [
            dim = 1
            labelDim = "10000"
            labelMappingFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.out.txt"
            labelType = "Category"
            beginSequence = "</s>"
            endSequence = "</s>"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 11
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 11
                sectionType = "categoryLabels"
            ]
        ]
        labels = [
            dim = 1
            labelType = "NextWord"
            beginSequence = "O"
            endSequence = "O"
            labelDim = "10000"
            labelMappingFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.out.txt"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 3
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 3
                sectionType = "categoryLabels"
            ]
        ]
    ]
] [SGD=[maxEpochs=3]] [epochSize=2048] [epochSize=2048]

configparameters: rnn.cntk:trainFile=ptb.train.txt
configparameters: rnn.cntk:validFile=ptb.valid.txt
configparameters: rnn.cntk:write=[
    action = "write"
    outputPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/Write"
outputNodeNames = TrainNodeClassBasedCrossEntropy 
    format = [
sequencePrologue = "log P(W)="    
        type = "real"
    ]
minibatchSize = 8192                
    traceLevel = 1
    epochSize = 0
    reader = [
        readerType = "LMSequenceReader"
randomize = "none"              
nbruttsineachrecurrentiter = 1  
cacheBlockSize = 1              
        wordclass = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/Models/vocab.txt"
        wfile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/sequenceSentence.bin"
        wsize = 256
        wrecords = 1000
        windowSize = "10000"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data/ptb.test.txt"
        features = [
            dim = 0
            sectionType = "data"
        ]
        labelIn = [
            dim = 1
            labelDim = "10000"
            labelMappingFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.txt"
            labelType = "Category"
            beginSequence = "</s>"
            endSequence = "</s>"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 11
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 11
                sectionType = "categoryLabels"
            ]
        ]
        labels = [
            dim = 1
            labelType = "NextWord"
            beginSequence = "O"
            endSequence = "O"
            labelDim = "10000"
            labelMappingFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.out.txt"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 3
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 3
                sectionType = "categoryLabels"
            ]
        ]
    ]
]

configparameters: rnn.cntk:writeWordAndClassInfo=[
    action = "writeWordAndClass"
    inputFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data/ptb.train.txt"
    beginSequence = "</s>"
    endSequence   = "</s>"
    outputVocabFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/Models/vocab.txt"
    outputWord2Cls  = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/Models/word2cls.txt"
    outputCls2Index = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/Models/cls2idx.txt"
    vocabSize = "10000"
    nbrClass = "50"
    cutoff = 0
    printValues = true
]

08/04/2016 08:09:51: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
08/04/2016 08:09:51: Commands: writeWordAndClassInfo train test
08/04/2016 08:09:51: Precision = "float"
08/04/2016 08:09:51: Using 1 CPU threads.
08/04/2016 08:09:51: CNTKModelPath: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/Models/rnn.dnn
08/04/2016 08:09:51: CNTKCommandTrainInfo: train : 3
08/04/2016 08:09:51: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 3

08/04/2016 08:09:51: ##############################################################################
08/04/2016 08:09:51: #                                                                            #
08/04/2016 08:09:51: # Action "writeWordAndClass"                                                 #
08/04/2016 08:09:51: #                                                                            #
08/04/2016 08:09:51: ##############################################################################

Vocabulary file    --> C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/Models/vocab.txt
Word-to-class map  --> C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/Models/word2cls.txt
Class-to-index map --> C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/Models/cls2idx.txt

Reading input file inputFile: C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data/ptb.train.txt
Vocabulary size 10000.
Created vocabulary file with 10000 entries.
Created word-to-class map with 10000 entries.
Created class-to-index map with 50 entries.

08/04/2016 08:09:52: Action "writeWordAndClass" complete.


08/04/2016 08:09:52: ##############################################################################
08/04/2016 08:09:52: #                                                                            #
08/04/2016 08:09:52: # Action "train"                                                             #
08/04/2016 08:09:52: #                                                                            #
08/04/2016 08:09:52: ##############################################################################

08/04/2016 08:09:52: CNTKCommandTrainBegin: train
SimpleNetworkBuilder Using CPU
LMSequenceReader: Label mapping will be created internally on the fly because the labelMappingFile was not found: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.txt
LMSequenceReader: Label mapping will be created internally on the fly because the labelMappingFile was not found: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.out.txt
LMSequenceReader: Input file is 'C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data/ptb.train.txt'.
LMSequenceReader: Label mapping will be created internally on the fly because the labelMappingFile was not found: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.out.txt
LMSequenceReader: Label mapping will be created internally on the fly because the labelMappingFile was not found: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.out.txt
LMSequenceReader: Input file is 'C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data/ptb.valid.txt'.

08/04/2016 08:09:52: Creating virgin network.

Post-processing network...

3 roots:
	PosteriorProb = Softmax()
	TrainNodeClassBasedCrossEntropy = ClassBasedCrossEntropyWithSoftmax()
	outputs = TransposeTimes()

Loop[0] --> Loop_AutoName37 -> 31 nodes

	AutoName2	AutoName30	AutoName33
	AutoName1	AutoName21	AutoName24
	AutoName5	AutoName20	AutoName25
	AutoName26	AutoName6	AutoName27
	AutoName0	AutoName8	AutoName11
	AutoName4	AutoName7	AutoName12
	AutoName13	AutoName3	AutoName14
	AutoName15	AutoName17	AutoName18
	AutoName19	AutoName28	AutoName29
	AutoName34	AutoName35	AutoName36
	AutoName37

Validating network. 63 nodes to process in pass 1.

Validating --> W2 = LearnableParameter() :  -> [200 x 10000]
Validating --> WXO0 = LearnableParameter() :  -> [200 x 150]
Validating --> E0 = LearnableParameter() :  -> [150 x 10000]
Validating --> features = SparseInputValue() :  -> [10000 x *]
Validating --> LookupTable = LookupTable (E0, features) : [150 x 10000], [10000 x *] -> [150 x *]
Validating --> AutoName31 = Times (WXO0, LookupTable) : [200 x 150], [150 x *] -> [200 x *]
Validating --> bo0 = LearnableParameter() :  -> [200 x 1]
Validating --> AutoName32 = Plus (AutoName31, bo0) : [200 x *], [200 x 1] -> [200 x 1 x *]
Validating --> WHO0 = LearnableParameter() :  -> [200 x 200]
Validating --> WCO0 = LearnableParameter() :  -> [200 x 1]
Validating --> WXF0 = LearnableParameter() :  -> [200 x 150]
Validating --> AutoName22 = Times (WXF0, LookupTable) : [200 x 150], [150 x *] -> [200 x *]
Validating --> bf0 = LearnableParameter() :  -> [200 x 1]
Validating --> AutoName23 = Plus (AutoName22, bf0) : [200 x *], [200 x 1] -> [200 x 1 x *]
Validating --> WHF0 = LearnableParameter() :  -> [200 x 200]
Validating --> WCF0 = LearnableParameter() :  -> [200 x 1]
Validating --> WXI0 = LearnableParameter() :  -> [200 x 150]
Validating --> AutoName9 = Times (WXI0, LookupTable) : [200 x 150], [150 x *] -> [200 x *]
Validating --> bi0 = LearnableParameter() :  -> [200 x 1]
Validating --> AutoName10 = Plus (AutoName9, bi0) : [200 x *], [200 x 1] -> [200 x 1 x *]
Validating --> WHI0 = LearnableParameter() :  -> [200 x 200]
Validating --> WCI0 = LearnableParameter() :  -> [200 x 1]
Validating --> WXC0 = LearnableParameter() :  -> [200 x 150]
Validating --> AutoName16 = Times (WXC0, LookupTable) : [200 x 150], [150 x *] -> [200 x *]
Validating --> WHC0 = LearnableParameter() :  -> [200 x 200]
Validating --> bc0 = LearnableParameter() :  -> [200 x 1]
Validating --> AutoName30 = Times (WHO0, AutoName2) : [200 x 200], [200] -> [200]
Validating --> AutoName33 = Plus (AutoName32, AutoName30) : [200 x 1 x *], [200] -> [200 x 1 x *]
Validating --> AutoName21 = Times (WHF0, AutoName1) : [200 x 200], [200] -> [200]
Validating --> AutoName24 = Plus (AutoName23, AutoName21) : [200 x 1 x *], [200] -> [200 x 1 x *]
Validating --> AutoName20 = DiagTimes (WCF0, AutoName5) : [200 x 1], [200] -> [200]
Validating --> AutoName25 = Plus (AutoName24, AutoName20) : [200 x 1 x *], [200] -> [200 x 1 x *]
Validating --> AutoName26 = Sigmoid (AutoName25) : [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName27 = ElementTimes (AutoName26, AutoName6) : [200 x 1 x *], [200] -> [200 x 1 x *]
Validating --> AutoName8 = Times (WHI0, AutoName0) : [200 x 200], [200] -> [200]
Validating --> AutoName11 = Plus (AutoName10, AutoName8) : [200 x 1 x *], [200] -> [200 x 1 x *]
Validating --> AutoName7 = DiagTimes (WCI0, AutoName4) : [200 x 1], [200] -> [200]
Validating --> AutoName12 = Plus (AutoName11, AutoName7) : [200 x 1 x *], [200] -> [200 x 1 x *]
Validating --> AutoName13 = Sigmoid (AutoName12) : [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName14 = Times (WHC0, AutoName3) : [200 x 200], [200] -> [200]
Validating --> AutoName15 = Plus (AutoName14, bc0) : [200], [200 x 1] -> [200 x 1]
Validating --> AutoName17 = Plus (AutoName16, AutoName15) : [200 x *], [200 x 1] -> [200 x 1 x *]
Validating --> AutoName18 = Tanh (AutoName17) : [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName19 = ElementTimes (AutoName13, AutoName18) : [200 x 1 x *], [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName28 = Plus (AutoName27, AutoName19) : [200 x 1 x *], [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName29 = DiagTimes (WCO0, AutoName28) : [200 x 1], [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName34 = Plus (AutoName33, AutoName29) : [200 x 1 x *], [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName35 = Sigmoid (AutoName34) : [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName36 = Tanh (AutoName28) : [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName37 = ElementTimes (AutoName35, AutoName36) : [200 x 1 x *], [200 x 1 x *] -> [200 x 1 x *]
Validating --> outputs = TransposeTimes (W2, AutoName37) : [200 x 10000], [200 x 1 x *] -> [10000 x 1 x *]
Validating --> PosteriorProb = Softmax (outputs) : [10000 x 1 x *] -> [10000 x 1 x *]
Validating --> labels = InputValue() :  -> [4 x *]
Validating --> WeightForClassPostProb = LearnableParameter() :  -> [50 x 200]
Validating --> ClassPostProb = Times (WeightForClassPostProb, AutoName37) : [50 x 200], [200 x 1 x *] -> [50 x 1 x *]
Validating --> TrainNodeClassBasedCrossEntropy = ClassBasedCrossEntropyWithSoftmax (labels, AutoName37, W2, ClassPostProb) : [4 x *], [200 x 1 x *], [200 x 10000], [50 x 1 x *] -> [1]

Validating network. 43 nodes to process in pass 2.

Validating --> AutoName2 = PastValue (AutoName37) : [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName30 = Times (WHO0, AutoName2) : [200 x 200], [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName1 = PastValue (AutoName37) : [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName21 = Times (WHF0, AutoName1) : [200 x 200], [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName5 = PastValue (AutoName28) : [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName20 = DiagTimes (WCF0, AutoName5) : [200 x 1], [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName6 = PastValue (AutoName28) : [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName0 = PastValue (AutoName37) : [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName8 = Times (WHI0, AutoName0) : [200 x 200], [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName4 = PastValue (AutoName28) : [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName7 = DiagTimes (WCI0, AutoName4) : [200 x 1], [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName3 = PastValue (AutoName37) : [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName14 = Times (WHC0, AutoName3) : [200 x 200], [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName15 = Plus (AutoName14, bc0) : [200 x 1 x *], [200 x 1] -> [200 x 1 x *]

Validating network. 14 nodes to process in pass 3.


Validating network, final pass.



19 out of 63 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

08/04/2016 08:09:52: Created model with 63 nodes on CPU.

08/04/2016 08:09:52: Training criterion node(s):
08/04/2016 08:09:52: 	TrainNodeClassBasedCrossEntropy = ClassBasedCrossEntropyWithSoftmax


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

0000000000000000: {[PosteriorProb Gradient[10000 x 1 x *]] [PosteriorProb Value[10000 x 1 x *]] [features Gradient[10000 x *]] [labels Gradient[4 x *]] [outputs Gradient[10000 x 1 x *]] }
00000083D24A90C0: {[WHF0 Gradient[200 x 200]] }
00000083D24A9160: {[WHO0 Gradient[200 x 200]] }
00000083D24A97A0: {[AutoName2 Gradient[200 x 1 x *]] [LookupTable Gradient[150 x *]] }
00000083D24A98E0: {[AutoName1 Gradient[200 x 1 x *]] }
00000083D24A9AC0: {[AutoName32 Gradient[200 x 1 x *]] }
00000083D24A9D40: {[AutoName30 Gradient[200 x 1 x *]] }
00000083D24AA1A0: {[AutoName23 Gradient[200 x 1 x *]] }
00000083D24AA920: {[AutoName21 Gradient[200 x 1 x *]] }
00000083D24AAA60: {[AutoName5 Gradient[200 x 1 x *]] }
00000083D24AAE20: {[WCF0 Gradient[200 x 1]] }
00000083D251C3C0: {[AutoName12 Gradient[200 x 1 x *]] }
00000083D251C460: {[AutoName26 Gradient[200 x 1 x *]] }
00000083D251C500: {[AutoName6 Gradient[200 x 1 x *]] }
00000083D251C5A0: {[AutoName13 Gradient[200 x 1 x *]] }
00000083D251C640: {[AutoName34 Value[200 x 1 x *]] }
00000083D251C780: {[WCO0 Gradient[200 x 1]] }
00000083D251C820: {[AutoName33 Gradient[200 x 1 x *]] }
00000083D251C8C0: {[AutoName27 Gradient[200 x 1 x *]] }
00000083D251C960: {[WeightForClassPostProb Gradient[50 x 200]] }
00000083D251CA00: {[AutoName15 Gradient[200 x 1 x *]] }
00000083D251CAA0: {[AutoName35 Value[200 x 1 x *]] }
00000083D251CB40: {[AutoName19 Value[200 x 1 x *]] }
00000083D251CBE0: {[AutoName7 Gradient[200 x 1 x *]] }
00000083D251CC80: {[AutoName37 Value[200 x 1 x *]] }
00000083D251CD20: {[TrainNodeClassBasedCrossEntropy Gradient[1]] }
00000083D251CDC0: {[WHC0 Gradient[200 x 200]] }
00000083D251CE60: {[AutoName11 Gradient[200 x 1 x *]] }
00000083D251CF00: {[AutoName28 Value[200 x 1 x *]] }
00000083D251CFA0: {[AutoName29 Value[200 x 1 x *]] }
00000083D251D040: {[WCI0 Gradient[200 x 1]] }
00000083D251D0E0: {[AutoName4 Gradient[200 x 1 x *]] }
00000083D251D180: {[AutoName10 Gradient[200 x 1 x *]] }
00000083D251D220: {[AutoName8 Gradient[200 x 1 x *]] }
00000083D251D2C0: {[AutoName0 Gradient[200 x 1 x *]] }
00000083D251D360: {[AutoName17 Gradient[200 x 1 x *]] }
00000083D251D400: {[AutoName25 Gradient[200 x 1 x *]] }
00000083D251D4A0: {[AutoName24 Gradient[200 x 1 x *]] }
00000083D251D5E0: {[AutoName28 Gradient[200 x 1 x *]] }
00000083D251D680: {[W2 Gradient[200 x 10000]] }
00000083D251D720: {[AutoName16 Gradient[200 x *]] [bi0 Gradient[200 x 1]] }
00000083D251D7C0: {[AutoName20 Gradient[200 x 1 x *]] }
00000083D251D860: {[AutoName29 Gradient[200 x 1 x *]] }
00000083D251DA40: {[AutoName19 Gradient[200 x 1 x *]] }
00000083D251DAE0: {[bc0 Gradient[200 x 1]] }
00000083D251DB80: {[AutoName35 Gradient[200 x 1 x *]] [ClassPostProb Value[50 x 1 x *]] }
00000083D251DD60: {[AutoName37 Gradient[200 x 1 x *]] }
00000083D251DE00: {[AutoName18 Gradient[200 x 1 x *]] }
00000083D251DEA0: {[WHI0 Gradient[200 x 200]] }
00000083D251DF40: {[AutoName14 Gradient[200 x 1 x *]] }
00000083D251DFE0: {[AutoName3 Gradient[200 x 1 x *]] }
00000083D251E080: {[AutoName36 Value[200 x 1 x *]] }
00000083D251E120: {[AutoName36 Gradient[200 x 1 x *]] [ClassPostProb Gradient[50 x 1 x *]] }
00000083D251E1C0: {[AutoName18 Value[200 x 1 x *]] }
00000083D251E260: {[AutoName34 Gradient[200 x 1 x *]] }
00000083E0E60750: {[bi0 Value[200 x 1]] }
00000083E0E607F0: {[WXF0 Value[200 x 150]] }
00000083E0E60930: {[WXC0 Value[200 x 150]] }
00000083E0E60BB0: {[WXO0 Value[200 x 150]] }
00000083E0E60CF0: {[WXI0 Value[200 x 150]] }
00000083E0E61150: {[E0 Value[150 x 10000]] }
00000083E0E611F0: {[bo0 Value[200 x 1]] }
00000083E0E613D0: {[features Value[10000 x *]] }
00000083E0E61510: {[bc0 Value[200 x 1]] }
00000083E1847690: {[WHI0 Value[200 x 200]] }
00000083E1847A50: {[AutoName6 Value[200 x 1 x *]] }
00000083E1847AF0: {[WHO0 Value[200 x 200]] }
00000083E1847B90: {[WCO0 Value[200 x 1]] }
00000083E1847D70: {[bf0 Value[200 x 1]] }
00000083E1847FF0: {[AutoName1 Value[200 x 1 x *]] }
00000083E1848090: {[AutoName4 Value[200 x 1 x *]] }
00000083E1848130: {[AutoName2 Value[200 x 1 x *]] [WXC0 Gradient[200 x 150]] }
00000083E18481D0: {[AutoName5 Value[200 x 1 x *]] }
00000083E1848310: {[WCF0 Value[200 x 1]] }
00000083E1848450: {[WHF0 Value[200 x 200]] }
00000083E1848590: {[AutoName0 Value[200 x 1 x *]] }
00000083E1848630: {[AutoName3 Value[200 x 1 x *]] }
00000083E1848F90: {[WCI0 Value[200 x 1]] }
00000083E1849490: {[WHC0 Value[200 x 200]] }
00000083E19C6070: {[LookupTable Value[150 x *]] }
00000083E19C61B0: {[AutoName31 Value[200 x *]] [E0 Gradient[150 x 10000]] }
00000083E19C6610: {[AutoName32 Value[200 x 1 x *]] [WXO0 Gradient[200 x 150]] }
00000083E19C66B0: {[AutoName10 Value[200 x 1 x *]] [WXI0 Gradient[200 x 150]] }
00000083E19C6750: {[AutoName16 Value[200 x *]] [AutoName9 Gradient[200 x *]] [bf0 Gradient[200 x 1]] }
00000083E19C67F0: {[AutoName33 Value[200 x 1 x *]] }
00000083E19C69D0: {[AutoName22 Gradient[200 x *]] [AutoName9 Value[200 x *]] [bo0 Gradient[200 x 1]] }
00000083E19C6A70: {[AutoName24 Value[200 x 1 x *]] }
00000083E19C6B10: {[AutoName26 Value[200 x 1 x *]] }
00000083E19C6BB0: {[W2 Value[200 x 10000]] }
00000083E19C6E30: {[AutoName27 Value[200 x 1 x *]] }
00000083E19C6ED0: {[AutoName8 Value[200 x 1 x *]] }
00000083E19C6F70: {[AutoName11 Value[200 x 1 x *]] }
00000083E19C70B0: {[AutoName13 Value[200 x 1 x *]] }
00000083E19C7150: {[AutoName14 Value[200 x 1 x *]] }
00000083E19C73D0: {[AutoName20 Value[200 x 1 x *]] }
00000083E19C7470: {[AutoName15 Value[200 x 1 x *]] }
00000083E19C75B0: {[outputs Value[10000 x 1 x *]] }
00000083E19C7650: {[AutoName7 Value[200 x 1 x *]] }
00000083E19C76F0: {[AutoName17 Value[200 x 1 x *]] }
00000083E19C7830: {[AutoName12 Value[200 x 1 x *]] }
00000083E19C78D0: {[AutoName25 Value[200 x 1 x *]] }
00000083E19C7970: {[labels Value[4 x *]] }
00000083E19C7A10: {[AutoName23 Value[200 x 1 x *]] [WXF0 Gradient[200 x 150]] }
00000083E19C7AB0: {[AutoName30 Value[200 x 1 x *]] }
00000083E19C7B50: {[AutoName22 Value[200 x *]] [AutoName31 Gradient[200 x *]] }
00000083E19C7BF0: {[AutoName21 Value[200 x 1 x *]] }
00000083E19C7E70: {[WeightForClassPostProb Value[50 x 200]] }
00000083E19C7F10: {[TrainNodeClassBasedCrossEntropy Value[1]] }

08/04/2016 08:09:52: No PreCompute nodes found, skipping PreCompute step.

08/04/2016 08:09:52: Starting Epoch 1: learning rate per sample = 0.100000  effective momentum = 0.000000  momentum as time constant = 0.0 samples

08/04/2016 08:09:52: Starting minibatch loop.
LMSequenceReader: Reading epoch data... 42068 sequences read.
08/04/2016 08:09:53: Finished Epoch[ 1 of 3]: [Training] TrainNodeClassBasedCrossEntropy = 6.81610253 * 2061; totalSamplesSeen = 2061; learningRatePerSample = 0.1; epochTime=1.04066s
LMSequenceReader: Reading epoch data... 3370 sequences read.
LMSequenceReader: Reading epoch data... 0 sequences read.
08/04/2016 08:10:01: Final Results: Minibatch[1-704]: TrainNodeClassBasedCrossEntropy = 6.49594388 * 73760; perplexity = 662.44920107
08/04/2016 08:10:01: Finished Epoch[ 1 of 3]: [Validate] TrainNodeClassBasedCrossEntropy = 6.49594388 * 73760
08/04/2016 08:10:01: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/Models/rnn.dnn.1'

08/04/2016 08:10:01: Starting Epoch 2: learning rate per sample = 0.100000  effective momentum = 0.000000  momentum as time constant = 0.0 samples

08/04/2016 08:10:01: Starting minibatch loop.
LMSequenceReader: Reading epoch data... 42068 sequences read.
08/04/2016 08:10:02: Finished Epoch[ 2 of 3]: [Training] TrainNodeClassBasedCrossEntropy = 6.49383841 * 2081; totalSamplesSeen = 4142; learningRatePerSample = 0.1; epochTime=0.755377s
LMSequenceReader: Reading epoch data... 3370 sequences read.
LMSequenceReader: Reading epoch data... 0 sequences read.
08/04/2016 08:10:08: Final Results: Minibatch[1-353]: TrainNodeClassBasedCrossEntropy = 6.60359235 * 73760; perplexity = 737.74065569
08/04/2016 08:10:08: Finished Epoch[ 2 of 3]: [Validate] TrainNodeClassBasedCrossEntropy = 6.60359235 * 73760
08/04/2016 08:10:08: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/Models/rnn.dnn.1.
08/04/2016 08:10:09: learnRatePerSample reduced to 0.050000001
08/04/2016 08:10:09: SGD: revoke back to and update checkpoint file for epoch 1

08/04/2016 08:10:09: Starting Epoch 2: learning rate per sample = 0.050000  effective momentum = 0.000000  momentum as time constant = 0.0 samples

08/04/2016 08:10:09: Starting minibatch loop.
LMSequenceReader: Reading epoch data... 42068 sequences read.
08/04/2016 08:10:09: Finished Epoch[ 2 of 3]: [Training] TrainNodeClassBasedCrossEntropy = 6.39348430 * 2081; totalSamplesSeen = 4142; learningRatePerSample = 0.050000001; epochTime=0.7548s
LMSequenceReader: Reading epoch data... 3370 sequences read.
LMSequenceReader: Reading epoch data... 0 sequences read.
08/04/2016 08:10:16: Final Results: Minibatch[1-353]: TrainNodeClassBasedCrossEntropy = 6.43778068 * 73760; perplexity = 625.01814418
08/04/2016 08:10:16: Finished Epoch[ 2 of 3]: [Validate] TrainNodeClassBasedCrossEntropy = 6.43778068 * 73760
08/04/2016 08:10:16: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/Models/rnn.dnn.2'

08/04/2016 08:10:16: Starting Epoch 3: learning rate per sample = 0.050000  effective momentum = 0.000000  momentum as time constant = 0.0 samples

08/04/2016 08:10:16: Starting minibatch loop.
LMSequenceReader: Reading epoch data... 42068 sequences read.
08/04/2016 08:10:17: Finished Epoch[ 3 of 3]: [Training] TrainNodeClassBasedCrossEntropy = 6.29225102 * 2343; totalSamplesSeen = 6485; learningRatePerSample = 0.050000001; epochTime=0.700337s
LMSequenceReader: Reading epoch data... 3370 sequences read.
LMSequenceReader: Reading epoch data... 0 sequences read.
08/04/2016 08:10:23: Final Results: Minibatch[1-193]: TrainNodeClassBasedCrossEntropy = 6.56784766 * 73760; perplexity = 711.83607784
08/04/2016 08:10:23: Finished Epoch[ 3 of 3]: [Validate] TrainNodeClassBasedCrossEntropy = 6.56784766 * 73760
08/04/2016 08:10:23: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/Models/rnn.dnn.2.
08/04/2016 08:10:23: learnRatePerSample reduced to 0.025
08/04/2016 08:10:23: SGD: revoke back to and update checkpoint file for epoch 2

08/04/2016 08:10:23: Starting Epoch 3: learning rate per sample = 0.025000  effective momentum = 0.000000  momentum as time constant = 0.0 samples

08/04/2016 08:10:23: Starting minibatch loop.
LMSequenceReader: Reading epoch data... 42068 sequences read.
08/04/2016 08:10:24: Finished Epoch[ 3 of 3]: [Training] TrainNodeClassBasedCrossEntropy = 6.29791242 * 2343; totalSamplesSeen = 6485; learningRatePerSample = 0.025; epochTime=0.678383s
LMSequenceReader: Reading epoch data... 3370 sequences read.
LMSequenceReader: Reading epoch data... 0 sequences read.
08/04/2016 08:10:29: Final Results: Minibatch[1-193]: TrainNodeClassBasedCrossEntropy = 6.42704752 * 73760; perplexity = 618.34559708
08/04/2016 08:10:29: Finished Epoch[ 3 of 3]: [Validate] TrainNodeClassBasedCrossEntropy = 6.42704752 * 73760
08/04/2016 08:10:30: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/Models/rnn.dnn'
08/04/2016 08:10:30: CNTKCommandTrainEnd: train

08/04/2016 08:10:30: Action "train" complete.


08/04/2016 08:10:30: ##############################################################################
08/04/2016 08:10:30: #                                                                            #
08/04/2016 08:10:30: # Action "eval"                                                              #
08/04/2016 08:10:30: #                                                                            #
08/04/2016 08:10:30: ##############################################################################

LMSequenceReader: Label mapping will be created internally on the fly because the labelMappingFile was not found: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.txt
LMSequenceReader: Label mapping will be created internally on the fly because the labelMappingFile was not found: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.out.txt
LMSequenceReader: Input file is 'C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data/ptb.test.txt'.

Post-processing network...

3 roots:
	PosteriorProb = Softmax()
	TrainNodeClassBasedCrossEntropy = ClassBasedCrossEntropyWithSoftmax()
	outputs = TransposeTimes()

Loop[0] --> Loop_AutoName37 -> 31 nodes

	AutoName2	AutoName30	AutoName33
	AutoName1	AutoName21	AutoName24
	AutoName5	AutoName20	AutoName25
	AutoName26	AutoName6	AutoName27
	AutoName0	AutoName8	AutoName11
	AutoName4	AutoName7	AutoName12
	AutoName13	AutoName3	AutoName14
	AutoName15	AutoName17	AutoName18
	AutoName19	AutoName28	AutoName29
	AutoName34	AutoName35	AutoName36
	AutoName37

Validating network. 63 nodes to process in pass 1.

Validating --> W2 = LearnableParameter() :  -> [200 x 10000]
Validating --> WXO0 = LearnableParameter() :  -> [200 x 150]
Validating --> E0 = LearnableParameter() :  -> [150 x 10000]
Validating --> features = SparseInputValue() :  -> [10000 x *1]
Validating --> LookupTable = LookupTable (E0, features) : [150 x 10000], [10000 x *1] -> [150 x *1]
Validating --> AutoName31 = Times (WXO0, LookupTable) : [200 x 150], [150 x *1] -> [200 x *1]
Validating --> bo0 = LearnableParameter() :  -> [200 x 1]
Validating --> AutoName32 = Plus (AutoName31, bo0) : [200 x *1], [200 x 1] -> [200 x 1 x *1]
Validating --> WHO0 = LearnableParameter() :  -> [200 x 200]
Validating --> WCO0 = LearnableParameter() :  -> [200 x 1]
Validating --> WXF0 = LearnableParameter() :  -> [200 x 150]
Validating --> AutoName22 = Times (WXF0, LookupTable) : [200 x 150], [150 x *1] -> [200 x *1]
Validating --> bf0 = LearnableParameter() :  -> [200 x 1]
Validating --> AutoName23 = Plus (AutoName22, bf0) : [200 x *1], [200 x 1] -> [200 x 1 x *1]
Validating --> WHF0 = LearnableParameter() :  -> [200 x 200]
Validating --> WCF0 = LearnableParameter() :  -> [200 x 1]
Validating --> WXI0 = LearnableParameter() :  -> [200 x 150]
Validating --> AutoName9 = Times (WXI0, LookupTable) : [200 x 150], [150 x *1] -> [200 x *1]
Validating --> bi0 = LearnableParameter() :  -> [200 x 1]
Validating --> AutoName10 = Plus (AutoName9, bi0) : [200 x *1], [200 x 1] -> [200 x 1 x *1]
Validating --> WHI0 = LearnableParameter() :  -> [200 x 200]
Validating --> WCI0 = LearnableParameter() :  -> [200 x 1]
Validating --> WXC0 = LearnableParameter() :  -> [200 x 150]
Validating --> AutoName16 = Times (WXC0, LookupTable) : [200 x 150], [150 x *1] -> [200 x *1]
Validating --> WHC0 = LearnableParameter() :  -> [200 x 200]
Validating --> bc0 = LearnableParameter() :  -> [200 x 1]
Validating --> AutoName30 = Times (WHO0, AutoName2) : [200 x 200], [200 x 1] -> [200 x 1]
Validating --> AutoName33 = Plus (AutoName32, AutoName30) : [200 x 1 x *1], [200 x 1] -> [200 x 1 x *1]
Validating --> AutoName21 = Times (WHF0, AutoName1) : [200 x 200], [200 x 1] -> [200 x 1]
Validating --> AutoName24 = Plus (AutoName23, AutoName21) : [200 x 1 x *1], [200 x 1] -> [200 x 1 x *1]
Validating --> AutoName20 = DiagTimes (WCF0, AutoName5) : [200 x 1], [200 x 1] -> [200 x 1]
Validating --> AutoName25 = Plus (AutoName24, AutoName20) : [200 x 1 x *1], [200 x 1] -> [200 x 1 x *1]
Validating --> AutoName26 = Sigmoid (AutoName25) : [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName27 = ElementTimes (AutoName26, AutoName6) : [200 x 1 x *1], [200 x 1] -> [200 x 1 x *1]
Validating --> AutoName8 = Times (WHI0, AutoName0) : [200 x 200], [200 x 1] -> [200 x 1]
Validating --> AutoName11 = Plus (AutoName10, AutoName8) : [200 x 1 x *1], [200 x 1] -> [200 x 1 x *1]
Validating --> AutoName7 = DiagTimes (WCI0, AutoName4) : [200 x 1], [200 x 1] -> [200 x 1]
Validating --> AutoName12 = Plus (AutoName11, AutoName7) : [200 x 1 x *1], [200 x 1] -> [200 x 1 x *1]
Validating --> AutoName13 = Sigmoid (AutoName12) : [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName14 = Times (WHC0, AutoName3) : [200 x 200], [200 x 1] -> [200 x 1]
Validating --> AutoName15 = Plus (AutoName14, bc0) : [200 x 1], [200 x 1] -> [200 x 1]
Validating --> AutoName17 = Plus (AutoName16, AutoName15) : [200 x *1], [200 x 1] -> [200 x 1 x *1]
Validating --> AutoName18 = Tanh (AutoName17) : [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName19 = ElementTimes (AutoName13, AutoName18) : [200 x 1 x *1], [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName28 = Plus (AutoName27, AutoName19) : [200 x 1 x *1], [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName29 = DiagTimes (WCO0, AutoName28) : [200 x 1], [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName34 = Plus (AutoName33, AutoName29) : [200 x 1 x *1], [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName35 = Sigmoid (AutoName34) : [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName36 = Tanh (AutoName28) : [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName37 = ElementTimes (AutoName35, AutoName36) : [200 x 1 x *1], [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> outputs = TransposeTimes (W2, AutoName37) : [200 x 10000], [200 x 1 x *1] -> [10000 x 1 x *1]
Validating --> PosteriorProb = Softmax (outputs) : [10000 x 1 x *1] -> [10000 x 1 x *1]
Validating --> labels = InputValue() :  -> [4 x *1]
Validating --> WeightForClassPostProb = LearnableParameter() :  -> [50 x 200]
Validating --> ClassPostProb = Times (WeightForClassPostProb, AutoName37) : [50 x 200], [200 x 1 x *1] -> [50 x 1 x *1]
Validating --> TrainNodeClassBasedCrossEntropy = ClassBasedCrossEntropyWithSoftmax (labels, AutoName37, W2, ClassPostProb) : [4 x *1], [200 x 1 x *1], [200 x 10000], [50 x 1 x *1] -> [1]

Validating network. 43 nodes to process in pass 2.

Validating --> AutoName2 = PastValue (AutoName37) : [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName30 = Times (WHO0, AutoName2) : [200 x 200], [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName1 = PastValue (AutoName37) : [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName21 = Times (WHF0, AutoName1) : [200 x 200], [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName5 = PastValue (AutoName28) : [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName20 = DiagTimes (WCF0, AutoName5) : [200 x 1], [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName6 = PastValue (AutoName28) : [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName0 = PastValue (AutoName37) : [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName8 = Times (WHI0, AutoName0) : [200 x 200], [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName4 = PastValue (AutoName28) : [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName7 = DiagTimes (WCI0, AutoName4) : [200 x 1], [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName3 = PastValue (AutoName37) : [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName14 = Times (WHC0, AutoName3) : [200 x 200], [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName15 = Plus (AutoName14, bc0) : [200 x 1 x *1], [200 x 1] -> [200 x 1 x *1]

Validating network. 14 nodes to process in pass 3.


Validating network, final pass.



19 out of 63 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

evalNodeNames are not specified, using all the default evalnodes and training criterion nodes.


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

0000000000000000: {[AutoName0 Gradient[200 x 1 x *1]] [AutoName1 Gradient[200 x 1 x *1]] [AutoName10 Gradient[200 x 1 x *1]] [AutoName11 Gradient[200 x 1 x *1]] [AutoName12 Gradient[200 x 1 x *1]] [AutoName13 Gradient[200 x 1 x *1]] [AutoName14 Gradient[200 x 1 x *1]] [AutoName15 Gradient[200 x 1 x *1]] [AutoName16 Gradient[200 x *1]] [AutoName17 Gradient[200 x 1 x *1]] [AutoName18 Gradient[200 x 1 x *1]] [AutoName19 Gradient[200 x 1 x *1]] [AutoName2 Gradient[200 x 1 x *1]] [AutoName20 Gradient[200 x 1 x *1]] [AutoName21 Gradient[200 x 1 x *1]] [AutoName22 Gradient[200 x *1]] [AutoName23 Gradient[200 x 1 x *1]] [AutoName24 Gradient[200 x 1 x *1]] [AutoName25 Gradient[200 x 1 x *1]] [AutoName26 Gradient[200 x 1 x *1]] [AutoName27 Gradient[200 x 1 x *1]] [AutoName28 Gradient[200 x 1 x *1]] [AutoName29 Gradient[200 x 1 x *1]] [AutoName3 Gradient[200 x 1 x *1]] [AutoName30 Gradient[200 x 1 x *1]] [AutoName31 Gradient[200 x *1]] [AutoName32 Gradient[200 x 1 x *1]] [AutoName33 Gradient[200 x 1 x *1]] [AutoName34 Gradient[200 x 1 x *1]] [AutoName35 Gradient[200 x 1 x *1]] [AutoName36 Gradient[200 x 1 x *1]] [AutoName37 Gradient[200 x 1 x *1]] [AutoName4 Gradient[200 x 1 x *1]] [AutoName5 Gradient[200 x 1 x *1]] [AutoName6 Gradient[200 x 1 x *1]] [AutoName7 Gradient[200 x 1 x *1]] [AutoName8 Gradient[200 x 1 x *1]] [AutoName9 Gradient[200 x *1]] [ClassPostProb Gradient[50 x 1 x *1]] [E0 Gradient[150 x 10000]] [LookupTable Gradient[150 x *1]] [PosteriorProb Gradient[10000 x 1 x *1]] [PosteriorProb Value[10000 x 1 x *1]] [TrainNodeClassBasedCrossEntropy Gradient[1]] [W2 Gradient[200 x 10000]] [WCF0 Gradient[200 x 1]] [WCI0 Gradient[200 x 1]] [WCO0 Gradient[200 x 1]] [WHC0 Gradient[200 x 200]] [WHF0 Gradient[200 x 200]] [WHI0 Gradient[200 x 200]] [WHO0 Gradient[200 x 200]] [WXC0 Gradient[200 x 150]] [WXF0 Gradient[200 x 150]] [WXI0 Gradient[200 x 150]] [WXO0 Gradient[200 x 150]] [WeightForClassPostProb Gradient[50 x 200]] [bc0 Gradient[200 x 1]] [bf0 Gradient[200 x 1]] [bi0 Gradient[200 x 1]] [bo0 Gradient[200 x 1]] [features Gradient[10000 x *1]] [labels Gradient[4 x *1]] [outputs Gradient[10000 x 1 x *1]] [outputs Value[10000 x 1 x *1]] }
00000083D251C590: {[AutoName20 Value[200 x 1 x *1]] }
00000083D251C6D0: {[AutoName11 Value[200 x 1 x *1]] }
00000083D251C770: {[AutoName17 Value[200 x 1 x *1]] }
00000083D251C8B0: {[AutoName27 Value[200 x 1 x *1]] }
00000083D251C950: {[AutoName15 Value[200 x 1 x *1]] }
00000083D251C9F0: {[AutoName31 Value[200 x *1]] }
00000083D251CA90: {[LookupTable Value[150 x *1]] }
00000083D251CB30: {[WCO0 Value[200 x 1]] }
00000083D251CC70: {[WHF0 Value[200 x 200]] }
00000083D251CD10: {[WXC0 Value[200 x 150]] }
00000083D251CF90: {[WCI0 Value[200 x 1]] }
00000083D251D0D0: {[AutoName32 Value[200 x 1 x *1]] }
00000083D251D170: {[AutoName9 Value[200 x *1]] }
00000083D251D210: {[WXF0 Value[200 x 150]] }
00000083D251D2B0: {[WXO0 Value[200 x 150]] }
00000083D251D350: {[AutoName10 Value[200 x 1 x *1]] }
00000083D251D3F0: {[WeightForClassPostProb Value[50 x 200]] }
00000083D251D490: {[WHI0 Value[200 x 200]] }
00000083D251D670: {[AutoName16 Value[200 x *1]] }
00000083D251D710: {[AutoName30 Value[200 x 1 x *1]] }
00000083D251D8F0: {[WHC0 Value[200 x 200]] }
00000083D251D990: {[AutoName33 Value[200 x 1 x *1]] }
00000083D251DA30: {[WXI0 Value[200 x 150]] }
00000083D251DAD0: {[AutoName21 Value[200 x 1 x *1]] }
00000083D251DB70: {[AutoName8 Value[200 x 1 x *1]] }
00000083D251DC10: {[AutoName7 Value[200 x 1 x *1]] }
00000083D251DCB0: {[TrainNodeClassBasedCrossEntropy Value[1]] }
00000083D251DD50: {[AutoName22 Value[200 x *1]] }
00000083D251DDF0: {[AutoName23 Value[200 x 1 x *1]] }
00000083D251DE90: {[AutoName25 Value[200 x 1 x *1]] }
00000083D251DF30: {[AutoName26 Value[200 x 1 x *1]] }
00000083D251DFD0: {[AutoName12 Value[200 x 1 x *1]] }
00000083D251E070: {[AutoName24 Value[200 x 1 x *1]] }
00000083D251E110: {[AutoName13 Value[200 x 1 x *1]] }
00000083D251E1B0: {[WHO0 Value[200 x 200]] }
00000083D251E250: {[AutoName14 Value[200 x 1 x *1]] }
00000083E0E609D0: {[AutoName0 Value[200 x 1 x *1]] }
00000083E0E60E30: {[AutoName1 Value[200 x 1 x *1]] }
00000083E0E61330: {[AutoName2 Value[200 x 1 x *1]] }
00000083E1160040: {[labels Value[4 x *1]] }
00000083E11605E0: {[AutoName6 Value[200 x 1 x *1]] }
00000083E1160720: {[bc0 Value[200 x 1]] }
00000083E1160860: {[AutoName5 Value[200 x 1 x *1]] }
00000083E1160B80: {[bo0 Value[200 x 1]] }
00000083E1160CC0: {[features Value[10000 x *1]] }
00000083E1160E00: {[AutoName4 Value[200 x 1 x *1]] }
00000083E1160FE0: {[AutoName3 Value[200 x 1 x *1]] }
00000083E11614E0: {[E0 Value[150 x 10000]] }
00000083E1161760: {[bi0 Value[200 x 1]] }
00000083E11618A0: {[W2 Value[200 x 10000]] }
00000083E1161BC0: {[bf0 Value[200 x 1]] }
00000083E1161D00: {[WCF0 Value[200 x 1]] }
00000083E482B170: {[AutoName28 Value[200 x 1 x *1]] }
00000083E482B7B0: {[AutoName18 Value[200 x 1 x *1]] }
00000083E482B990: {[AutoName29 Value[200 x 1 x *1]] }
00000083E482BA30: {[AutoName34 Value[200 x 1 x *1]] }
00000083E482C110: {[AutoName36 Value[200 x 1 x *1]] }
00000083E482C2F0: {[AutoName19 Value[200 x 1 x *1]] }
00000083E482C6B0: {[ClassPostProb Value[50 x 1 x *1]] }
00000083E482C890: {[AutoName37 Value[200 x 1 x *1]] }
00000083E482CED0: {[AutoName35 Value[200 x 1 x *1]] }

LMSequenceReader: Reading epoch data... 3760 sequences read.
LMSequenceReader: Reading epoch data... 0 sequences read.
08/04/2016 08:10:36: Minibatch[1-60]: TrainNodeClassBasedCrossEntropy = 6.37875473 * 82402
08/04/2016 08:10:36: Final Results: Minibatch[1-60]: TrainNodeClassBasedCrossEntropy = 6.37875473 * 82402; perplexity = 589.19354642

08/04/2016 08:10:36: Action "eval" complete.

08/04/2016 08:10:36: __COMPLETED__