CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU W3565 @ 3.20GHz
    Hardware threads: 8
    Total Memory: 12580436 kB
-------------------------------------------------------------------
=== Running /cygdrive/c/jenkins/workspace/CNTK-Test-Windows-W1/x64/release/cntk.exe configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\Miscellaneous\SLU/rnnlu.cntk currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\Miscellaneous\SLU OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu DeviceId=-1 timestamping=true NdlDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Examples\Text\Miscellaneous\SLU ExpDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu OutDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu
-------------------------------------------------------------------
Build info: 

		Built time: Aug  4 2016 06:18:04
		Last modified date: Thu Aug  4 03:39:14 2016
		Build type: Release
		Build target: GPU
		With 1bit-SGD: no
		Math lib: mkl
		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
		CUB_PATH: C:\src\cub-1.4.1
		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
		Build Branch: HEAD
		Build SHA1: 0f61695dfc335f2406284d335678f57c215e6e9c
		Built by svcphil on dphaim-26-new
		Build Path: c:\jenkins\workspace\CNTK-Build-Windows@3\Source\CNTK\
-------------------------------------------------------------------
Changed current directory to C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
08/04/2016 08:09:04: -------------------------------------------------------------------
08/04/2016 08:09:04: Build info: 

08/04/2016 08:09:04: 		Built time: Aug  4 2016 06:18:04
08/04/2016 08:09:04: 		Last modified date: Thu Aug  4 03:39:14 2016
08/04/2016 08:09:04: 		Build type: Release
08/04/2016 08:09:04: 		Build target: GPU
08/04/2016 08:09:04: 		With 1bit-SGD: no
08/04/2016 08:09:04: 		Math lib: mkl
08/04/2016 08:09:04: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
08/04/2016 08:09:04: 		CUB_PATH: C:\src\cub-1.4.1
08/04/2016 08:09:04: 		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
08/04/2016 08:09:04: 		Build Branch: HEAD
08/04/2016 08:09:04: 		Build SHA1: 0f61695dfc335f2406284d335678f57c215e6e9c
08/04/2016 08:09:04: 		Built by svcphil on dphaim-26-new
08/04/2016 08:09:04: 		Build Path: c:\jenkins\workspace\CNTK-Build-Windows@3\Source\CNTK\
08/04/2016 08:09:04: -------------------------------------------------------------------
08/04/2016 08:09:04: -------------------------------------------------------------------
08/04/2016 08:09:04: GPU info:

08/04/2016 08:09:04: 		Device[0]: cores = 2496; computeCapability = 5.2; type = "Quadro M4000"; memory = 8192 MB
08/04/2016 08:09:04: -------------------------------------------------------------------

08/04/2016 08:09:04: Running on cntk-muc01 at 2016/08/04 08:09:04
08/04/2016 08:09:04: Command line: 
C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\release\cntk.exe  configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\Miscellaneous\SLU/rnnlu.cntk  currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU  RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu  DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU  ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\Miscellaneous\SLU  OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu  DeviceId=-1  timestamping=true  NdlDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Examples\Text\Miscellaneous\SLU  ExpDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu  OutDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu



08/04/2016 08:09:04: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
08/04/2016 08:09:04: precision="float"
deviceId = $DeviceId$
command=LSTM:LSTMTest
traceLevel=1
LSTM=[
    action=train
	makeMode=true
    modelPath=$ExpDir$/cntkdebug.dnn
    SimpleNetworkBuilder=[
        rnnType=LSTM
        layerSizes=2832:50:300:300:300:127
        lookupTableOrder=3
        recurrentLayer=2:3:4
        defaultHiddenActivity=0.1
        initValueScale=6.0
        trainingCriterion=crossentropywithsoftmax
        evalCriterion=crossentropywithsoftmax
    ]
    SGD=[
maxEpochs=100   
epochSize=71524     
        minibatchSize=10000
        learningRatesPerSample=0.1
        momentumAsTimeConstant=1000
        gradientClippingWithTruncation=true
        clippingThresholdPerSample=15.0
        numMBsToShowResult=50
        loadBestModel=true
        AutoAdjust=[
            autoAdjustLR=adjustafterepoch
            reduceLearnRateIfImproveLessThan=0
            increaseLearnRateIfImproveMoreThan=1000000000
            learnRateDecreaseFactor=0.5
            learnRateIncreaseFactor=1.382
        ]
    ]
    reader=[
        readerType=LUSequenceReader
        wordContext=0:1:2
        randomize=None
nbruttsineachrecurrentiter=10  
        equalLength = false
        wfile=$ExpDir$/sequenceSentence.bin
        wsize=256
        wrecords=1000
        windowSize=10000
        unk="<unk>"
          wordmap=$DataDir$/inputmap.txt
          file=$DataDir$/atis.train.apos.pred.pos.head.IOB.simple
          features=[
            dim=0
            sectionType=data
          ]
          sequence=[
            dim=1
            wrecords=2
            sectionType=data
          ]
          labelIn=[
            dim=1
            usewordmap=true
            labelDim=10000
            labelMappingFile=$ExpDir$/sentenceLabels.txt
            labelType=Category
            beginSequence="BOS"
            endSequence="EOS"
            usewordmap=true
            token=$DataDir$/input.txt
            elementSize=4
            sectionType=labels
            mapping=[
              wrecords=11
              elementSize=10
              sectionType=labelMapping
            ]
            category=[
              dim=11
              sectionType=categoryLabels
            ]
          ]
          labels=[
            dim=1
            labelType=Category
            token=$DataDir$/output.txt
            labelMappingFile=$ExpDir$/sentenceLabels.out.txt
            sectionType=labels
            mapping=[
              sectionType=labelMapping
            ]
            category=[
              sectionType=categoryLabels
            ]
          ]
    ]
    cvReader=[
      readerType=LUSequenceReader
      randomize=None
      wordContext=0:1:2
      nbruttsineachrecurrentiter=200
      equalLength = false
      wfile=$ExpDir$/sequenceSentence.valid.bin
      wsize=256
      wrecords=1000
      windowSize=10000
      unk="<unk>"
      wordmap=$DataDir$/inputmap.txt
      file=$DataDir$/atis.dev.IOB.simple
      features=[
        dim=0
        sectionType=data
      ]
      sequence=[
        dim=1
        wrecords=2
        sectionType=data
      ]
      labelIn=[
        dim=1
        labelDim=10000
        labelMappingFile=$ExpDir$/sentenceLabels.in.txt
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        usewordmap=true
        token=$DataDir$/input.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=11
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=11
          sectionType=categoryLabels
        ]
      ]
      labels=[
        dim=1
        labelType=Category
        token=$DataDir$/output.txt
        labelDim=10000
        labelMappingFile=$ExpDir$/sentenceLabels.out.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=3
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=3
          sectionType=categoryLabels
        ]
      ]
    ]
]
LSTMTest=[
    action=write
    epochSize=4430000
    defaultHiddenActivity=0.1
    modelPath=$ExpDir$/cntkdebug.dnn
    outputNodeNames=outputs:labels
    reader=[
      readerType=LUSequenceReader
      randomize=None
      wordContext=0:1:2
      unk="<unk>"
      wordmap=$DataDir$/inputmap.txt
      file=$DataDir$/atis.test.apos.pred.pos.head.IOB.simple
      wfile=$ExpDir$/sequenceSentence.bin
      wsize=256
      wrecords=1000
      windowSize=10000
      features=[
        dim=0 
        sectionType=data
      ]
      sequence=[
        dim=1
        wrecords=2
        sectionType=data
      ]
      labelIn=[
        dim=1
        labelDim=10000
        labelMappingFile=$ExpDir$/sentenceLabels.txt
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        usewordmap=true
        token=$DataDir$/input.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=11
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=11
          sectionType=categoryLabels
        ]
      ]
      labels=[
        dim=1
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        token=$DataDir$/output.txt
        labelDim=127
        labelMappingFile=$ExpDir$/sentenceLabels.out.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=3
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=3
          sectionType=categoryLabels
        ]
      ]
    ]
    writer=[
        writerType=LUSequenceWriter
        outputs=[
            file=$OutDir$/output.rec.txt
            token=$DataDir$/output.txt
        ]
        labels=[
            file=$OutDir$/output.lbl.txt
            token=$DataDir$/output.txt
        ]
    ]
]
currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu
DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\Miscellaneous\SLU
OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu
DeviceId=-1
timestamping=true
NdlDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Examples\Text\Miscellaneous\SLU
ExpDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu
OutDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu

08/04/2016 08:09:04: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<

08/04/2016 08:09:04: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
08/04/2016 08:09:04: precision="float"
deviceId = -1
command=LSTM:LSTMTest
traceLevel=1
LSTM=[
    action=train
	makeMode=true
    modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn
    SimpleNetworkBuilder=[
        rnnType=LSTM
        layerSizes=2832:50:300:300:300:127
        lookupTableOrder=3
        recurrentLayer=2:3:4
        defaultHiddenActivity=0.1
        initValueScale=6.0
        trainingCriterion=crossentropywithsoftmax
        evalCriterion=crossentropywithsoftmax
    ]
    SGD=[
maxEpochs=100   
epochSize=71524     
        minibatchSize=10000
        learningRatesPerSample=0.1
        momentumAsTimeConstant=1000
        gradientClippingWithTruncation=true
        clippingThresholdPerSample=15.0
        numMBsToShowResult=50
        loadBestModel=true
        AutoAdjust=[
            autoAdjustLR=adjustafterepoch
            reduceLearnRateIfImproveLessThan=0
            increaseLearnRateIfImproveMoreThan=1000000000
            learnRateDecreaseFactor=0.5
            learnRateIncreaseFactor=1.382
        ]
    ]
    reader=[
        readerType=LUSequenceReader
        wordContext=0:1:2
        randomize=None
nbruttsineachrecurrentiter=10  
        equalLength = false
        wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/sequenceSentence.bin
        wsize=256
        wrecords=1000
        windowSize=10000
        unk="<unk>"
          wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
          file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.train.apos.pred.pos.head.IOB.simple
          features=[
            dim=0
            sectionType=data
          ]
          sequence=[
            dim=1
            wrecords=2
            sectionType=data
          ]
          labelIn=[
            dim=1
            usewordmap=true
            labelDim=10000
            labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/sentenceLabels.txt
            labelType=Category
            beginSequence="BOS"
            endSequence="EOS"
            usewordmap=true
            token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
            elementSize=4
            sectionType=labels
            mapping=[
              wrecords=11
              elementSize=10
              sectionType=labelMapping
            ]
            category=[
              dim=11
              sectionType=categoryLabels
            ]
          ]
          labels=[
            dim=1
            labelType=Category
            token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
            labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/sentenceLabels.out.txt
            sectionType=labels
            mapping=[
              sectionType=labelMapping
            ]
            category=[
              sectionType=categoryLabels
            ]
          ]
    ]
    cvReader=[
      readerType=LUSequenceReader
      randomize=None
      wordContext=0:1:2
      nbruttsineachrecurrentiter=200
      equalLength = false
      wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/sequenceSentence.valid.bin
      wsize=256
      wrecords=1000
      windowSize=10000
      unk="<unk>"
      wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
      file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.dev.IOB.simple
      features=[
        dim=0
        sectionType=data
      ]
      sequence=[
        dim=1
        wrecords=2
        sectionType=data
      ]
      labelIn=[
        dim=1
        labelDim=10000
        labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/sentenceLabels.in.txt
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        usewordmap=true
        token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=11
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=11
          sectionType=categoryLabels
        ]
      ]
      labels=[
        dim=1
        labelType=Category
        token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
        labelDim=10000
        labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/sentenceLabels.out.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=3
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=3
          sectionType=categoryLabels
        ]
      ]
    ]
]
LSTMTest=[
    action=write
    epochSize=4430000
    defaultHiddenActivity=0.1
    modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn
    outputNodeNames=outputs:labels
    reader=[
      readerType=LUSequenceReader
      randomize=None
      wordContext=0:1:2
      unk="<unk>"
      wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
      file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.test.apos.pred.pos.head.IOB.simple
      wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/sequenceSentence.bin
      wsize=256
      wrecords=1000
      windowSize=10000
      features=[
        dim=0 
        sectionType=data
      ]
      sequence=[
        dim=1
        wrecords=2
        sectionType=data
      ]
      labelIn=[
        dim=1
        labelDim=10000
        labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/sentenceLabels.txt
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        usewordmap=true
        token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=11
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=11
          sectionType=categoryLabels
        ]
      ]
      labels=[
        dim=1
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
        labelDim=127
        labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/sentenceLabels.out.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=3
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=3
          sectionType=categoryLabels
        ]
      ]
    ]
    writer=[
        writerType=LUSequenceWriter
        outputs=[
            file=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/output.rec.txt
            token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
        ]
        labels=[
            file=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/output.lbl.txt
            token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
        ]
    ]
]
currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu
DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\Miscellaneous\SLU
OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu
DeviceId=-1
timestamping=true
NdlDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Examples\Text\Miscellaneous\SLU
ExpDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu
OutDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu

08/04/2016 08:09:04: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<

08/04/2016 08:09:04: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
configparameters: rnnlu.cntk:command=LSTM:LSTMTest
configparameters: rnnlu.cntk:ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\Miscellaneous\SLU
configparameters: rnnlu.cntk:currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
configparameters: rnnlu.cntk:DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
configparameters: rnnlu.cntk:deviceId=-1
configparameters: rnnlu.cntk:ExpDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu
configparameters: rnnlu.cntk:LSTM=[
    action=train
	makeMode=true
    modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn
    SimpleNetworkBuilder=[
        rnnType=LSTM
        layerSizes=2832:50:300:300:300:127
        lookupTableOrder=3
        recurrentLayer=2:3:4
        defaultHiddenActivity=0.1
        initValueScale=6.0
        trainingCriterion=crossentropywithsoftmax
        evalCriterion=crossentropywithsoftmax
    ]
    SGD=[
maxEpochs=100   
epochSize=71524     
        minibatchSize=10000
        learningRatesPerSample=0.1
        momentumAsTimeConstant=1000
        gradientClippingWithTruncation=true
        clippingThresholdPerSample=15.0
        numMBsToShowResult=50
        loadBestModel=true
        AutoAdjust=[
            autoAdjustLR=adjustafterepoch
            reduceLearnRateIfImproveLessThan=0
            increaseLearnRateIfImproveMoreThan=1000000000
            learnRateDecreaseFactor=0.5
            learnRateIncreaseFactor=1.382
        ]
    ]
    reader=[
        readerType=LUSequenceReader
        wordContext=0:1:2
        randomize=None
nbruttsineachrecurrentiter=10  
        equalLength = false
        wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/sequenceSentence.bin
        wsize=256
        wrecords=1000
        windowSize=10000
        unk="<unk>"
          wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
          file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.train.apos.pred.pos.head.IOB.simple
          features=[
            dim=0
            sectionType=data
          ]
          sequence=[
            dim=1
            wrecords=2
            sectionType=data
          ]
          labelIn=[
            dim=1
            usewordmap=true
            labelDim=10000
            labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/sentenceLabels.txt
            labelType=Category
            beginSequence="BOS"
            endSequence="EOS"
            usewordmap=true
            token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
            elementSize=4
            sectionType=labels
            mapping=[
              wrecords=11
              elementSize=10
              sectionType=labelMapping
            ]
            category=[
              dim=11
              sectionType=categoryLabels
            ]
          ]
          labels=[
            dim=1
            labelType=Category
            token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
            labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/sentenceLabels.out.txt
            sectionType=labels
            mapping=[
              sectionType=labelMapping
            ]
            category=[
              sectionType=categoryLabels
            ]
          ]
    ]
    cvReader=[
      readerType=LUSequenceReader
      randomize=None
      wordContext=0:1:2
      nbruttsineachrecurrentiter=200
      equalLength = false
      wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/sequenceSentence.valid.bin
      wsize=256
      wrecords=1000
      windowSize=10000
      unk="<unk>"
      wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
      file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.dev.IOB.simple
      features=[
        dim=0
        sectionType=data
      ]
      sequence=[
        dim=1
        wrecords=2
        sectionType=data
      ]
      labelIn=[
        dim=1
        labelDim=10000
        labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/sentenceLabels.in.txt
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        usewordmap=true
        token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=11
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=11
          sectionType=categoryLabels
        ]
      ]
      labels=[
        dim=1
        labelType=Category
        token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
        labelDim=10000
        labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/sentenceLabels.out.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=3
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=3
          sectionType=categoryLabels
        ]
      ]
    ]
]

configparameters: rnnlu.cntk:LSTMTest=[
    action=write
    epochSize=4430000
    defaultHiddenActivity=0.1
    modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn
    outputNodeNames=outputs:labels
    reader=[
      readerType=LUSequenceReader
      randomize=None
      wordContext=0:1:2
      unk="<unk>"
      wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
      file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.test.apos.pred.pos.head.IOB.simple
      wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/sequenceSentence.bin
      wsize=256
      wrecords=1000
      windowSize=10000
      features=[
        dim=0 
        sectionType=data
      ]
      sequence=[
        dim=1
        wrecords=2
        sectionType=data
      ]
      labelIn=[
        dim=1
        labelDim=10000
        labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/sentenceLabels.txt
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        usewordmap=true
        token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=11
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=11
          sectionType=categoryLabels
        ]
      ]
      labels=[
        dim=1
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
        labelDim=127
        labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/sentenceLabels.out.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=3
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=3
          sectionType=categoryLabels
        ]
      ]
    ]
    writer=[
        writerType=LUSequenceWriter
        outputs=[
            file=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/output.rec.txt
            token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
        ]
        labels=[
            file=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/output.lbl.txt
            token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
        ]
    ]
]

configparameters: rnnlu.cntk:NdlDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Examples\Text\Miscellaneous\SLU
configparameters: rnnlu.cntk:OutDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu
configparameters: rnnlu.cntk:OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu
configparameters: rnnlu.cntk:precision=float
configparameters: rnnlu.cntk:RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu
configparameters: rnnlu.cntk:timestamping=true
configparameters: rnnlu.cntk:traceLevel=1
08/04/2016 08:09:04: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
08/04/2016 08:09:04: Commands: LSTM LSTMTest
08/04/2016 08:09:04: Precision = "float"
08/04/2016 08:09:04: CNTKModelPath: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn
08/04/2016 08:09:04: CNTKCommandTrainInfo: LSTM : 100
08/04/2016 08:09:04: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 100

08/04/2016 08:09:04: ##############################################################################
08/04/2016 08:09:04: #                                                                            #
08/04/2016 08:09:04: # Action "train"                                                             #
08/04/2016 08:09:04: #                                                                            #
08/04/2016 08:09:04: ##############################################################################

08/04/2016 08:09:04: CNTKCommandTrainBegin: LSTM
SimpleNetworkBuilder Using CPU
BatchLUSequenceReader: Input file is C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.train.apos.pred.pos.head.IOB.simple
BatchLUSequenceReader: Input file is C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.dev.IOB.simple

08/04/2016 08:09:04: Creating virgin network.

Post-processing network...

3 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	PosteriorProb = Softmax()
	outputs = Times()

Loop[0] --> Loop_AutoName37 -> 31 nodes

	AutoName2	AutoName30	AutoName33
	AutoName1	AutoName21	AutoName24
	AutoName5	AutoName20	AutoName25
	AutoName26	AutoName6	AutoName27
	AutoName0	AutoName8	AutoName11
	AutoName4	AutoName7	AutoName12
	AutoName13	AutoName3	AutoName14
	AutoName15	AutoName17	AutoName18
	AutoName19	AutoName28	AutoName29
	AutoName34	AutoName35	AutoName36
	AutoName37

Loop[1] --> Loop_AutoName75 -> 31 nodes

	AutoName40	AutoName68	AutoName71
	AutoName39	AutoName59	AutoName62
	AutoName43	AutoName58	AutoName63
	AutoName64	AutoName44	AutoName65
	AutoName38	AutoName46	AutoName49
	AutoName42	AutoName45	AutoName50
	AutoName51	AutoName41	AutoName52
	AutoName53	AutoName55	AutoName56
	AutoName57	AutoName66	AutoName67
	AutoName72	AutoName73	AutoName74
	AutoName75

Loop[2] --> Loop_AutoName113 -> 31 nodes

	AutoName78	AutoName106	AutoName109
	AutoName77	AutoName97	AutoName100
	AutoName81	AutoName96	AutoName101
	AutoName102	AutoName82	AutoName103
	AutoName76	AutoName84	AutoName87
	AutoName80	AutoName83	AutoName88
	AutoName89	AutoName79	AutoName90
	AutoName91	AutoName93	AutoName94
	AutoName95	AutoName104	AutoName105
	AutoName110	AutoName111	AutoName112
	AutoName113

Validating network. 168 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [127 x *]
Validating --> W4 = LearnableParameter() :  -> [127 x 300]
Validating --> WXO3 = LearnableParameter() :  -> [300 x 300]
Validating --> WXO2 = LearnableParameter() :  -> [300 x 300]
Validating --> WXO0 = LearnableParameter() :  -> [300 x 150]
Validating --> E0 = LearnableParameter() :  -> [50 x 944]
Validating --> features = InputValue() :  -> [2832 x *]
Validating --> LookupTable = LookupTable (E0, features) : [50 x 944], [2832 x *] -> [150 x *]
Validating --> AutoName31 = Times (WXO0, LookupTable) : [300 x 150], [150 x *] -> [300 x *]
Validating --> bo0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName32 = Plus (AutoName31, bo0) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHO0 = LearnableParameter() :  -> [300 x 300]
Validating --> WCO0 = LearnableParameter() :  -> [300 x 1]
Validating --> WXF0 = LearnableParameter() :  -> [300 x 150]
Validating --> AutoName22 = Times (WXF0, LookupTable) : [300 x 150], [150 x *] -> [300 x *]
Validating --> bf0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName23 = Plus (AutoName22, bf0) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHF0 = LearnableParameter() :  -> [300 x 300]
Validating --> WCF0 = LearnableParameter() :  -> [300 x 1]
Validating --> WXI0 = LearnableParameter() :  -> [300 x 150]
Validating --> AutoName9 = Times (WXI0, LookupTable) : [300 x 150], [150 x *] -> [300 x *]
Validating --> bi0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName10 = Plus (AutoName9, bi0) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHI0 = LearnableParameter() :  -> [300 x 300]
Validating --> WCI0 = LearnableParameter() :  -> [300 x 1]
Validating --> WXC0 = LearnableParameter() :  -> [300 x 150]
Validating --> AutoName16 = Times (WXC0, LookupTable) : [300 x 150], [150 x *] -> [300 x *]
Validating --> WHC0 = LearnableParameter() :  -> [300 x 300]
Validating --> bc0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName30 = Times (WHO0, AutoName2) : [300 x 300], [300] -> [300]
Validating --> AutoName33 = Plus (AutoName32, AutoName30) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName21 = Times (WHF0, AutoName1) : [300 x 300], [300] -> [300]
Validating --> AutoName24 = Plus (AutoName23, AutoName21) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName20 = DiagTimes (WCF0, AutoName5) : [300 x 1], [300] -> [300]
Validating --> AutoName25 = Plus (AutoName24, AutoName20) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName26 = Sigmoid (AutoName25) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName27 = ElementTimes (AutoName26, AutoName6) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName8 = Times (WHI0, AutoName0) : [300 x 300], [300] -> [300]
Validating --> AutoName11 = Plus (AutoName10, AutoName8) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName7 = DiagTimes (WCI0, AutoName4) : [300 x 1], [300] -> [300]
Validating --> AutoName12 = Plus (AutoName11, AutoName7) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName13 = Sigmoid (AutoName12) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName14 = Times (WHC0, AutoName3) : [300 x 300], [300] -> [300]
Validating --> AutoName15 = Plus (AutoName14, bc0) : [300], [300 x 1] -> [300 x 1]
Validating --> AutoName17 = Plus (AutoName16, AutoName15) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> AutoName18 = Tanh (AutoName17) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName19 = ElementTimes (AutoName13, AutoName18) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName28 = Plus (AutoName27, AutoName19) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName29 = DiagTimes (WCO0, AutoName28) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName34 = Plus (AutoName33, AutoName29) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName35 = Sigmoid (AutoName34) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName36 = Tanh (AutoName28) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName37 = ElementTimes (AutoName35, AutoName36) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName69 = Times (WXO2, AutoName37) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> bo2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName70 = Plus (AutoName69, bo2) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHO2 = LearnableParameter() :  -> [300 x 300]
Validating --> WCO2 = LearnableParameter() :  -> [300 x 1]
Validating --> WXF2 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName60 = Times (WXF2, AutoName37) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> bf2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName61 = Plus (AutoName60, bf2) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHF2 = LearnableParameter() :  -> [300 x 300]
Validating --> WCF2 = LearnableParameter() :  -> [300 x 1]
Validating --> WXI2 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName47 = Times (WXI2, AutoName37) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> bi2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName48 = Plus (AutoName47, bi2) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHI2 = LearnableParameter() :  -> [300 x 300]
Validating --> WCI2 = LearnableParameter() :  -> [300 x 1]
Validating --> WXC2 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName54 = Times (WXC2, AutoName37) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> WHC2 = LearnableParameter() :  -> [300 x 300]
Validating --> bc2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName68 = Times (WHO2, AutoName40) : [300 x 300], [300] -> [300]
Validating --> AutoName71 = Plus (AutoName70, AutoName68) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName59 = Times (WHF2, AutoName39) : [300 x 300], [300] -> [300]
Validating --> AutoName62 = Plus (AutoName61, AutoName59) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName58 = DiagTimes (WCF2, AutoName43) : [300 x 1], [300] -> [300]
Validating --> AutoName63 = Plus (AutoName62, AutoName58) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName64 = Sigmoid (AutoName63) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName65 = ElementTimes (AutoName64, AutoName44) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName46 = Times (WHI2, AutoName38) : [300 x 300], [300] -> [300]
Validating --> AutoName49 = Plus (AutoName48, AutoName46) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName45 = DiagTimes (WCI2, AutoName42) : [300 x 1], [300] -> [300]
Validating --> AutoName50 = Plus (AutoName49, AutoName45) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName51 = Sigmoid (AutoName50) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName52 = Times (WHC2, AutoName41) : [300 x 300], [300] -> [300]
Validating --> AutoName53 = Plus (AutoName52, bc2) : [300], [300 x 1] -> [300 x 1]
Validating --> AutoName55 = Plus (AutoName54, AutoName53) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> AutoName56 = Tanh (AutoName55) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName57 = ElementTimes (AutoName51, AutoName56) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName66 = Plus (AutoName65, AutoName57) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName67 = DiagTimes (WCO2, AutoName66) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName72 = Plus (AutoName71, AutoName67) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName73 = Sigmoid (AutoName72) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName74 = Tanh (AutoName66) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName75 = ElementTimes (AutoName73, AutoName74) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName107 = Times (WXO3, AutoName75) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> bo3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName108 = Plus (AutoName107, bo3) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHO3 = LearnableParameter() :  -> [300 x 300]
Validating --> WCO3 = LearnableParameter() :  -> [300 x 1]
Validating --> WXF3 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName98 = Times (WXF3, AutoName75) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> bf3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName99 = Plus (AutoName98, bf3) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHF3 = LearnableParameter() :  -> [300 x 300]
Validating --> WCF3 = LearnableParameter() :  -> [300 x 1]
Validating --> WXI3 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName85 = Times (WXI3, AutoName75) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> bi3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName86 = Plus (AutoName85, bi3) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHI3 = LearnableParameter() :  -> [300 x 300]
Validating --> WCI3 = LearnableParameter() :  -> [300 x 1]
Validating --> WXC3 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName92 = Times (WXC3, AutoName75) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> WHC3 = LearnableParameter() :  -> [300 x 300]
Validating --> bc3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName106 = Times (WHO3, AutoName78) : [300 x 300], [300] -> [300]
Validating --> AutoName109 = Plus (AutoName108, AutoName106) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName97 = Times (WHF3, AutoName77) : [300 x 300], [300] -> [300]
Validating --> AutoName100 = Plus (AutoName99, AutoName97) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName96 = DiagTimes (WCF3, AutoName81) : [300 x 1], [300] -> [300]
Validating --> AutoName101 = Plus (AutoName100, AutoName96) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName102 = Sigmoid (AutoName101) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName103 = ElementTimes (AutoName102, AutoName82) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName84 = Times (WHI3, AutoName76) : [300 x 300], [300] -> [300]
Validating --> AutoName87 = Plus (AutoName86, AutoName84) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName83 = DiagTimes (WCI3, AutoName80) : [300 x 1], [300] -> [300]
Validating --> AutoName88 = Plus (AutoName87, AutoName83) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName89 = Sigmoid (AutoName88) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName90 = Times (WHC3, AutoName79) : [300 x 300], [300] -> [300]
Validating --> AutoName91 = Plus (AutoName90, bc3) : [300], [300 x 1] -> [300 x 1]
Validating --> AutoName93 = Plus (AutoName92, AutoName91) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> AutoName94 = Tanh (AutoName93) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName95 = ElementTimes (AutoName89, AutoName94) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName104 = Plus (AutoName103, AutoName95) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName105 = DiagTimes (WCO3, AutoName104) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName110 = Plus (AutoName109, AutoName105) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName111 = Sigmoid (AutoName110) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName112 = Tanh (AutoName104) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName113 = ElementTimes (AutoName111, AutoName112) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName114 = Times (W4, AutoName113) : [127 x 300], [300 x 1 x *] -> [127 x 1 x *]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, AutoName114) : [127 x *], [127 x 1 x *] -> [1]
Validating --> outputs = Times (W4, AutoName113) : [127 x 300], [300 x 1 x *] -> [127 x 1 x *]
Validating --> PosteriorProb = Softmax (outputs) : [127 x 1 x *] -> [127 x 1 x *]

Validating network. 119 nodes to process in pass 2.

Validating --> AutoName2 = PastValue (AutoName37) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName30 = Times (WHO0, AutoName2) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName1 = PastValue (AutoName37) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName21 = Times (WHF0, AutoName1) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName5 = PastValue (AutoName28) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName20 = DiagTimes (WCF0, AutoName5) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName6 = PastValue (AutoName28) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName0 = PastValue (AutoName37) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName8 = Times (WHI0, AutoName0) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName4 = PastValue (AutoName28) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName7 = DiagTimes (WCI0, AutoName4) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName3 = PastValue (AutoName37) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName14 = Times (WHC0, AutoName3) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName15 = Plus (AutoName14, bc0) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> AutoName40 = PastValue (AutoName75) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName68 = Times (WHO2, AutoName40) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName39 = PastValue (AutoName75) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName59 = Times (WHF2, AutoName39) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName43 = PastValue (AutoName66) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName58 = DiagTimes (WCF2, AutoName43) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName44 = PastValue (AutoName66) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName38 = PastValue (AutoName75) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName46 = Times (WHI2, AutoName38) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName42 = PastValue (AutoName66) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName45 = DiagTimes (WCI2, AutoName42) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName41 = PastValue (AutoName75) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName52 = Times (WHC2, AutoName41) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName53 = Plus (AutoName52, bc2) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> AutoName78 = PastValue (AutoName113) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName106 = Times (WHO3, AutoName78) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName77 = PastValue (AutoName113) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName97 = Times (WHF3, AutoName77) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName81 = PastValue (AutoName104) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName96 = DiagTimes (WCF3, AutoName81) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName82 = PastValue (AutoName104) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName76 = PastValue (AutoName113) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName84 = Times (WHI3, AutoName76) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName80 = PastValue (AutoName104) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName83 = DiagTimes (WCI3, AutoName80) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName79 = PastValue (AutoName113) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName90 = Times (WHC3, AutoName79) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName91 = Plus (AutoName90, bc3) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]

Validating network. 42 nodes to process in pass 3.


Validating network, final pass.



48 out of 168 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

08/04/2016 08:09:04: Created model with 168 nodes on CPU.

08/04/2016 08:09:04: Training criterion node(s):
08/04/2016 08:09:04: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

0000000000000000: {[PosteriorProb Gradient[127 x 1 x *]] [PosteriorProb Value[127 x 1 x *]] [features Gradient[2832 x *]] [labels Gradient[127 x *]] [outputs Gradient[127 x 1 x *]] }
0000008BEA87FCD0: {[bc0 Gradient[300 x 1]] }
0000008BEA87FD70: {[AutoName111 Value[300 x 1 x *]] }
0000008BEA87FE10: {[AutoName110 Value[300 x 1 x *]] }
0000008BEA87FEB0: {[AutoName102 Value[300 x 1 x *]] [WCF0 Gradient[300 x 1]] }
0000008BEA87FF50: {[AutoName103 Value[300 x 1 x *]] [AutoName33 Gradient[300 x 1 x *]] [AutoName48 Gradient[300 x 1 x *]] }
0000008BEA87FFF0: {[AutoName64 Gradient[300 x 1 x *]] [AutoName84 Value[300 x 1 x *]] }
0000008BEA880090: {[AutoName111 Gradient[300 x 1 x *]] [AutoName114 Value[127 x 1 x *]] }
0000008BEA880130: {[AutoName37 Gradient[300 x 1 x *]] [AutoName40 Gradient[300 x 1 x *]] [AutoName90 Value[300 x 1 x *]] }
0000008BEA880270: {[AutoName104 Gradient[300 x 1 x *]] }
0000008BEA880310: {[AutoName95 Value[300 x 1 x *]] }
0000008BEA8803B0: {[WCO3 Gradient[300 x 1]] }
0000008BEA880450: {[AutoName63 Gradient[300 x 1 x *]] [AutoName7 Gradient[300 x 1 x *]] [AutoName87 Value[300 x 1 x *]] }
0000008BEA8804F0: {[AutoName95 Gradient[300 x 1 x *]] }
0000008BEA880590: {[AutoName28 Gradient[300 x 1 x *]] [AutoName70 Gradient[300 x 1 x *]] [AutoName89 Gradient[300 x 1 x *]] }
0000008BEA880630: {[AutoName92 Gradient[300 x 1 x *]] [bi3 Gradient[300 x 1]] }
0000008BEA8806D0: {[AutoName113 Gradient[300 x 1 x *]] }
0000008BEA880770: {[AutoName105 Gradient[300 x 1 x *]] }
0000008BEA880810: {[AutoName91 Gradient[300 x 1 x *]] }
0000008BEA8808B0: {[W4 Gradient[127 x 300]] }
0000008BEA880950: {[AutoName88 Gradient[300 x 1 x *]] [WHF2 Gradient[300 x 300]] }
0000008BEA8809F0: {[AutoName18 Gradient[300 x 1 x *]] [AutoName59 Gradient[300 x 1 x *]] [AutoName88 Value[300 x 1 x *]] }
0000008BEA880A90: {[WCF2 Gradient[300 x 1]] }
0000008BEA880B30: {[AutoName101 Value[300 x 1 x *]] [AutoName24 Gradient[300 x 1 x *]] [AutoName49 Gradient[300 x 1 x *]] }
0000008BEA880BD0: {[AutoName105 Value[300 x 1 x *]] }
0000008BEA880C70: {[AutoName110 Gradient[300 x 1 x *]] }
0000008BEA880D10: {[CrossEntropyWithSoftmax Gradient[1]] }
0000008BEA880DB0: {[AutoName19 Gradient[300 x 1 x *]] [AutoName39 Gradient[300 x 1 x *]] [AutoName89 Value[300 x 1 x *]] }
0000008BEA880EF0: {[AutoName103 Gradient[300 x 1 x *]] [AutoName46 Gradient[300 x 1 x *]] [AutoName6 Gradient[300 x 1 x *]] }
0000008BEA880F90: {[AutoName90 Gradient[300 x 1 x *]] }
0000008BEA881030: {[bc3 Gradient[300 x 1]] }
0000008BEA881170: {[AutoName109 Gradient[300 x 1 x *]] [WCO2 Gradient[300 x 1]] }
0000008BEA881210: {[WHC3 Gradient[300 x 300]] }
0000008BEA8812B0: {[AutoName91 Value[300 x 1 x *]] }
0000008BEA881350: {[AutoName112 Value[300 x 1 x *]] }
0000008BEA8813F0: {[AutoName104 Value[300 x 1 x *]] }
0000008BEA881490: {[AutoName93 Gradient[300 x 1 x *]] }
0000008BEA881530: {[AutoName93 Value[300 x 1 x *]] }
0000008BEA8815D0: {[AutoName34 Gradient[300 x 1 x *]] [AutoName61 Gradient[300 x 1 x *]] [AutoName83 Gradient[300 x 1 x *]] }
0000008BEA881670: {[AutoName94 Value[300 x 1 x *]] }
0000008BEA881710: {[AutoName113 Value[300 x 1 x *]] }
0000008BEA8817B0: {[AutoName94 Gradient[300 x 1 x *]] }
0000008BEA881850: {[AutoName14 Gradient[300 x 1 x *]] [AutoName43 Gradient[300 x 1 x *]] [AutoName83 Value[300 x 1 x *]] }
0000008BEA8818F0: {[AutoName16 Gradient[300 x *]] [AutoName62 Gradient[300 x 1 x *]] [AutoName87 Gradient[300 x 1 x *]] [bi0 Gradient[300 x 1]] }
0000008BEA881990: {[AutoName79 Gradient[300 x 1 x *]] [WHO2 Gradient[300 x 300]] }
0000008BEA881A30: {[WCI3 Gradient[300 x 1]] }
0000008BEA881AD0: {[AutoName112 Gradient[300 x 1 x *]] [AutoName114 Gradient[127 x 1 x *]] }
0000008BEA883CF0: {[AutoName50 Gradient[300 x 1 x *]] [AutoName96 Gradient[300 x 1 x *]] [WHF0 Gradient[300 x 300]] }
0000008BEA883F70: {[WCF3 Gradient[300 x 1]] }
0000008BEA884010: {[AutoName52 Gradient[300 x 1 x *]] [AutoName81 Gradient[300 x 1 x *]] }
0000008BEA8840B0: {[AutoName72 Gradient[300 x 1 x *]] [AutoName99 Gradient[300 x 1 x *]] }
0000008BEA884290: {[AutoName4 Gradient[300 x 1 x *]] [AutoName44 Gradient[300 x 1 x *]] [AutoName84 Gradient[300 x 1 x *]] }
0000008BEA884510: {[AutoName56 Gradient[300 x 1 x *]] [AutoName97 Gradient[300 x 1 x *]] }
0000008BEA8845B0: {[AutoName102 Gradient[300 x 1 x *]] }
0000008BEA884790: {[AutoName0 Gradient[300 x 1 x *]] [AutoName38 Gradient[300 x 1 x *]] [AutoName76 Gradient[300 x 1 x *]] }
0000008BEA884AB0: {[AutoName57 Gradient[300 x 1 x *]] [AutoName77 Gradient[300 x 1 x *]] }
0000008BEA884B50: {[AutoName108 Gradient[300 x 1 x *]] [AutoName66 Gradient[300 x 1 x *]] }
0000008BEA884BF0: {[bc2 Gradient[300 x 1]] }
0000008BEA884C90: {[AutoName106 Gradient[300 x 1 x *]] }
0000008BEA884FB0: {[AutoName101 Gradient[300 x 1 x *]] [AutoName23 Gradient[300 x 1 x *]] [AutoName45 Gradient[300 x 1 x *]] }
0000008BEA885050: {[AutoName80 Gradient[300 x 1 x *]] [WHC0 Gradient[300 x 300]] }
0000008BEA885370: {[AutoName71 Gradient[300 x 1 x *]] [AutoName86 Gradient[300 x 1 x *]] [WCO0 Gradient[300 x 1]] }
0000008BEA8854B0: {[WHI3 Gradient[300 x 300]] }
0000008BEA8855F0: {[WHO3 Gradient[300 x 300]] }
0000008BEA885730: {[AutoName75 Gradient[300 x 1 x *]] [AutoName78 Gradient[300 x 1 x *]] }
0000008BEA885910: {[WHF3 Gradient[300 x 300]] }
0000008BEA8859B0: {[AutoName42 Gradient[300 x 1 x *]] [AutoName82 Gradient[300 x 1 x *]] }
0000008BEA885AF0: {[AutoName100 Gradient[300 x 1 x *]] [AutoName54 Gradient[300 x 1 x *]] [bi2 Gradient[300 x 1]] }
0000008BEA885B90: {[WHC2 Gradient[300 x 300]] }
0000008BEA8D28B0: {[WHF0 Value[300 x 300]] }
0000008BEA8D2B30: {[WHC0 Value[300 x 300]] }
0000008BEA8D2C70: {[WHO0 Value[300 x 300]] }
0000008BEA8D2E50: {[AutoName2 Value[300 x 1 x *]] [WXC0 Gradient[300 x 150]] }
0000008BEA8D3030: {[AutoName5 Value[300 x 1 x *]] }
0000008BEA8D33F0: {[AutoName6 Value[300 x 1 x *]] }
0000008BEA8D3710: {[WHI0 Value[300 x 300]] }
0000008BEA8D37B0: {[WCI0 Value[300 x 1]] }
0000008BEA8D3A30: {[WCO0 Value[300 x 1]] }
0000008BEA8D3AD0: {[AutoName0 Value[300 x 1 x *]] }
0000008BEA8D3C10: {[WCF0 Value[300 x 1]] }
0000008BEA8D4110: {[AutoName1 Value[300 x 1 x *]] }
0000008BEA8D41B0: {[AutoName3 Value[300 x 1 x *]] }
0000008BEA8D4570: {[AutoName4 Value[300 x 1 x *]] }
0000008BF92CA4F0: {[WXF0 Value[300 x 150]] }
0000008BF92CA6D0: {[bi0 Value[300 x 1]] }
0000008BF92CA8B0: {[bf0 Value[300 x 1]] }
0000008BF92CA9F0: {[E0 Value[50 x 944]] }
0000008BF92CABD0: {[bo0 Value[300 x 1]] }
0000008BF92CAE50: {[bc0 Value[300 x 1]] }
0000008BF92CAEF0: {[WXO0 Value[300 x 150]] }
0000008BF92CB030: {[WXC0 Value[300 x 150]] }
0000008BF92CB2B0: {[features Value[2832 x *]] }
0000008BF92CB350: {[WXI0 Value[300 x 150]] }
0000008BF92FB3A0: {[AutoName82 Value[300 x 1 x *]] [WCI2 Gradient[300 x 1]] }
0000008BF92FB440: {[WHC3 Value[300 x 300]] }
0000008BF92FB580: {[WHO3 Value[300 x 300]] }
0000008BF92FB620: {[AutoName76 Value[300 x 1 x *]] [WHI2 Gradient[300 x 300]] }
0000008BF92FB940: {[WCI3 Value[300 x 1]] }
0000008BF92FB9E0: {[AutoName53 Gradient[300 x 1 x *]] [AutoName81 Value[300 x 1 x *]] }
0000008BF92FBC60: {[WHI3 Value[300 x 300]] }
0000008BF92FBD00: {[AutoName12 Gradient[300 x 1 x *]] [AutoName58 Gradient[300 x 1 x *]] [AutoName80 Value[300 x 1 x *]] }
0000008BF92FC3E0: {[WCF3 Value[300 x 1]] }
0000008BF92FC520: {[WHF3 Value[300 x 300]] }
0000008BF92FC5C0: {[AutoName68 Gradient[300 x 1 x *]] [AutoName79 Value[300 x 1 x *]] }
0000008BF92FC660: {[AutoName65 Gradient[300 x 1 x *]] [AutoName77 Value[300 x 1 x *]] [AutoName8 Gradient[300 x 1 x *]] }
0000008BF92FC7A0: {[AutoName78 Value[300 x 1 x *]] [WXC3 Gradient[300 x 300]] }
0000008BF92FCD40: {[WCO3 Value[300 x 1]] }
0000008BF92FF3C0: {[AutoName10 Value[300 x 1 x *]] [WXI0 Gradient[300 x 150]] }
0000008BF92FF460: {[AutoName26 Value[300 x 1 x *]] }
0000008BF92FF5A0: {[CrossEntropyWithSoftmax Value[1]] }
0000008BF92FF640: {[AutoName15 Value[300 x 1 x *]] }
0000008BF92FF6E0: {[AutoName17 Value[300 x 1 x *]] }
0000008BF92FF820: {[AutoName16 Value[300 x *]] [AutoName9 Gradient[300 x *]] [bf0 Gradient[300 x 1]] }
0000008BF92FF8C0: {[AutoName30 Value[300 x 1 x *]] }
0000008BF92FF960: {[AutoName27 Value[300 x 1 x *]] }
0000008BF92FFAA0: {[AutoName8 Value[300 x 1 x *]] }
0000008BF92FFB40: {[AutoName18 Value[300 x 1 x *]] }
0000008BF92FFD20: {[labels Value[127 x *]] }
0000008BF92FFFA0: {[LookupTable Value[150 x *]] }
0000008BF9300040: {[AutoName32 Value[300 x 1 x *]] [WXO0 Gradient[300 x 150]] }
0000008BF9300180: {[W4 Value[127 x 300]] }
0000008BF9300540: {[AutoName31 Value[300 x *]] [E0 Gradient[50 x 944]] }
0000008BF93005E0: {[AutoName22 Value[300 x *]] [AutoName31 Gradient[300 x *]] }
0000008BF9300900: {[outputs Value[127 x 1 x *]] }
0000008BF93009A0: {[AutoName23 Value[300 x 1 x *]] [WXF0 Gradient[300 x 150]] }
0000008BF9300A40: {[AutoName33 Value[300 x 1 x *]] }
0000008BF9300AE0: {[AutoName20 Value[300 x 1 x *]] }
0000008BF9300B80: {[AutoName25 Value[300 x 1 x *]] }
0000008BF9300C20: {[AutoName11 Value[300 x 1 x *]] }
0000008BF9300CC0: {[AutoName7 Value[300 x 1 x *]] }
0000008BF9300D60: {[AutoName12 Value[300 x 1 x *]] }
0000008BF9300E00: {[AutoName24 Value[300 x 1 x *]] }
0000008BF9300EA0: {[AutoName13 Value[300 x 1 x *]] }
0000008BF9300F40: {[AutoName22 Gradient[300 x *]] [AutoName9 Value[300 x *]] [bo0 Gradient[300 x 1]] }
0000008BF9300FE0: {[AutoName14 Value[300 x 1 x *]] }
0000008BF9301080: {[AutoName21 Value[300 x 1 x *]] }
0000008BF9454740: {[AutoName26 Gradient[300 x 1 x *]] [AutoName46 Value[300 x 1 x *]] }
0000008BF94547E0: {[AutoName35 Value[300 x 1 x *]] }
0000008BF9454880: {[AutoName34 Value[300 x 1 x *]] }
0000008BF9454920: {[AutoName35 Gradient[300 x 1 x *]] [AutoName69 Value[300 x 1 x *]] }
0000008BF94549C0: {[AutoName71 Value[300 x 1 x *]] }
0000008BF9454A60: {[AutoName11 Gradient[300 x 1 x *]] [AutoName63 Value[300 x 1 x *]] }
0000008BF9454B00: {[AutoName72 Value[300 x 1 x *]] }
0000008BF9454BA0: {[AutoName73 Value[300 x 1 x *]] }
0000008BF9454C40: {[AutoName75 Value[300 x 1 x *]] }
0000008BF9454CE0: {[AutoName99 Value[300 x 1 x *]] [WXF3 Gradient[300 x 300]] }
0000008BF9454D80: {[AutoName19 Value[300 x 1 x *]] }
0000008BF9454E20: {[AutoName29 Gradient[300 x 1 x *]] [AutoName68 Value[300 x 1 x *]] }
0000008BF9454EC0: {[AutoName85 Value[300 x 1 x *]] [AutoName98 Gradient[300 x 1 x *]] [bo3 Gradient[300 x 1]] }
0000008BF9454F60: {[AutoName85 Gradient[300 x 1 x *]] [AutoName92 Value[300 x 1 x *]] [bf3 Gradient[300 x 1]] }
0000008BF9455000: {[AutoName106 Value[300 x 1 x *]] [AutoName67 Gradient[300 x 1 x *]] }
0000008BF94550A0: {[AutoName109 Value[300 x 1 x *]] }
0000008BF9455140: {[AutoName32 Gradient[300 x 1 x *]] [AutoName51 Gradient[300 x 1 x *]] [AutoName97 Value[300 x 1 x *]] }
0000008BF94551E0: {[AutoName100 Value[300 x 1 x *]] [AutoName55 Gradient[300 x 1 x *]] }
0000008BF9455280: {[AutoName55 Value[300 x 1 x *]] }
0000008BF9455320: {[AutoName21 Gradient[300 x 1 x *]] [AutoName50 Value[300 x 1 x *]] }
0000008BF94553C0: {[AutoName10 Gradient[300 x 1 x *]] [AutoName65 Value[300 x 1 x *]] }
0000008BF9455460: {[AutoName86 Value[300 x 1 x *]] [WXI3 Gradient[300 x 300]] }
0000008BF9455500: {[AutoName41 Gradient[300 x 1 x *]] [AutoName96 Value[300 x 1 x *]] [WHO0 Gradient[300 x 300]] }
0000008BF94555A0: {[AutoName29 Value[300 x 1 x *]] }
0000008BF9455640: {[AutoName107 Gradient[300 x 1 x *]] [AutoName74 Gradient[300 x 1 x *]] [AutoName98 Value[300 x 1 x *]] }
0000008BF94556E0: {[AutoName25 Gradient[300 x 1 x *]] [AutoName49 Value[300 x 1 x *]] }
0000008BF9455780: {[AutoName3 Gradient[300 x 1 x *]] [AutoName58 Value[300 x 1 x *]] }
0000008BF9455820: {[AutoName74 Value[300 x 1 x *]] }
0000008BF94558C0: {[AutoName108 Value[300 x 1 x *]] [WXO3 Gradient[300 x 300]] }
0000008BF9455960: {[AutoName107 Value[300 x 1 x *]] [AutoName73 Gradient[300 x 1 x *]] }
0000008BF9455A00: {[AutoName47 Gradient[300 x 1 x *]] [AutoName54 Value[300 x 1 x *]] [bf2 Gradient[300 x 1]] }
0000008BF9455AA0: {[AutoName61 Value[300 x 1 x *]] [WXF2 Gradient[300 x 300]] }
0000008BF9455B40: {[AutoName70 Value[300 x 1 x *]] [WXO2 Gradient[300 x 300]] }
0000008BF9455BE0: {[AutoName57 Value[300 x 1 x *]] }
0000008BF9455C80: {[AutoName53 Value[300 x 1 x *]] }
0000008BF9455D20: {[AutoName64 Value[300 x 1 x *]] }
0000008BF9455DC0: {[AutoName36 Value[300 x 1 x *]] }
0000008BF9455E60: {[AutoName28 Value[300 x 1 x *]] }
0000008BF9455F00: {[AutoName36 Gradient[300 x 1 x *]] [AutoName60 Value[300 x 1 x *]] [AutoName69 Gradient[300 x 1 x *]] }
0000008BF9455FA0: {[AutoName48 Value[300 x 1 x *]] [WXI2 Gradient[300 x 300]] }
0000008BF9456040: {[AutoName13 Gradient[300 x 1 x *]] [AutoName59 Value[300 x 1 x *]] }
0000008BF94560E0: {[AutoName37 Value[300 x 1 x *]] }
0000008BF9456180: {[AutoName47 Value[300 x 1 x *]] [AutoName60 Gradient[300 x 1 x *]] [bo2 Gradient[300 x 1]] }
0000008BF9456220: {[AutoName17 Gradient[300 x 1 x *]] [AutoName62 Value[300 x 1 x *]] }
0000008BF94562C0: {[AutoName1 Gradient[300 x 1 x *]] [AutoName51 Value[300 x 1 x *]] }
0000008BF9456360: {[AutoName2 Gradient[300 x 1 x *]] [AutoName52 Value[300 x 1 x *]] [LookupTable Gradient[150 x *]] }
0000008BF9456400: {[AutoName56 Value[300 x 1 x *]] }
0000008BF94564A0: {[AutoName66 Value[300 x 1 x *]] }
0000008BF9456540: {[AutoName45 Value[300 x 1 x *]] [AutoName5 Gradient[300 x 1 x *]] }
0000008BF94565E0: {[AutoName67 Value[300 x 1 x *]] }
0000008BF96ABD90: {[WXO3 Value[300 x 300]] }
0000008BF96ABE30: {[WXI3 Value[300 x 300]] }
0000008BF96ABF70: {[WXC3 Value[300 x 300]] }
0000008BF96AC0B0: {[WXF3 Value[300 x 300]] }
0000008BF96AC1F0: {[AutoName44 Value[300 x 1 x *]] [WCI0 Gradient[300 x 1]] }
0000008BF96AC470: {[bo3 Value[300 x 1]] }
0000008BF96AC510: {[bc3 Value[300 x 1]] }
0000008BF96AC650: {[bi3 Value[300 x 1]] }
0000008BF96ACB50: {[bf3 Value[300 x 1]] }
0000008BF96AD370: {[AutoName15 Gradient[300 x 1 x *]] [AutoName43 Value[300 x 1 x *]] }
0000008BFC43DF70: {[WHO2 Value[300 x 300]] }
0000008BFC43E010: {[WCO2 Value[300 x 1]] }
0000008BFC43E150: {[WXF2 Value[300 x 300]] }
0000008BFC43E290: {[AutoName38 Value[300 x 1 x *]] [WHI0 Gradient[300 x 300]] }
0000008BFC43E330: {[AutoName27 Gradient[300 x 1 x *]] [AutoName39 Value[300 x 1 x *]] }
0000008BFC43E470: {[AutoName20 Gradient[300 x 1 x *]] [AutoName42 Value[300 x 1 x *]] }
0000008BFC43E5B0: {[WHF2 Value[300 x 300]] }
0000008BFC43E6F0: {[AutoName40 Value[300 x 1 x *]] [WXC2 Gradient[300 x 300]] }
0000008BFC43EC90: {[WHI2 Value[300 x 300]] }
0000008BFC43EDD0: {[AutoName30 Gradient[300 x 1 x *]] [AutoName41 Value[300 x 1 x *]] }
0000008BFC43F190: {[WXI2 Value[300 x 300]] }
0000008BFC43F2D0: {[WXO2 Value[300 x 300]] }
0000008BFC43F5F0: {[WXC2 Value[300 x 300]] }
0000008BFC43F730: {[bc2 Value[300 x 1]] }
0000008BFC43F870: {[bf2 Value[300 x 1]] }
0000008BFC43F910: {[bi2 Value[300 x 1]] }
0000008BFC43F9B0: {[bo2 Value[300 x 1]] }
0000008BFC43FAF0: {[WCF2 Value[300 x 1]] }
0000008BFC43FC30: {[WCI2 Value[300 x 1]] }
0000008BFC43FCD0: {[WHC2 Value[300 x 300]] }

08/04/2016 08:09:04: No PreCompute nodes found, skipping PreCompute step.

08/04/2016 08:09:04: Starting Epoch 1: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:04: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:05: Finished Epoch[ 1 of 100]: [Training] CrossEntropyWithSoftmax = 4.84376733 * 81; totalSamplesSeen = 81; learningRatePerSample = 0.1; epochTime=0.152038s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:05: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 4.80951719 * 81; perplexity = 122.67237568
08/04/2016 08:09:05: Finished Epoch[ 1 of 100]: [Validate] CrossEntropyWithSoftmax = 4.80951719 * 81
08/04/2016 08:09:05: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.1'

08/04/2016 08:09:05: Starting Epoch 2: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:05: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:05: Finished Epoch[ 2 of 100]: [Training] CrossEntropyWithSoftmax = 4.80951719 * 81; totalSamplesSeen = 162; learningRatePerSample = 0.1; epochTime=0.115159s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:05: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 4.74450118 * 81; perplexity = 114.95045214
08/04/2016 08:09:05: Finished Epoch[ 2 of 100]: [Validate] CrossEntropyWithSoftmax = 4.74450118 * 81
08/04/2016 08:09:05: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.2'

08/04/2016 08:09:05: Starting Epoch 3: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:05: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:05: Finished Epoch[ 3 of 100]: [Training] CrossEntropyWithSoftmax = 4.74450118 * 81; totalSamplesSeen = 243; learningRatePerSample = 0.1; epochTime=0.110268s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:06: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 4.64950109 * 81; perplexity = 104.53282053
08/04/2016 08:09:06: Finished Epoch[ 3 of 100]: [Validate] CrossEntropyWithSoftmax = 4.64950109 * 81
08/04/2016 08:09:06: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.3'

08/04/2016 08:09:06: Starting Epoch 4: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:06: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:06: Finished Epoch[ 4 of 100]: [Training] CrossEntropyWithSoftmax = 4.64950109 * 81; totalSamplesSeen = 324; learningRatePerSample = 0.1; epochTime=0.110136s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:06: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 4.51978782 * 81; perplexity = 91.81611471
08/04/2016 08:09:06: Finished Epoch[ 4 of 100]: [Validate] CrossEntropyWithSoftmax = 4.51978782 * 81
08/04/2016 08:09:06: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.4'

08/04/2016 08:09:06: Starting Epoch 5: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:06: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:06: Finished Epoch[ 5 of 100]: [Training] CrossEntropyWithSoftmax = 4.51978782 * 81; totalSamplesSeen = 405; learningRatePerSample = 0.1; epochTime=0.115104s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:06: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 4.34198375 * 81; perplexity = 76.85985880
08/04/2016 08:09:06: Finished Epoch[ 5 of 100]: [Validate] CrossEntropyWithSoftmax = 4.34198375 * 81
08/04/2016 08:09:07: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.5'

08/04/2016 08:09:07: Starting Epoch 6: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:07: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:07: Finished Epoch[ 6 of 100]: [Training] CrossEntropyWithSoftmax = 4.34198375 * 81; totalSamplesSeen = 486; learningRatePerSample = 0.1; epochTime=0.117369s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:07: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 4.09081994 * 81; perplexity = 59.78889466
08/04/2016 08:09:07: Finished Epoch[ 6 of 100]: [Validate] CrossEntropyWithSoftmax = 4.09081994 * 81
08/04/2016 08:09:07: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.6'

08/04/2016 08:09:07: Starting Epoch 7: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:07: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:07: Finished Epoch[ 7 of 100]: [Training] CrossEntropyWithSoftmax = 4.09081994 * 81; totalSamplesSeen = 567; learningRatePerSample = 0.1; epochTime=0.108881s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:07: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 3.72673016 * 81; perplexity = 41.54304665
08/04/2016 08:09:07: Finished Epoch[ 7 of 100]: [Validate] CrossEntropyWithSoftmax = 3.72673016 * 81
08/04/2016 08:09:07: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.7'

08/04/2016 08:09:08: Starting Epoch 8: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:08: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:08: Finished Epoch[ 8 of 100]: [Training] CrossEntropyWithSoftmax = 3.72673016 * 81; totalSamplesSeen = 648; learningRatePerSample = 0.1; epochTime=0.11297s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:08: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 3.20413999 * 81; perplexity = 24.63430521
08/04/2016 08:09:08: Finished Epoch[ 8 of 100]: [Validate] CrossEntropyWithSoftmax = 3.20413999 * 81
08/04/2016 08:09:08: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.8'

08/04/2016 08:09:08: Starting Epoch 9: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:08: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:08: Finished Epoch[ 9 of 100]: [Training] CrossEntropyWithSoftmax = 3.20413999 * 81; totalSamplesSeen = 729; learningRatePerSample = 0.1; epochTime=0.110722s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:08: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.57160309 * 81; perplexity = 13.08678696
08/04/2016 08:09:08: Finished Epoch[ 9 of 100]: [Validate] CrossEntropyWithSoftmax = 2.57160309 * 81
08/04/2016 08:09:08: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.9'

08/04/2016 08:09:09: Starting Epoch 10: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:09: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:09: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.57160309 * 81; totalSamplesSeen = 810; learningRatePerSample = 0.1; epochTime=0.108716s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:09: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.37671916 * 81; perplexity = 10.76951176
08/04/2016 08:09:09: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.37671916 * 81
08/04/2016 08:09:09: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.10'

08/04/2016 08:09:09: Starting Epoch 11: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:09: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:09: Finished Epoch[11 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671916 * 81; totalSamplesSeen = 891; learningRatePerSample = 0.1; epochTime=0.109428s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:09: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.76593470 * 81; perplexity = 15.89388902
08/04/2016 08:09:09: Finished Epoch[11 of 100]: [Validate] CrossEntropyWithSoftmax = 2.76593470 * 81
08/04/2016 08:09:09: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.10.
08/04/2016 08:09:09: learnRatePerSample reduced to 0.050000001
08/04/2016 08:09:09: SGD: revoke back to and update checkpoint file for epoch 10

08/04/2016 08:09:10: Starting Epoch 11: learning rate per sample = 0.050000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:10: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:10: Finished Epoch[11 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671916 * 81; totalSamplesSeen = 891; learningRatePerSample = 0.050000001; epochTime=0.113299s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:10: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.83866355 * 81; perplexity = 17.09290643
08/04/2016 08:09:10: Finished Epoch[11 of 100]: [Validate] CrossEntropyWithSoftmax = 2.83866355 * 81
08/04/2016 08:09:10: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.10.
08/04/2016 08:09:10: learnRatePerSample reduced to 0.025
08/04/2016 08:09:10: SGD: revoke back to and update checkpoint file for epoch 10

08/04/2016 08:09:10: Starting Epoch 11: learning rate per sample = 0.025000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:10: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:10: Finished Epoch[11 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671916 * 81; totalSamplesSeen = 891; learningRatePerSample = 0.025; epochTime=0.111149s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:10: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.87639439 * 81; perplexity = 17.75015751
08/04/2016 08:09:10: Finished Epoch[11 of 100]: [Validate] CrossEntropyWithSoftmax = 2.87639439 * 81
08/04/2016 08:09:10: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.10.
08/04/2016 08:09:10: learnRatePerSample reduced to 0.0125
08/04/2016 08:09:10: SGD: revoke back to and update checkpoint file for epoch 10

08/04/2016 08:09:11: Starting Epoch 11: learning rate per sample = 0.012500  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:11: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:11: Finished Epoch[11 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671916 * 81; totalSamplesSeen = 891; learningRatePerSample = 0.0125; epochTime=0.110801s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:11: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.89559805 * 81; perplexity = 18.09431945
08/04/2016 08:09:11: Finished Epoch[11 of 100]: [Validate] CrossEntropyWithSoftmax = 2.89559805 * 81
08/04/2016 08:09:11: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.10.
08/04/2016 08:09:11: learnRatePerSample reduced to 0.0062500001
08/04/2016 08:09:11: SGD: revoke back to and update checkpoint file for epoch 10

08/04/2016 08:09:11: Starting Epoch 11: learning rate per sample = 0.006250  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:11: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:11: Finished Epoch[11 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671916 * 81; totalSamplesSeen = 891; learningRatePerSample = 0.0062500001; epochTime=0.115206s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:11: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.90528418 * 81; perplexity = 18.27043492
08/04/2016 08:09:11: Finished Epoch[11 of 100]: [Validate] CrossEntropyWithSoftmax = 2.90528418 * 81
08/04/2016 08:09:11: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.10.
08/04/2016 08:09:12: learnRatePerSample reduced to 0.003125
08/04/2016 08:09:12: SGD: revoke back to and update checkpoint file for epoch 10

08/04/2016 08:09:12: Starting Epoch 11: learning rate per sample = 0.003125  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:12: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:12: Finished Epoch[11 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671916 * 81; totalSamplesSeen = 891; learningRatePerSample = 0.003125; epochTime=0.140179s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:12: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91014815 * 81; perplexity = 18.35951832
08/04/2016 08:09:12: Finished Epoch[11 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91014815 * 81
08/04/2016 08:09:12: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.10.
08/04/2016 08:09:12: learnRatePerSample reduced to 0.0015625
08/04/2016 08:09:12: SGD: revoke back to and update checkpoint file for epoch 10

08/04/2016 08:09:12: Starting Epoch 11: learning rate per sample = 0.001563  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:12: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:12: Finished Epoch[11 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671916 * 81; totalSamplesSeen = 891; learningRatePerSample = 0.0015625; epochTime=0.110555s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:12: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91258541 * 81; perplexity = 18.40431985
08/04/2016 08:09:12: Finished Epoch[11 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91258541 * 81
08/04/2016 08:09:12: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.10.
08/04/2016 08:09:13: learnRatePerSample reduced to 0.00078125001
08/04/2016 08:09:13: SGD: revoke back to and update checkpoint file for epoch 10

08/04/2016 08:09:13: Starting Epoch 11: learning rate per sample = 0.000781  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:13: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:13: Finished Epoch[11 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671916 * 81; totalSamplesSeen = 891; learningRatePerSample = 0.00078125001; epochTime=0.108002s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:13: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91380536 * 81; perplexity = 18.42678589
08/04/2016 08:09:13: Finished Epoch[11 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91380536 * 81
08/04/2016 08:09:13: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.10.
08/04/2016 08:09:13: learnRatePerSample reduced to 0.00039062501
08/04/2016 08:09:13: SGD: revoke back to and update checkpoint file for epoch 10

08/04/2016 08:09:13: Starting Epoch 11: learning rate per sample = 0.000391  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:13: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:13: Finished Epoch[11 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671916 * 81; totalSamplesSeen = 891; learningRatePerSample = 0.00039062501; epochTime=0.113143s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:13: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91441552 * 81; perplexity = 18.43803267
08/04/2016 08:09:13: Finished Epoch[11 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91441552 * 81
08/04/2016 08:09:13: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.10.
08/04/2016 08:09:14: learnRatePerSample reduced to 0.0001953125
08/04/2016 08:09:14: SGD: revoke back to and update checkpoint file for epoch 10

08/04/2016 08:09:14: Starting Epoch 11: learning rate per sample = 0.000195  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:14: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:14: Finished Epoch[11 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671916 * 81; totalSamplesSeen = 891; learningRatePerSample = 0.0001953125; epochTime=0.107662s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:14: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91472089 * 81; perplexity = 18.44366385
08/04/2016 08:09:14: Finished Epoch[11 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91472089 * 81
08/04/2016 08:09:14: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.10.
08/04/2016 08:09:14: learnRatePerSample reduced to 9.7656251e-005
08/04/2016 08:09:14: SGD: revoke back to and update checkpoint file for epoch 10

08/04/2016 08:09:14: Starting Epoch 11: learning rate per sample = 0.000098  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:14: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:14: Finished Epoch[11 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671916 * 81; totalSamplesSeen = 891; learningRatePerSample = 9.7656251e-005; epochTime=0.108564s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:14: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91487366 * 81; perplexity = 18.44648181
08/04/2016 08:09:14: Finished Epoch[11 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91487366 * 81
08/04/2016 08:09:14: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.10.
08/04/2016 08:09:15: learnRatePerSample reduced to 4.8828126e-005
08/04/2016 08:09:15: SGD: revoke back to and update checkpoint file for epoch 10

08/04/2016 08:09:15: Starting Epoch 11: learning rate per sample = 0.000049  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:15: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:15: Finished Epoch[11 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671916 * 81; totalSamplesSeen = 891; learningRatePerSample = 4.8828126e-005; epochTime=0.11557s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:15: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91494977 * 81; perplexity = 18.44788575
08/04/2016 08:09:15: Finished Epoch[11 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91494977 * 81
08/04/2016 08:09:15: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.10.
08/04/2016 08:09:15: learnRatePerSample reduced to 2.4414063e-005
08/04/2016 08:09:15: SGD: revoke back to and update checkpoint file for epoch 10

08/04/2016 08:09:15: Starting Epoch 11: learning rate per sample = 0.000024  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:15: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:15: Finished Epoch[11 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671916 * 81; totalSamplesSeen = 891; learningRatePerSample = 2.4414063e-005; epochTime=0.107648s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:15: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91498801 * 81; perplexity = 18.44859123
08/04/2016 08:09:15: Finished Epoch[11 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91498801 * 81
08/04/2016 08:09:15: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.10.
08/04/2016 08:09:16: learnRatePerSample reduced to 1.2207031e-005
08/04/2016 08:09:16: SGD: revoke back to and update checkpoint file for epoch 10

08/04/2016 08:09:16: Starting Epoch 11: learning rate per sample = 0.000012  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:16: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:16: Finished Epoch[11 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671916 * 81; totalSamplesSeen = 891; learningRatePerSample = 1.2207031e-005; epochTime=0.109455s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:16: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91500704 * 81; perplexity = 18.44894224
08/04/2016 08:09:16: Finished Epoch[11 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91500704 * 81
08/04/2016 08:09:16: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.10.
08/04/2016 08:09:16: learnRatePerSample reduced to 6.1035157e-006
08/04/2016 08:09:16: SGD: revoke back to and update checkpoint file for epoch 10

08/04/2016 08:09:16: Starting Epoch 11: learning rate per sample = 0.000006  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:16: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:16: Finished Epoch[11 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671916 * 81; totalSamplesSeen = 891; learningRatePerSample = 6.1035157e-006; epochTime=0.108787s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:16: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91501665 * 81; perplexity = 18.44911949
08/04/2016 08:09:16: Finished Epoch[11 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91501665 * 81
08/04/2016 08:09:16: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.10.
08/04/2016 08:09:17: learnRatePerSample reduced to 3.0517579e-006
08/04/2016 08:09:17: SGD: revoke back to and update checkpoint file for epoch 10

08/04/2016 08:09:17: Starting Epoch 11: learning rate per sample = 0.000003  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:17: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:17: Finished Epoch[11 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671916 * 81; totalSamplesSeen = 891; learningRatePerSample = 3.0517579e-006; epochTime=0.105865s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:17: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91502135 * 81; perplexity = 18.44920638
08/04/2016 08:09:17: Finished Epoch[11 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91502135 * 81
08/04/2016 08:09:17: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.10.
08/04/2016 08:09:17: learnRatePerSample reduced to 1.5258789e-006
08/04/2016 08:09:17: SGD: revoke back to and update checkpoint file for epoch 10

08/04/2016 08:09:17: Starting Epoch 11: learning rate per sample = 0.000002  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:17: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:17: Finished Epoch[11 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671916 * 81; totalSamplesSeen = 891; learningRatePerSample = 1.5258789e-006; epochTime=0.114907s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:17: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91502362 * 81; perplexity = 18.44924808
08/04/2016 08:09:17: Finished Epoch[11 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91502362 * 81
08/04/2016 08:09:17: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.10.
08/04/2016 08:09:18: learnRatePerSample reduced to 7.6293946e-007
08/04/2016 08:09:18: SGD: revoke back to and update checkpoint file for epoch 10

08/04/2016 08:09:18: Starting Epoch 11: learning rate per sample = 0.000001  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:18: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:18: Finished Epoch[11 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671916 * 81; totalSamplesSeen = 891; learningRatePerSample = 7.6293946e-007; epochTime=0.165904s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:18: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91502475 * 81; perplexity = 18.44926894
08/04/2016 08:09:18: Finished Epoch[11 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91502475 * 81
08/04/2016 08:09:18: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.10.
08/04/2016 08:09:18: learnRatePerSample reduced to 3.8146973e-007
08/04/2016 08:09:18: SGD: revoke back to and update checkpoint file for epoch 10

08/04/2016 08:09:18: Starting Epoch 11: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:18: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:18: Finished Epoch[11 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671916 * 81; totalSamplesSeen = 891; learningRatePerSample = 3.8146973e-007; epochTime=0.11526s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:19: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91502550 * 81; perplexity = 18.44928284
08/04/2016 08:09:19: Finished Epoch[11 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91502550 * 81
08/04/2016 08:09:19: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.10.
08/04/2016 08:09:19: learnRatePerSample reduced to 1.9073487e-007
08/04/2016 08:09:19: SGD: revoke back to and update checkpoint file for epoch 10

08/04/2016 08:09:19: Starting Epoch 11: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:19: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:19: Finished Epoch[11 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671916 * 81; totalSamplesSeen = 891; learningRatePerSample = 1.9073487e-007; epochTime=0.11167s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:19: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91502550 * 81; perplexity = 18.44928284
08/04/2016 08:09:19: Finished Epoch[11 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91502550 * 81
08/04/2016 08:09:19: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.10.
08/04/2016 08:09:19: learnRatePerSample reduced to 9.5367433e-008
08/04/2016 08:09:19: SGD: revoke back to and update checkpoint file for epoch 10

08/04/2016 08:09:19: Starting Epoch 11: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:19: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:19: Finished Epoch[11 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671916 * 81; totalSamplesSeen = 891; learningRatePerSample = 9.5367433e-008; epochTime=0.118323s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:20: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91502588 * 81; perplexity = 18.44928979
08/04/2016 08:09:20: Finished Epoch[11 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91502588 * 81
08/04/2016 08:09:20: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.10.
08/04/2016 08:09:20: learnRatePerSample reduced to 4.7683717e-008
08/04/2016 08:09:20: SGD: revoke back to and update checkpoint file for epoch 10

08/04/2016 08:09:20: Starting Epoch 11: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:20: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:20: Finished Epoch[11 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671916 * 81; totalSamplesSeen = 891; learningRatePerSample = 4.7683717e-008; epochTime=0.105285s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:20: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91502588 * 81; perplexity = 18.44928979
08/04/2016 08:09:20: Finished Epoch[11 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91502588 * 81
08/04/2016 08:09:20: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.10.
08/04/2016 08:09:20: learnRatePerSample reduced to 2.3841858e-008
08/04/2016 08:09:20: SGD: revoke back to and update checkpoint file for epoch 10

08/04/2016 08:09:20: Starting Epoch 11: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:20: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:20: Finished Epoch[11 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671916 * 81; totalSamplesSeen = 891; learningRatePerSample = 2.3841858e-008; epochTime=0.113275s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:21: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91502588 * 81; perplexity = 18.44928979
08/04/2016 08:09:21: Finished Epoch[11 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91502588 * 81
08/04/2016 08:09:21: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.10.
08/04/2016 08:09:21: learnRatePerSample reduced to 1.1920929e-008
08/04/2016 08:09:21: SGD: revoke back to and update checkpoint file for epoch 10

08/04/2016 08:09:21: Starting Epoch 11: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:21: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:21: Finished Epoch[11 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671916 * 81; totalSamplesSeen = 891; learningRatePerSample = 1.1920929e-008; epochTime=0.115902s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:21: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91502588 * 81; perplexity = 18.44928979
08/04/2016 08:09:21: Finished Epoch[11 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91502588 * 81
08/04/2016 08:09:21: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.10.
08/04/2016 08:09:21: learnRatePerSample reduced to 5.9604646e-009
08/04/2016 08:09:21: SGD: revoke back to and update checkpoint file for epoch 10

08/04/2016 08:09:21: Starting Epoch 11: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:21: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:22: Finished Epoch[11 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671916 * 81; totalSamplesSeen = 891; learningRatePerSample = 5.9604646e-009; epochTime=0.107843s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:22: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91502588 * 81; perplexity = 18.44928979
08/04/2016 08:09:22: Finished Epoch[11 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91502588 * 81
08/04/2016 08:09:22: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.10.
08/04/2016 08:09:22: learnRatePerSample reduced to 2.9802323e-009
08/04/2016 08:09:22: SGD: revoke back to and update checkpoint file for epoch 10

08/04/2016 08:09:22: Starting Epoch 11: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:22: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:22: Finished Epoch[11 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671916 * 81; totalSamplesSeen = 891; learningRatePerSample = 2.9802323e-009; epochTime=0.111616s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:22: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91502606 * 81; perplexity = 18.44929326
08/04/2016 08:09:22: Finished Epoch[11 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91502606 * 81
08/04/2016 08:09:22: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.10.
08/04/2016 08:09:22: learnRatePerSample reduced to 1.4901161e-009
08/04/2016 08:09:22: SGD: revoke back to and update checkpoint file for epoch 10

08/04/2016 08:09:23: Starting Epoch 11: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

08/04/2016 08:09:23: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:23: Finished Epoch[11 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671916 * 81; totalSamplesSeen = 891; learningRatePerSample = 1.4901161e-009; epochTime=0.116386s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
08/04/2016 08:09:23: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91502588 * 81; perplexity = 18.44928979
08/04/2016 08:09:23: Finished Epoch[11 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91502588 * 81
08/04/2016 08:09:23: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804080528.656509\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.10.
08/04/2016 08:09:23: learnRatePerSample reduced to 7.4505807e-010
08/04/2016 08:09:23: SGD: revoke back to and update checkpoint file for epoch 10
08/04/2016 08:09:23: Learn Rate Per Sample for Epoch[11] = 7.4505807e-010 is less than minLearningRatePerSample 9.9999997e-010. Training complete.
08/04/2016 08:09:23: CNTKCommandTrainEnd: LSTM

08/04/2016 08:09:23: Action "train" complete.


08/04/2016 08:09:23: ##############################################################################
08/04/2016 08:09:23: #                                                                            #
08/04/2016 08:09:23: # Action "write"                                                             #
08/04/2016 08:09:23: #                                                                            #
08/04/2016 08:09:23: ##############################################################################

BatchLUSequenceReader: Input file is C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.test.apos.pred.pos.head.IOB.simple

Post-processing network...

4 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	PosteriorProb = Softmax()
	labels = InputValue()
	outputs = Times()

Loop[0] --> Loop_AutoName37 -> 31 nodes

	AutoName2	AutoName30	AutoName33
	AutoName1	AutoName21	AutoName24
	AutoName5	AutoName20	AutoName25
	AutoName26	AutoName6	AutoName27
	AutoName0	AutoName8	AutoName11
	AutoName4	AutoName7	AutoName12
	AutoName13	AutoName3	AutoName14
	AutoName15	AutoName17	AutoName18
	AutoName19	AutoName28	AutoName29
	AutoName34	AutoName35	AutoName36
	AutoName37

Loop[1] --> Loop_AutoName75 -> 31 nodes

	AutoName40	AutoName68	AutoName71
	AutoName39	AutoName59	AutoName62
	AutoName43	AutoName58	AutoName63
	AutoName64	AutoName44	AutoName65
	AutoName38	AutoName46	AutoName49
	AutoName42	AutoName45	AutoName50
	AutoName51	AutoName41	AutoName52
	AutoName53	AutoName55	AutoName56
	AutoName57	AutoName66	AutoName67
	AutoName72	AutoName73	AutoName74
	AutoName75

Loop[2] --> Loop_AutoName113 -> 31 nodes

	AutoName78	AutoName106	AutoName109
	AutoName77	AutoName97	AutoName100
	AutoName81	AutoName96	AutoName101
	AutoName102	AutoName82	AutoName103
	AutoName76	AutoName84	AutoName87
	AutoName80	AutoName83	AutoName88
	AutoName89	AutoName79	AutoName90
	AutoName91	AutoName93	AutoName94
	AutoName95	AutoName104	AutoName105
	AutoName110	AutoName111	AutoName112
	AutoName113

Validating network. 168 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [127 x *1]
Validating --> W4 = LearnableParameter() :  -> [127 x 300]
Validating --> WXO3 = LearnableParameter() :  -> [300 x 300]
Validating --> WXO2 = LearnableParameter() :  -> [300 x 300]
Validating --> WXO0 = LearnableParameter() :  -> [300 x 150]
Validating --> E0 = LearnableParameter() :  -> [50 x 944]
Validating --> features = InputValue() :  -> [2832 x *1]
Validating --> LookupTable = LookupTable (E0, features) : [50 x 944], [2832 x *1] -> [150 x *1]
Validating --> AutoName31 = Times (WXO0, LookupTable) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> bo0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName32 = Plus (AutoName31, bo0) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHO0 = LearnableParameter() :  -> [300 x 300]
Validating --> WCO0 = LearnableParameter() :  -> [300 x 1]
Validating --> WXF0 = LearnableParameter() :  -> [300 x 150]
Validating --> AutoName22 = Times (WXF0, LookupTable) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> bf0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName23 = Plus (AutoName22, bf0) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHF0 = LearnableParameter() :  -> [300 x 300]
Validating --> WCF0 = LearnableParameter() :  -> [300 x 1]
Validating --> WXI0 = LearnableParameter() :  -> [300 x 150]
Validating --> AutoName9 = Times (WXI0, LookupTable) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> bi0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName10 = Plus (AutoName9, bi0) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHI0 = LearnableParameter() :  -> [300 x 300]
Validating --> WCI0 = LearnableParameter() :  -> [300 x 1]
Validating --> WXC0 = LearnableParameter() :  -> [300 x 150]
Validating --> AutoName16 = Times (WXC0, LookupTable) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> WHC0 = LearnableParameter() :  -> [300 x 300]
Validating --> bc0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName30 = Times (WHO0, AutoName2) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName33 = Plus (AutoName32, AutoName30) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName21 = Times (WHF0, AutoName1) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName24 = Plus (AutoName23, AutoName21) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName20 = DiagTimes (WCF0, AutoName5) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName25 = Plus (AutoName24, AutoName20) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName26 = Sigmoid (AutoName25) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName27 = ElementTimes (AutoName26, AutoName6) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName8 = Times (WHI0, AutoName0) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName11 = Plus (AutoName10, AutoName8) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName7 = DiagTimes (WCI0, AutoName4) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName12 = Plus (AutoName11, AutoName7) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName13 = Sigmoid (AutoName12) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName14 = Times (WHC0, AutoName3) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName15 = Plus (AutoName14, bc0) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName17 = Plus (AutoName16, AutoName15) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName18 = Tanh (AutoName17) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName19 = ElementTimes (AutoName13, AutoName18) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName28 = Plus (AutoName27, AutoName19) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName29 = DiagTimes (WCO0, AutoName28) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName34 = Plus (AutoName33, AutoName29) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName35 = Sigmoid (AutoName34) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName36 = Tanh (AutoName28) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName37 = ElementTimes (AutoName35, AutoName36) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName69 = Times (WXO2, AutoName37) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> bo2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName70 = Plus (AutoName69, bo2) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHO2 = LearnableParameter() :  -> [300 x 300]
Validating --> WCO2 = LearnableParameter() :  -> [300 x 1]
Validating --> WXF2 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName60 = Times (WXF2, AutoName37) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> bf2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName61 = Plus (AutoName60, bf2) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHF2 = LearnableParameter() :  -> [300 x 300]
Validating --> WCF2 = LearnableParameter() :  -> [300 x 1]
Validating --> WXI2 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName47 = Times (WXI2, AutoName37) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> bi2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName48 = Plus (AutoName47, bi2) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHI2 = LearnableParameter() :  -> [300 x 300]
Validating --> WCI2 = LearnableParameter() :  -> [300 x 1]
Validating --> WXC2 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName54 = Times (WXC2, AutoName37) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> WHC2 = LearnableParameter() :  -> [300 x 300]
Validating --> bc2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName68 = Times (WHO2, AutoName40) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName71 = Plus (AutoName70, AutoName68) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName59 = Times (WHF2, AutoName39) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName62 = Plus (AutoName61, AutoName59) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName58 = DiagTimes (WCF2, AutoName43) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName63 = Plus (AutoName62, AutoName58) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName64 = Sigmoid (AutoName63) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName65 = ElementTimes (AutoName64, AutoName44) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName46 = Times (WHI2, AutoName38) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName49 = Plus (AutoName48, AutoName46) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName45 = DiagTimes (WCI2, AutoName42) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName50 = Plus (AutoName49, AutoName45) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName51 = Sigmoid (AutoName50) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName52 = Times (WHC2, AutoName41) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName53 = Plus (AutoName52, bc2) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName55 = Plus (AutoName54, AutoName53) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName56 = Tanh (AutoName55) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName57 = ElementTimes (AutoName51, AutoName56) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName66 = Plus (AutoName65, AutoName57) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName67 = DiagTimes (WCO2, AutoName66) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName72 = Plus (AutoName71, AutoName67) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName73 = Sigmoid (AutoName72) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName74 = Tanh (AutoName66) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName75 = ElementTimes (AutoName73, AutoName74) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName107 = Times (WXO3, AutoName75) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> bo3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName108 = Plus (AutoName107, bo3) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHO3 = LearnableParameter() :  -> [300 x 300]
Validating --> WCO3 = LearnableParameter() :  -> [300 x 1]
Validating --> WXF3 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName98 = Times (WXF3, AutoName75) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> bf3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName99 = Plus (AutoName98, bf3) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHF3 = LearnableParameter() :  -> [300 x 300]
Validating --> WCF3 = LearnableParameter() :  -> [300 x 1]
Validating --> WXI3 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName85 = Times (WXI3, AutoName75) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> bi3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName86 = Plus (AutoName85, bi3) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHI3 = LearnableParameter() :  -> [300 x 300]
Validating --> WCI3 = LearnableParameter() :  -> [300 x 1]
Validating --> WXC3 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName92 = Times (WXC3, AutoName75) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> WHC3 = LearnableParameter() :  -> [300 x 300]
Validating --> bc3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName106 = Times (WHO3, AutoName78) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName109 = Plus (AutoName108, AutoName106) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName97 = Times (WHF3, AutoName77) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName100 = Plus (AutoName99, AutoName97) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName96 = DiagTimes (WCF3, AutoName81) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName101 = Plus (AutoName100, AutoName96) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName102 = Sigmoid (AutoName101) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName103 = ElementTimes (AutoName102, AutoName82) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName84 = Times (WHI3, AutoName76) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName87 = Plus (AutoName86, AutoName84) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName83 = DiagTimes (WCI3, AutoName80) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName88 = Plus (AutoName87, AutoName83) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName89 = Sigmoid (AutoName88) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName90 = Times (WHC3, AutoName79) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName91 = Plus (AutoName90, bc3) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName93 = Plus (AutoName92, AutoName91) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName94 = Tanh (AutoName93) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName95 = ElementTimes (AutoName89, AutoName94) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName104 = Plus (AutoName103, AutoName95) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName105 = DiagTimes (WCO3, AutoName104) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName110 = Plus (AutoName109, AutoName105) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName111 = Sigmoid (AutoName110) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName112 = Tanh (AutoName104) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName113 = ElementTimes (AutoName111, AutoName112) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName114 = Times (W4, AutoName113) : [127 x 300], [300 x 1 x *1] -> [127 x 1 x *1]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, AutoName114) : [127 x *1], [127 x 1 x *1] -> [1]
Validating --> outputs = Times (W4, AutoName113) : [127 x 300], [300 x 1 x *1] -> [127 x 1 x *1]
Validating --> PosteriorProb = Softmax (outputs) : [127 x 1 x *1] -> [127 x 1 x *1]

Validating network. 119 nodes to process in pass 2.

Validating --> AutoName2 = PastValue (AutoName37) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName30 = Times (WHO0, AutoName2) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName1 = PastValue (AutoName37) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName21 = Times (WHF0, AutoName1) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName5 = PastValue (AutoName28) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName20 = DiagTimes (WCF0, AutoName5) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName6 = PastValue (AutoName28) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName0 = PastValue (AutoName37) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName8 = Times (WHI0, AutoName0) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName4 = PastValue (AutoName28) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName7 = DiagTimes (WCI0, AutoName4) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName3 = PastValue (AutoName37) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName14 = Times (WHC0, AutoName3) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName15 = Plus (AutoName14, bc0) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName40 = PastValue (AutoName75) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName68 = Times (WHO2, AutoName40) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName39 = PastValue (AutoName75) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName59 = Times (WHF2, AutoName39) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName43 = PastValue (AutoName66) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName58 = DiagTimes (WCF2, AutoName43) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName44 = PastValue (AutoName66) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName38 = PastValue (AutoName75) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName46 = Times (WHI2, AutoName38) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName42 = PastValue (AutoName66) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName45 = DiagTimes (WCI2, AutoName42) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName41 = PastValue (AutoName75) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName52 = Times (WHC2, AutoName41) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName53 = Plus (AutoName52, bc2) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName78 = PastValue (AutoName113) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName106 = Times (WHO3, AutoName78) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName77 = PastValue (AutoName113) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName97 = Times (WHF3, AutoName77) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName81 = PastValue (AutoName104) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName96 = DiagTimes (WCF3, AutoName81) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName82 = PastValue (AutoName104) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName76 = PastValue (AutoName113) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName84 = Times (WHI3, AutoName76) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName80 = PastValue (AutoName104) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName83 = DiagTimes (WCI3, AutoName80) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName79 = PastValue (AutoName113) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName90 = Times (WHC3, AutoName79) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName91 = Plus (AutoName90, bc3) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]

Validating network. 42 nodes to process in pass 3.


Validating network, final pass.



48 out of 168 nodes do not share the minibatch layout with the input data.

Post-processing network complete.



Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

0000000000000000: {[AutoName0 Gradient[300 x 1 x *1]] [AutoName1 Gradient[300 x 1 x *1]] [AutoName10 Gradient[300 x 1 x *1]] [AutoName100 Gradient[300 x 1 x *1]] [AutoName101 Gradient[300 x 1 x *1]] [AutoName102 Gradient[300 x 1 x *1]] [AutoName103 Gradient[300 x 1 x *1]] [AutoName104 Gradient[300 x 1 x *1]] [AutoName105 Gradient[300 x 1 x *1]] [AutoName106 Gradient[300 x 1 x *1]] [AutoName107 Gradient[300 x 1 x *1]] [AutoName108 Gradient[300 x 1 x *1]] [AutoName109 Gradient[300 x 1 x *1]] [AutoName11 Gradient[300 x 1 x *1]] [AutoName110 Gradient[300 x 1 x *1]] [AutoName111 Gradient[300 x 1 x *1]] [AutoName112 Gradient[300 x 1 x *1]] [AutoName113 Gradient[300 x 1 x *1]] [AutoName114 Gradient[127 x 1 x *1]] [AutoName114 Value[127 x 1 x *1]] [AutoName12 Gradient[300 x 1 x *1]] [AutoName13 Gradient[300 x 1 x *1]] [AutoName14 Gradient[300 x 1 x *1]] [AutoName15 Gradient[300 x 1 x *1]] [AutoName16 Gradient[300 x *1]] [AutoName17 Gradient[300 x 1 x *1]] [AutoName18 Gradient[300 x 1 x *1]] [AutoName19 Gradient[300 x 1 x *1]] [AutoName2 Gradient[300 x 1 x *1]] [AutoName20 Gradient[300 x 1 x *1]] [AutoName21 Gradient[300 x 1 x *1]] [AutoName22 Gradient[300 x *1]] [AutoName23 Gradient[300 x 1 x *1]] [AutoName24 Gradient[300 x 1 x *1]] [AutoName25 Gradient[300 x 1 x *1]] [AutoName26 Gradient[300 x 1 x *1]] [AutoName27 Gradient[300 x 1 x *1]] [AutoName28 Gradient[300 x 1 x *1]] [AutoName29 Gradient[300 x 1 x *1]] [AutoName3 Gradient[300 x 1 x *1]] [AutoName30 Gradient[300 x 1 x *1]] [AutoName31 Gradient[300 x *1]] [AutoName32 Gradient[300 x 1 x *1]] [AutoName33 Gradient[300 x 1 x *1]] [AutoName34 Gradient[300 x 1 x *1]] [AutoName35 Gradient[300 x 1 x *1]] [AutoName36 Gradient[300 x 1 x *1]] [AutoName37 Gradient[300 x 1 x *1]] [AutoName38 Gradient[300 x 1 x *1]] [AutoName39 Gradient[300 x 1 x *1]] [AutoName4 Gradient[300 x 1 x *1]] [AutoName40 Gradient[300 x 1 x *1]] [AutoName41 Gradient[300 x 1 x *1]] [AutoName42 Gradient[300 x 1 x *1]] [AutoName43 Gradient[300 x 1 x *1]] [AutoName44 Gradient[300 x 1 x *1]] [AutoName45 Gradient[300 x 1 x *1]] [AutoName46 Gradient[300 x 1 x *1]] [AutoName47 Gradient[300 x 1 x *1]] [AutoName48 Gradient[300 x 1 x *1]] [AutoName49 Gradient[300 x 1 x *1]] [AutoName5 Gradient[300 x 1 x *1]] [AutoName50 Gradient[300 x 1 x *1]] [AutoName51 Gradient[300 x 1 x *1]] [AutoName52 Gradient[300 x 1 x *1]] [AutoName53 Gradient[300 x 1 x *1]] [AutoName54 Gradient[300 x 1 x *1]] [AutoName55 Gradient[300 x 1 x *1]] [AutoName56 Gradient[300 x 1 x *1]] [AutoName57 Gradient[300 x 1 x *1]] [AutoName58 Gradient[300 x 1 x *1]] [AutoName59 Gradient[300 x 1 x *1]] [AutoName6 Gradient[300 x 1 x *1]] [AutoName60 Gradient[300 x 1 x *1]] [AutoName61 Gradient[300 x 1 x *1]] [AutoName62 Gradient[300 x 1 x *1]] [AutoName63 Gradient[300 x 1 x *1]] [AutoName64 Gradient[300 x 1 x *1]] [AutoName65 Gradient[300 x 1 x *1]] [AutoName66 Gradient[300 x 1 x *1]] [AutoName67 Gradient[300 x 1 x *1]] [AutoName68 Gradient[300 x 1 x *1]] [AutoName69 Gradient[300 x 1 x *1]] [AutoName7 Gradient[300 x 1 x *1]] [AutoName70 Gradient[300 x 1 x *1]] [AutoName71 Gradient[300 x 1 x *1]] [AutoName72 Gradient[300 x 1 x *1]] [AutoName73 Gradient[300 x 1 x *1]] [AutoName74 Gradient[300 x 1 x *1]] [AutoName75 Gradient[300 x 1 x *1]] [AutoName76 Gradient[300 x 1 x *1]] [AutoName77 Gradient[300 x 1 x *1]] [AutoName78 Gradient[300 x 1 x *1]] [AutoName79 Gradient[300 x 1 x *1]] [AutoName8 Gradient[300 x 1 x *1]] [AutoName80 Gradient[300 x 1 x *1]] [AutoName81 Gradient[300 x 1 x *1]] [AutoName82 Gradient[300 x 1 x *1]] [AutoName83 Gradient[300 x 1 x *1]] [AutoName84 Gradient[300 x 1 x *1]] [AutoName85 Gradient[300 x 1 x *1]] [AutoName86 Gradient[300 x 1 x *1]] [AutoName87 Gradient[300 x 1 x *1]] [AutoName88 Gradient[300 x 1 x *1]] [AutoName89 Gradient[300 x 1 x *1]] [AutoName9 Gradient[300 x *1]] [AutoName90 Gradient[300 x 1 x *1]] [AutoName91 Gradient[300 x 1 x *1]] [AutoName92 Gradient[300 x 1 x *1]] [AutoName93 Gradient[300 x 1 x *1]] [AutoName94 Gradient[300 x 1 x *1]] [AutoName95 Gradient[300 x 1 x *1]] [AutoName96 Gradient[300 x 1 x *1]] [AutoName97 Gradient[300 x 1 x *1]] [AutoName98 Gradient[300 x 1 x *1]] [AutoName99 Gradient[300 x 1 x *1]] [CrossEntropyWithSoftmax Gradient[1]] [CrossEntropyWithSoftmax Value[1]] [E0 Gradient[50 x 944]] [LookupTable Gradient[150 x *1]] [PosteriorProb Gradient[127 x 1 x *1]] [PosteriorProb Value[127 x 1 x *1]] [W4 Gradient[127 x 300]] [WCF0 Gradient[300 x 1]] [WCF2 Gradient[300 x 1]] [WCF3 Gradient[300 x 1]] [WCI0 Gradient[300 x 1]] [WCI2 Gradient[300 x 1]] [WCI3 Gradient[300 x 1]] [WCO0 Gradient[300 x 1]] [WCO2 Gradient[300 x 1]] [WCO3 Gradient[300 x 1]] [WHC0 Gradient[300 x 300]] [WHC2 Gradient[300 x 300]] [WHC3 Gradient[300 x 300]] [WHF0 Gradient[300 x 300]] [WHF2 Gradient[300 x 300]] [WHF3 Gradient[300 x 300]] [WHI0 Gradient[300 x 300]] [WHI2 Gradient[300 x 300]] [WHI3 Gradient[300 x 300]] [WHO0 Gradient[300 x 300]] [WHO2 Gradient[300 x 300]] [WHO3 Gradient[300 x 300]] [WXC0 Gradient[300 x 150]] [WXC2 Gradient[300 x 300]] [WXC3 Gradient[300 x 300]] [WXF0 Gradient[300 x 150]] [WXF2 Gradient[300 x 300]] [WXF3 Gradient[300 x 300]] [WXI0 Gradient[300 x 150]] [WXI2 Gradient[300 x 300]] [WXI3 Gradient[300 x 300]] [WXO0 Gradient[300 x 150]] [WXO2 Gradient[300 x 300]] [WXO3 Gradient[300 x 300]] [bc0 Gradient[300 x 1]] [bc2 Gradient[300 x 1]] [bc3 Gradient[300 x 1]] [bf0 Gradient[300 x 1]] [bf2 Gradient[300 x 1]] [bf3 Gradient[300 x 1]] [bi0 Gradient[300 x 1]] [bi2 Gradient[300 x 1]] [bi3 Gradient[300 x 1]] [bo0 Gradient[300 x 1]] [bo2 Gradient[300 x 1]] [bo3 Gradient[300 x 1]] [features Gradient[2832 x *1]] [labels Gradient[127 x *1]] [outputs Gradient[127 x 1 x *1]] }
0000008BE4799F20: {[AutoName56 Value[300 x 1 x *1]] }
0000008BE4799FC0: {[AutoName17 Value[300 x 1 x *1]] }
0000008BE479A060: {[AutoName34 Value[300 x 1 x *1]] }
0000008BE479A100: {[AutoName72 Value[300 x 1 x *1]] }
0000008BE479A1A0: {[AutoName58 Value[300 x 1 x *1]] }
0000008BE479A240: {[AutoName68 Value[300 x 1 x *1]] }
0000008BE479A2E0: {[AutoName47 Value[300 x 1 x *1]] }
0000008BE479A380: {[AutoName51 Value[300 x 1 x *1]] }
0000008BE479A420: {[AutoName107 Value[300 x 1 x *1]] }
0000008BE479A4C0: {[AutoName98 Value[300 x 1 x *1]] }
0000008BE479A560: {[AutoName97 Value[300 x 1 x *1]] }
0000008BE479A600: {[AutoName60 Value[300 x 1 x *1]] }
0000008BE479A6A0: {[AutoName85 Value[300 x 1 x *1]] }
0000008BE479A740: {[AutoName28 Value[300 x 1 x *1]] }
0000008BE479A7E0: {[AutoName50 Value[300 x 1 x *1]] }
0000008BE479A880: {[AutoName19 Value[300 x 1 x *1]] }
0000008BE479A920: {[AutoName63 Value[300 x 1 x *1]] }
0000008BE479A9C0: {[AutoName45 Value[300 x 1 x *1]] }
0000008BE479AA60: {[AutoName71 Value[300 x 1 x *1]] }
0000008BE479AB00: {[AutoName70 Value[300 x 1 x *1]] }
0000008BE479ABA0: {[AutoName49 Value[300 x 1 x *1]] }
0000008BE479AC40: {[AutoName48 Value[300 x 1 x *1]] }
0000008BE479ACE0: {[AutoName65 Value[300 x 1 x *1]] }
0000008BE479AD80: {[AutoName37 Value[300 x 1 x *1]] }
0000008BE479AE20: {[AutoName35 Value[300 x 1 x *1]] }
0000008BE479AEC0: {[AutoName36 Value[300 x 1 x *1]] }
0000008BE479AF60: {[AutoName61 Value[300 x 1 x *1]] }
0000008BE479B000: {[AutoName64 Value[300 x 1 x *1]] }
0000008BE479B0A0: {[AutoName62 Value[300 x 1 x *1]] }
0000008BE479B140: {[AutoName55 Value[300 x 1 x *1]] }
0000008BE479B1E0: {[AutoName66 Value[300 x 1 x *1]] }
0000008BE479B280: {[AutoName73 Value[300 x 1 x *1]] }
0000008BE479B320: {[AutoName74 Value[300 x 1 x *1]] }
0000008BE479B3C0: {[AutoName57 Value[300 x 1 x *1]] }
0000008BE479B460: {[AutoName75 Value[300 x 1 x *1]] }
0000008BE479B500: {[AutoName108 Value[300 x 1 x *1]] }
0000008BE479B5A0: {[AutoName69 Value[300 x 1 x *1]] }
0000008BE479B640: {[AutoName52 Value[300 x 1 x *1]] }
0000008BE479B6E0: {[AutoName54 Value[300 x 1 x *1]] }
0000008BE479B780: {[AutoName59 Value[300 x 1 x *1]] }
0000008BE479B820: {[AutoName99 Value[300 x 1 x *1]] }
0000008BE479B8C0: {[AutoName86 Value[300 x 1 x *1]] }
0000008BE479B960: {[AutoName92 Value[300 x 1 x *1]] }
0000008BE479BA00: {[AutoName106 Value[300 x 1 x *1]] }
0000008BE479BAA0: {[AutoName46 Value[300 x 1 x *1]] }
0000008BE479BB40: {[AutoName53 Value[300 x 1 x *1]] }
0000008BE479BBE0: {[AutoName67 Value[300 x 1 x *1]] }
0000008BE479BC80: {[AutoName109 Value[300 x 1 x *1]] }
0000008BE479BD20: {[AutoName29 Value[300 x 1 x *1]] }
0000008BE479BDC0: {[AutoName18 Value[300 x 1 x *1]] }
0000008BEA969CE0: {[E0 Value[50 x 944]] }
0000008BEA969D80: {[features Value[2832 x *1]] }
0000008BEA969F60: {[bo2 Value[300 x 1]] }
0000008BEA96A000: {[bi0 Value[300 x 1]] }
0000008BEA96A140: {[bc2 Value[300 x 1]] }
0000008BEA96A280: {[bo3 Value[300 x 1]] }
0000008BEA96A500: {[labels Value[127 x *1]] }
0000008BEA96A960: {[bf3 Value[300 x 1]] }
0000008BEA96AB40: {[bf2 Value[300 x 1]] }
0000008BEA96B220: {[bc3 Value[300 x 1]] }
0000008BEA96B360: {[bc0 Value[300 x 1]] }
0000008BEA96B4A0: {[bf0 Value[300 x 1]] }
0000008BEA96B680: {[bi2 Value[300 x 1]] }
0000008BEA96B720: {[bi3 Value[300 x 1]] }
0000008BEA96BB80: {[bo0 Value[300 x 1]] }
0000008BF92CA590: {[AutoName76 Value[300 x 1 x *1]] }
0000008BF92CA6D0: {[AutoName81 Value[300 x 1 x *1]] }
0000008BF92CAA90: {[AutoName82 Value[300 x 1 x *1]] }
0000008BF92CAB30: {[AutoName77 Value[300 x 1 x *1]] }
0000008BF92CABD0: {[AutoName80 Value[300 x 1 x *1]] }
0000008BF92CAF90: {[AutoName79 Value[300 x 1 x *1]] }
0000008BF92CB170: {[AutoName78 Value[300 x 1 x *1]] }
0000008BFBF3C4A0: {[AutoName102 Value[300 x 1 x *1]] }
0000008BFBF3C540: {[AutoName94 Value[300 x 1 x *1]] }
0000008BFBF3C5E0: {[AutoName93 Value[300 x 1 x *1]] }
0000008BFBF3C680: {[AutoName105 Value[300 x 1 x *1]] }
0000008BFBF3C7C0: {[AutoName110 Value[300 x 1 x *1]] }
0000008BFBF3C900: {[AutoName100 Value[300 x 1 x *1]] }
0000008BFBF3CD60: {[AutoName103 Value[300 x 1 x *1]] }
0000008BFBF3CE00: {[AutoName96 Value[300 x 1 x *1]] }
0000008BFBF3CEA0: {[AutoName104 Value[300 x 1 x *1]] }
0000008BFBF3CF40: {[AutoName88 Value[300 x 1 x *1]] }
0000008BFBF3CFE0: {[AutoName95 Value[300 x 1 x *1]] }
0000008BFBF3D260: {[AutoName83 Value[300 x 1 x *1]] }
0000008BFBF3D300: {[AutoName90 Value[300 x 1 x *1]] }
0000008BFBF3D3A0: {[AutoName101 Value[300 x 1 x *1]] }
0000008BFBF3D580: {[AutoName113 Value[300 x 1 x *1]] }
0000008BFBF3D620: {[AutoName111 Value[300 x 1 x *1]] }
0000008BFBF3D6C0: {[AutoName112 Value[300 x 1 x *1]] }
0000008BFBF3D8A0: {[AutoName84 Value[300 x 1 x *1]] }
0000008BFBF3D940: {[AutoName91 Value[300 x 1 x *1]] }
0000008BFBF3D9E0: {[AutoName87 Value[300 x 1 x *1]] }
0000008BFBF3DA80: {[AutoName89 Value[300 x 1 x *1]] }
0000008BFC0E1BE0: {[AutoName21 Value[300 x 1 x *1]] }
0000008BFC0E1C80: {[AutoName24 Value[300 x 1 x *1]] }
0000008BFC0E1D20: {[AutoName10 Value[300 x 1 x *1]] }
0000008BFC0E1DC0: {[AutoName20 Value[300 x 1 x *1]] }
0000008BFC0E1E60: {[AutoName25 Value[300 x 1 x *1]] }
0000008BFC0E1FA0: {[AutoName27 Value[300 x 1 x *1]] }
0000008BFC0E2040: {[AutoName8 Value[300 x 1 x *1]] }
0000008BFC0E20E0: {[AutoName11 Value[300 x 1 x *1]] }
0000008BFC0E2180: {[AutoName7 Value[300 x 1 x *1]] }
0000008BFC0E2220: {[AutoName12 Value[300 x 1 x *1]] }
0000008BFC0E22C0: {[AutoName13 Value[300 x 1 x *1]] }
0000008BFC0E2400: {[LookupTable Value[150 x *1]] }
0000008BFC0E24A0: {[AutoName26 Value[300 x 1 x *1]] }
0000008BFC0E2540: {[AutoName14 Value[300 x 1 x *1]] }
0000008BFC0E2680: {[WXF3 Value[300 x 300]] }
0000008BFC0E2720: {[WXI2 Value[300 x 300]] }
0000008BFC0E27C0: {[WXO0 Value[300 x 150]] }
0000008BFC0E2900: {[WXO3 Value[300 x 300]] }
0000008BFC0E29A0: {[WXC3 Value[300 x 300]] }
0000008BFC0E2AE0: {[AutoName22 Value[300 x *1]] }
0000008BFC0E2B80: {[AutoName31 Value[300 x *1]] }
0000008BFC0E2D60: {[WXI0 Value[300 x 150]] }
0000008BFC0E2EA0: {[WXF2 Value[300 x 300]] }
0000008BFC0E2F40: {[AutoName9 Value[300 x *1]] }
0000008BFC0E3440: {[WXI3 Value[300 x 300]] }
0000008BFC0E34E0: {[WXF0 Value[300 x 150]] }
0000008BFC0E36C0: {[outputs Value[127 x 1 x *1]] }
0000008BFC0E3760: {[AutoName32 Value[300 x 1 x *1]] }
0000008BFC0E3800: {[AutoName23 Value[300 x 1 x *1]] }
0000008BFC0E38A0: {[AutoName16 Value[300 x *1]] }
0000008BFC0E3940: {[AutoName30 Value[300 x 1 x *1]] }
0000008BFC0E39E0: {[AutoName33 Value[300 x 1 x *1]] }
0000008BFC0E3A80: {[WXO2 Value[300 x 300]] }
0000008BFC3DF030: {[AutoName2 Value[300 x 1 x *1]] }
0000008BFC3DF990: {[AutoName38 Value[300 x 1 x *1]] }
0000008BFC3DFA30: {[AutoName4 Value[300 x 1 x *1]] }
0000008BFC3DFC10: {[AutoName3 Value[300 x 1 x *1]] }
0000008BFC3E0390: {[AutoName40 Value[300 x 1 x *1]] }
0000008BFC3E0570: {[AutoName39 Value[300 x 1 x *1]] }
0000008BFC3E09D0: {[AutoName15 Value[300 x 1 x *1]] }
0000008BFC3E0A70: {[AutoName1 Value[300 x 1 x *1]] }
0000008BFC3E0BB0: {[AutoName0 Value[300 x 1 x *1]] }
0000008BFC3E1830: {[AutoName5 Value[300 x 1 x *1]] }
0000008BFC3E1F10: {[AutoName43 Value[300 x 1 x *1]] }
0000008BFC3E2370: {[AutoName41 Value[300 x 1 x *1]] }
0000008BFC3E25F0: {[AutoName44 Value[300 x 1 x *1]] }
0000008BFC3E27D0: {[AutoName42 Value[300 x 1 x *1]] }
0000008BFC3E2870: {[AutoName6 Value[300 x 1 x *1]] }
0000008BFC5AC940: {[WCI0 Value[300 x 1]] }
0000008BFC5AC9E0: {[W4 Value[127 x 300]] }
0000008BFC5ACA80: {[WHF2 Value[300 x 300]] }
0000008BFC5ACBC0: {[WXC0 Value[300 x 150]] }
0000008BFC5ACF80: {[WHF0 Value[300 x 300]] }
0000008BFC5AD020: {[WXC2 Value[300 x 300]] }
0000008BFC5AD200: {[WCF2 Value[300 x 1]] }
0000008BFC5AD2A0: {[WCO0 Value[300 x 1]] }
0000008BFC5AD340: {[WHO3 Value[300 x 300]] }
0000008BFC5AD3E0: {[WHI0 Value[300 x 300]] }
0000008BFC5AD520: {[WCO2 Value[300 x 1]] }
0000008BFC5AD660: {[WCO3 Value[300 x 1]] }
0000008BFC5AD700: {[WHI2 Value[300 x 300]] }
0000008BFC5AD8E0: {[WCI3 Value[300 x 1]] }
0000008BFC5ADA20: {[WCF3 Value[300 x 1]] }
0000008BFC5ADB60: {[WCI2 Value[300 x 1]] }
0000008BFC5ADC00: {[WHC2 Value[300 x 300]] }
0000008BFC5ADCA0: {[WHC3 Value[300 x 300]] }
0000008BFC5AE060: {[WHI3 Value[300 x 300]] }
0000008BFC5AE2E0: {[WHO0 Value[300 x 300]] }
0000008BFC5AE380: {[WCF0 Value[300 x 1]] }
0000008BFC5AE560: {[WHC0 Value[300 x 300]] }
0000008BFC5AE600: {[WHO2 Value[300 x 300]] }
0000008BFC5AE6A0: {[WHF3 Value[300 x 300]] }

BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 5 lines with a total of 92+5 tokens.
O O O O O O O O O B-fromloc.city_name O B-toloc.city_name I-toloc.city_name O O O O O B-stoploc.city_name I-stoploc.city_name O 
O O O O O O O O O O O O O O O O O O O O O 
O O B-depart_date.month_name B-depart_date.day_number O O O O O B-fromloc.city_name O B-toloc.city_name I-toloc.city_name O B-depart_time.time_relative B-depart_time.time I-depart_time.time O 
O O O O O O O O O O O O O O O O O O 
O O B-depart_date.month_name B-depart_date.day_number O O O O O O B-fromloc.city_name O B-toloc.city_name I-toloc.city_name O 
O O O O O O O O O O O O O O O 
O O O O O O O B-round_trip I-round_trip O B-fromloc.city_name O B-toloc.city_name I-toloc.city_name O B-depart_date.month_name B-depart_date.day_number O 
O O O O O O O O O O O O O O O O O O 
O O O O O O O B-fromloc.city_name O B-toloc.city_name I-toloc.city_name I-toloc.city_name O B-depart_date.month_name B-depart_date.day_number O B-airline_name I-airline_name O 
O O O O O O O O O O O O O O O O O O O 
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
Total Samples Evaluated = 91

08/04/2016 08:09:24: Action "write" complete.

08/04/2016 08:09:24: __COMPLETED__