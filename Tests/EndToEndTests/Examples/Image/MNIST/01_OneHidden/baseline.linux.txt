CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU E5-2630 v2 @ 2.60GHz
    Hardware threads: 24
    Total Memory: 264172964 kB
-------------------------------------------------------------------
=== Running /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/gpu/release/bin/cntk configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden/../../../../../../Examples/Image/MNIST/Config/01_OneHidden.cntk currentDirectory=/tmp/cntk-test-20160804134124.952087/Examples/Image/MNIST_01_OneHidden@release_gpu/TestData RunDir=/tmp/cntk-test-20160804134124.952087/Examples/Image/MNIST_01_OneHidden@release_gpu DataDir=/tmp/cntk-test-20160804134124.952087/Examples/Image/MNIST_01_OneHidden@release_gpu/TestData ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden/../../../../../../Examples/Image/MNIST/Config OutputDir=/tmp/cntk-test-20160804134124.952087/Examples/Image/MNIST_01_OneHidden@release_gpu DeviceId=0 timestamping=true train=[SGD=[maxEpochs=3]] imageLayout="cudnn"
-------------------------------------------------------------------
Build info: 

		Built time: Aug  4 2016 13:05:36
		Last modified date: Thu Aug  4 12:33:33 2016
		Build type: release
		Build target: GPU
		With 1bit-SGD: no
		Math lib: mkl
		CUDA_PATH: /usr/local/cuda-7.5
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local/cudnn-4.0
		Build Branch: HEAD
		Build SHA1: 0f61695dfc335f2406284d335678f57c215e6e9c
		Built by philly on 643085f7f8c2
		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
-------------------------------------------------------------------
Changed current directory to /tmp/cntk-test-20160804134124.952087/Examples/Image/MNIST_01_OneHidden@release_gpu/TestData
08/04/2016 14:34:35: -------------------------------------------------------------------
08/04/2016 14:34:35: Build info: 

08/04/2016 14:34:35: 		Built time: Aug  4 2016 13:05:36
08/04/2016 14:34:35: 		Last modified date: Thu Aug  4 12:33:33 2016
08/04/2016 14:34:35: 		Build type: release
08/04/2016 14:34:35: 		Build target: GPU
08/04/2016 14:34:35: 		With 1bit-SGD: no
08/04/2016 14:34:35: 		Math lib: mkl
08/04/2016 14:34:35: 		CUDA_PATH: /usr/local/cuda-7.5
08/04/2016 14:34:35: 		CUB_PATH: /usr/local/cub-1.4.1
08/04/2016 14:34:35: 		CUDNN_PATH: /usr/local/cudnn-4.0
08/04/2016 14:34:35: 		Build Branch: HEAD
08/04/2016 14:34:35: 		Build SHA1: 0f61695dfc335f2406284d335678f57c215e6e9c
08/04/2016 14:34:35: 		Built by philly on 643085f7f8c2
08/04/2016 14:34:35: 		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
08/04/2016 14:34:35: -------------------------------------------------------------------
08/04/2016 14:34:36: -------------------------------------------------------------------
08/04/2016 14:34:36: GPU info:

08/04/2016 14:34:36: 		Device[0]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
08/04/2016 14:34:36: 		Device[1]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
08/04/2016 14:34:36: 		Device[2]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
08/04/2016 14:34:36: 		Device[3]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
08/04/2016 14:34:36: -------------------------------------------------------------------

08/04/2016 14:34:36: Running on localhost at 2016/08/04 14:34:36
08/04/2016 14:34:36: Command line: 
/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/gpu/release/bin/cntk  configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden/../../../../../../Examples/Image/MNIST/Config/01_OneHidden.cntk  currentDirectory=/tmp/cntk-test-20160804134124.952087/Examples/Image/MNIST_01_OneHidden@release_gpu/TestData  RunDir=/tmp/cntk-test-20160804134124.952087/Examples/Image/MNIST_01_OneHidden@release_gpu  DataDir=/tmp/cntk-test-20160804134124.952087/Examples/Image/MNIST_01_OneHidden@release_gpu/TestData  ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden/../../../../../../Examples/Image/MNIST/Config  OutputDir=/tmp/cntk-test-20160804134124.952087/Examples/Image/MNIST_01_OneHidden@release_gpu  DeviceId=0  timestamping=true  train=[SGD=[maxEpochs=3]]  imageLayout="cudnn"



08/04/2016 14:34:36: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
08/04/2016 14:34:36: rootDir = ".."
configDir = "$rootDir$/Config"
dataDir   = "$rootDir$/Data"
outputDir = "$rootDir$/Output"
modelDir  = "$outputDir$/Models"
deviceId = 0
command = train:test
precision = "float"
modelPath = "$modelDir$/01_OneHidden"
traceLevel = 1
numMBsToShowResult = 500
train = [
    action = "train"
    BrainScriptNetworkBuilder_disabled = [
        include "Shared.bs"
featDim = 28 * 28                           
labelDim = 10                               
        features = Input (featDim)
        featScaled = Constant (1.0 / 256.0) .* features
        labels = Input (labelDim)
        hiddenDim = 200
        h1 = DNNSigmoidLayer (featDim,  hiddenDim, featScaled, 1)
        z  = DNNLayer        (hiddenDim, labelDim, h1,         1)
        ce   = CrossEntropyWithSoftmax (labels, z)
        errs = ErrorPrediction         (labels, z)
        top5Errs = ErrorPrediction (labels, z, topN=5)
        featureNodes    = (features)
        labelNodes      = (labels)
        criterionNodes  = (ce)
        evaluationNodes = (errs)
        outputNodes     = (z)
    ]
    NDLNetworkBuilder = [
        imageLayout = "cudnn"
        initOnCPUOnly = true
        ndlMacros = "$configDir$/Macros.ndl"
        networkDescription = "$ConfigDir$/01_OneHidden.ndl"
    ]
    SGD = [
        epochSize = 60000
        minibatchSize = 32
        learningRatesPerSample = 0.003125
        momentumAsTimeConstant = 0
        maxEpochs = 30
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataDir$/Train-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]   
]
test = [
    action = "test"
minibatchSize = 1024    
    evalNodeNames = ce:errs:top5Errs
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataDir$/Test-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]
]
currentDirectory=/tmp/cntk-test-20160804134124.952087/Examples/Image/MNIST_01_OneHidden@release_gpu/TestData
RunDir=/tmp/cntk-test-20160804134124.952087/Examples/Image/MNIST_01_OneHidden@release_gpu
DataDir=/tmp/cntk-test-20160804134124.952087/Examples/Image/MNIST_01_OneHidden@release_gpu/TestData
ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden/../../../../../../Examples/Image/MNIST/Config
OutputDir=/tmp/cntk-test-20160804134124.952087/Examples/Image/MNIST_01_OneHidden@release_gpu
DeviceId=0
timestamping=true
train=[SGD=[maxEpochs=3]]
imageLayout="cudnn"

08/04/2016 14:34:36: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<

08/04/2016 14:34:36: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
08/04/2016 14:34:36: rootDir = ".."
configDir = "../Config"
dataDir   = "../Data"
outputDir = "../Output"
modelDir  = "/tmp/cntk-test-20160804134124.952087/Examples/Image/MNIST_01_OneHidden@release_gpu/Models"
deviceId = 0
command = train:test
precision = "float"
modelPath = "/tmp/cntk-test-20160804134124.952087/Examples/Image/MNIST_01_OneHidden@release_gpu/Models/01_OneHidden"
traceLevel = 1
numMBsToShowResult = 500
train = [
    action = "train"
    BrainScriptNetworkBuilder_disabled = [
        include "Shared.bs"
featDim = 28 * 28                           
labelDim = 10                               
        features = Input (featDim)
        featScaled = Constant (1.0 / 256.0) .* features
        labels = Input (labelDim)
        hiddenDim = 200
        h1 = DNNSigmoidLayer (featDim,  hiddenDim, featScaled, 1)
        z  = DNNLayer        (hiddenDim, labelDim, h1,         1)
        ce   = CrossEntropyWithSoftmax (labels, z)
        errs = ErrorPrediction         (labels, z)
        top5Errs = ErrorPrediction (labels, z, topN=5)
        featureNodes    = (features)
        labelNodes      = (labels)
        criterionNodes  = (ce)
        evaluationNodes = (errs)
        outputNodes     = (z)
    ]
    NDLNetworkBuilder = [
        imageLayout = "cudnn"
        initOnCPUOnly = true
        ndlMacros = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden/../../../../../../Examples/Image/MNIST/Config/Macros.ndl"
        networkDescription = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden/../../../../../../Examples/Image/MNIST/Config/01_OneHidden.ndl"
    ]
    SGD = [
        epochSize = 60000
        minibatchSize = 32
        learningRatesPerSample = 0.003125
        momentumAsTimeConstant = 0
        maxEpochs = 30
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/tmp/cntk-test-20160804134124.952087/Examples/Image/MNIST_01_OneHidden@release_gpu/TestData/Train-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]   
]
test = [
    action = "test"
minibatchSize = 1024    
    evalNodeNames = ce:errs:top5Errs
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/tmp/cntk-test-20160804134124.952087/Examples/Image/MNIST_01_OneHidden@release_gpu/TestData/Test-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]
]
currentDirectory=/tmp/cntk-test-20160804134124.952087/Examples/Image/MNIST_01_OneHidden@release_gpu/TestData
RunDir=/tmp/cntk-test-20160804134124.952087/Examples/Image/MNIST_01_OneHidden@release_gpu
DataDir=/tmp/cntk-test-20160804134124.952087/Examples/Image/MNIST_01_OneHidden@release_gpu/TestData
ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden/../../../../../../Examples/Image/MNIST/Config
OutputDir=/tmp/cntk-test-20160804134124.952087/Examples/Image/MNIST_01_OneHidden@release_gpu
DeviceId=0
timestamping=true
train=[SGD=[maxEpochs=3]]
imageLayout="cudnn"

08/04/2016 14:34:36: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<

08/04/2016 14:34:36: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
configparameters: 01_OneHidden.cntk:command=train:test
configparameters: 01_OneHidden.cntk:configDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden/../../../../../../Examples/Image/MNIST/Config
configparameters: 01_OneHidden.cntk:currentDirectory=/tmp/cntk-test-20160804134124.952087/Examples/Image/MNIST_01_OneHidden@release_gpu/TestData
configparameters: 01_OneHidden.cntk:dataDir=/tmp/cntk-test-20160804134124.952087/Examples/Image/MNIST_01_OneHidden@release_gpu/TestData
configparameters: 01_OneHidden.cntk:deviceId=0
configparameters: 01_OneHidden.cntk:imageLayout=cudnn
configparameters: 01_OneHidden.cntk:modelDir=/tmp/cntk-test-20160804134124.952087/Examples/Image/MNIST_01_OneHidden@release_gpu/Models
configparameters: 01_OneHidden.cntk:modelPath=/tmp/cntk-test-20160804134124.952087/Examples/Image/MNIST_01_OneHidden@release_gpu/Models/01_OneHidden
configparameters: 01_OneHidden.cntk:numMBsToShowResult=500
configparameters: 01_OneHidden.cntk:outputDir=/tmp/cntk-test-20160804134124.952087/Examples/Image/MNIST_01_OneHidden@release_gpu
configparameters: 01_OneHidden.cntk:precision=float
configparameters: 01_OneHidden.cntk:rootDir=..
configparameters: 01_OneHidden.cntk:RunDir=/tmp/cntk-test-20160804134124.952087/Examples/Image/MNIST_01_OneHidden@release_gpu
configparameters: 01_OneHidden.cntk:test=[
    action = "test"
minibatchSize = 1024    
    evalNodeNames = ce:errs:top5Errs
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/tmp/cntk-test-20160804134124.952087/Examples/Image/MNIST_01_OneHidden@release_gpu/TestData/Test-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]
]

configparameters: 01_OneHidden.cntk:timestamping=true
configparameters: 01_OneHidden.cntk:traceLevel=1
configparameters: 01_OneHidden.cntk:train=[
    action = "train"
    BrainScriptNetworkBuilder_disabled = [
        include "Shared.bs"
featDim = 28 * 28                           
labelDim = 10                               
        features = Input (featDim)
        featScaled = Constant (1.0 / 256.0) .* features
        labels = Input (labelDim)
        hiddenDim = 200
        h1 = DNNSigmoidLayer (featDim,  hiddenDim, featScaled, 1)
        z  = DNNLayer        (hiddenDim, labelDim, h1,         1)
        ce   = CrossEntropyWithSoftmax (labels, z)
        errs = ErrorPrediction         (labels, z)
        top5Errs = ErrorPrediction (labels, z, topN=5)
        featureNodes    = (features)
        labelNodes      = (labels)
        criterionNodes  = (ce)
        evaluationNodes = (errs)
        outputNodes     = (z)
    ]
    NDLNetworkBuilder = [
        imageLayout = "cudnn"
        initOnCPUOnly = true
        ndlMacros = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden/../../../../../../Examples/Image/MNIST/Config/Macros.ndl"
        networkDescription = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/MNIST/01_OneHidden/../../../../../../Examples/Image/MNIST/Config/01_OneHidden.ndl"
    ]
    SGD = [
        epochSize = 60000
        minibatchSize = 32
        learningRatesPerSample = 0.003125
        momentumAsTimeConstant = 0
        maxEpochs = 30
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/tmp/cntk-test-20160804134124.952087/Examples/Image/MNIST_01_OneHidden@release_gpu/TestData/Train-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]   
] [SGD=[maxEpochs=3]]

08/04/2016 14:34:36: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
08/04/2016 14:34:36: Commands: train test
08/04/2016 14:34:36: Precision = "float"
08/04/2016 14:34:36: CNTKModelPath: /tmp/cntk-test-20160804134124.952087/Examples/Image/MNIST_01_OneHidden@release_gpu/Models/01_OneHidden
08/04/2016 14:34:36: CNTKCommandTrainInfo: train : 3
08/04/2016 14:34:36: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 3

08/04/2016 14:34:36: ##############################################################################
08/04/2016 14:34:36: #                                                                            #
08/04/2016 14:34:36: # Action "train"                                                             #
08/04/2016 14:34:36: #                                                                            #
08/04/2016 14:34:36: ##############################################################################

08/04/2016 14:34:36: CNTKCommandTrainBegin: train
NDLBuilder Using GPU 0

08/04/2016 14:34:36: Creating virgin network.

Post-processing network...

4 roots:
	ce = CrossEntropyWithSoftmax()
	errs = ErrorPrediction()
	ol.z = Plus()
	top5Errs = ErrorPrediction()

Validating network. 17 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [10 x *]
Validating --> ol.W = LearnableParameter() :  -> [10 x 200]
Validating --> h1.W = LearnableParameter() :  -> [200 x 784]
Validating --> featScale = LearnableParameter() :  -> [1 x 1]
Validating --> features = InputValue() :  -> [784 x *]
Validating --> featScaled = ElementTimes (featScale, features) : [1 x 1], [784 x *] -> [784 x 1 x *]
Validating --> h1.t = Times (h1.W, featScaled) : [200 x 784], [784 x 1 x *] -> [200 x 1 x *]
Validating --> h1.b = LearnableParameter() :  -> [200 x 1]
Validating --> h1.z = Plus (h1.t, h1.b) : [200 x 1 x *], [200 x 1] -> [200 x 1 x *]
Validating --> h1.y = Sigmoid (h1.z) : [200 x 1 x *] -> [200 x 1 x *]
Validating --> ol.t = Times (ol.W, h1.y) : [10 x 200], [200 x 1 x *] -> [10 x 1 x *]
Validating --> ol.b = LearnableParameter() :  -> [10 x 1]
Validating --> ol.z = Plus (ol.t, ol.b) : [10 x 1 x *], [10 x 1] -> [10 x 1 x *]
Validating --> ce = CrossEntropyWithSoftmax (labels, ol.z) : [10 x *], [10 x 1 x *] -> [1]
Validating --> errs = ErrorPrediction (labels, ol.z) : [10 x *], [10 x 1 x *] -> [1]
Validating --> unnamed89 = LearnableParameter() :  -> [1 x 1]
Validating --> top5Errs = ErrorPrediction (labels, ol.z, unnamed89) : [10 x *], [10 x 1 x *], [1 x 1] -> [1]

Validating network. 9 nodes to process in pass 2.


Validating network, final pass.



9 out of 17 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

08/04/2016 14:34:36: Created model with 17 nodes on GPU 0.

08/04/2016 14:34:36: Training criterion node(s):
08/04/2016 14:34:36: 	ce = CrossEntropyWithSoftmax

08/04/2016 14:34:36: Evaluation criterion node(s):

08/04/2016 14:34:36: 	top5Errs = ErrorPrediction
08/04/2016 14:34:36: 	errs = ErrorPrediction


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

(nil): {[errs Gradient[1]] [featScale Gradient[1 x 1]] [featScaled Gradient[784 x 1 x *]] [features Gradient[784 x *]] [labels Gradient[10 x *]] [top5Errs Gradient[1]] [unnamed89 Gradient[1 x 1]] }
0x2b5c538: {[features Value[784 x *]] }
0x2b5cbe8: {[errs Value[1]] }
0x2b5cd48: {[ol.z Value[10 x 1 x *]] }
0x2f439b8: {[labels Value[10 x *]] }
0x2f44368: {[h1.W Value[200 x 784]] }
0x2f44478: {[h1.b Value[200 x 1]] }
0x2f462b8: {[ol.W Value[10 x 200]] }
0x2f47838: {[ol.b Value[10 x 1]] }
0x2f49188: {[unnamed89 Value[1 x 1]] }
0x2f52d98: {[featScale Value[1 x 1]] }
0x38fd638: {[top5Errs Value[1]] }
0x38fd968: {[ce Value[1]] }
0x38fdcd8: {[featScaled Value[784 x 1 x *]] }
0x38ff508: {[h1.t Value[200 x 1 x *]] }
0x38ff668: {[h1.W Gradient[200 x 784]] [h1.z Value[200 x 1 x *]] }
0x38ff7c8: {[h1.t Gradient[200 x 1 x *]] [h1.y Value[200 x 1 x *]] }
0x38ff988: {[h1.z Gradient[200 x 1 x *]] [ol.t Value[10 x 1 x *]] }
0x3900948: {[ce Gradient[1]] }
0x3900b08: {[ol.W Gradient[10 x 200]] [ol.z Gradient[10 x 1 x *]] }
0x3900cc8: {[ol.t Gradient[10 x 1 x *]] }
0x3900e88: {[ol.b Gradient[10 x 1]] }
0x3901048: {[h1.b Gradient[200 x 1]] [h1.y Gradient[200 x 1 x *]] }

08/04/2016 14:34:36: No PreCompute nodes found, skipping PreCompute step.

08/04/2016 14:34:36: Starting Epoch 1: learning rate per sample = 0.003125  effective momentum = 0.000000  momentum as time constant = 0.0 samples
BlockRandomizer::StartEpoch: epoch 0: frames [0..60000] (first sequence at sample 0), data subset 0 of 1

08/04/2016 14:34:36: Starting minibatch loop.
08/04/2016 14:34:38:  Epoch[ 1 of 3]-Minibatch[   1- 500, 26.67%]: ce = 1.29987610 * 16000; top5Errs = 9.725% * 16000; errs = 39.137% * 16000; time = 1.3787s; samplesPerSecond = 11605.1
08/04/2016 14:34:38:  Epoch[ 1 of 3]-Minibatch[ 501-1000, 53.33%]: ce = 0.49457739 * 16000; top5Errs = 0.944% * 16000; errs = 13.131% * 16000; time = 0.3341s; samplesPerSecond = 47887.3
08/04/2016 14:34:38:  Epoch[ 1 of 3]-Minibatch[1001-1500, 80.00%]: ce = 0.40006946 * 16000; top5Errs = 0.806% * 16000; errs = 11.119% * 16000; time = 0.3386s; samplesPerSecond = 47259.7
08/04/2016 14:34:39: Finished Epoch[ 1 of 3]: [Training] ce = 0.65634395 * 60000; top5Errs = 3.198% * 60000; errs = 18.930% * 60000; totalSamplesSeen = 60000; learningRatePerSample = 0.003125; epochTime=2.31378s
08/04/2016 14:34:39: SGD: Saving checkpoint model '/tmp/cntk-test-20160804134124.952087/Examples/Image/MNIST_01_OneHidden@release_gpu/Models/01_OneHidden.1'

08/04/2016 14:34:39: Starting Epoch 2: learning rate per sample = 0.003125  effective momentum = 0.000000  momentum as time constant = 0.0 samples
BlockRandomizer::StartEpoch: epoch 1: frames [60000..120000] (first sequence at sample 60000), data subset 0 of 1

08/04/2016 14:34:39: Starting minibatch loop.
08/04/2016 14:34:39:  Epoch[ 2 of 3]-Minibatch[   1- 500, 26.67%]: ce = 0.33882422 * 16000; top5Errs = 0.713% * 16000; errs = 9.975% * 16000; time = 0.3346s; samplesPerSecond = 47814.0
08/04/2016 14:34:39:  Epoch[ 2 of 3]-Minibatch[ 501-1000, 53.33%]: ce = 0.31564008 * 16000; top5Errs = 0.550% * 16000; errs = 8.944% * 16000; time = 0.3336s; samplesPerSecond = 47958.3
08/04/2016 14:34:40:  Epoch[ 2 of 3]-Minibatch[1001-1500, 80.00%]: ce = 0.31381464 * 16000; top5Errs = 0.556% * 16000; errs = 9.238% * 16000; time = 0.3316s; samplesPerSecond = 48249.7
08/04/2016 14:34:40: Finished Epoch[ 2 of 3]: [Training] ce = 0.31517594 * 60000; top5Errs = 0.565% * 60000; errs = 9.152% * 60000; totalSamplesSeen = 120000; learningRatePerSample = 0.003125; epochTime=1.25515s
08/04/2016 14:34:40: SGD: Saving checkpoint model '/tmp/cntk-test-20160804134124.952087/Examples/Image/MNIST_01_OneHidden@release_gpu/Models/01_OneHidden.2'

08/04/2016 14:34:40: Starting Epoch 3: learning rate per sample = 0.003125  effective momentum = 0.000000  momentum as time constant = 0.0 samples
BlockRandomizer::StartEpoch: epoch 2: frames [120000..180000] (first sequence at sample 120000), data subset 0 of 1

08/04/2016 14:34:40: Starting minibatch loop.
08/04/2016 14:34:40:  Epoch[ 3 of 3]-Minibatch[   1- 500, 26.67%]: ce = 0.29463010 * 16000; top5Errs = 0.487% * 16000; errs = 8.650% * 16000; time = 0.3334s; samplesPerSecond = 47994.0
08/04/2016 14:34:40:  Epoch[ 3 of 3]-Minibatch[ 501-1000, 53.33%]: ce = 0.27945645 * 16000; top5Errs = 0.550% * 16000; errs = 8.150% * 16000; time = 0.3318s; samplesPerSecond = 48216.6
08/04/2016 14:34:41:  Epoch[ 3 of 3]-Minibatch[1001-1500, 80.00%]: ce = 0.25820679 * 16000; top5Errs = 0.356% * 16000; errs = 7.650% * 16000; time = 0.3330s; samplesPerSecond = 48043.7
08/04/2016 14:34:41: Finished Epoch[ 3 of 3]: [Training] ce = 0.27497370 * 60000; top5Errs = 0.450% * 60000; errs = 8.042% * 60000; totalSamplesSeen = 180000; learningRatePerSample = 0.003125; epochTime=1.2531s
08/04/2016 14:34:41: SGD: Saving checkpoint model '/tmp/cntk-test-20160804134124.952087/Examples/Image/MNIST_01_OneHidden@release_gpu/Models/01_OneHidden'
08/04/2016 14:34:41: CNTKCommandTrainEnd: train

08/04/2016 14:34:42: Action "train" complete.


08/04/2016 14:34:42: ##############################################################################
08/04/2016 14:34:42: #                                                                            #
08/04/2016 14:34:42: # Action "test"                                                              #
08/04/2016 14:34:42: #                                                                            #
08/04/2016 14:34:42: ##############################################################################


Post-processing network...

3 roots:
	ce = CrossEntropyWithSoftmax()
	errs = ErrorPrediction()
	top5Errs = ErrorPrediction()

Validating network. 17 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [10 x *1]
Validating --> ol.W = LearnableParameter() :  -> [10 x 200]
Validating --> h1.W = LearnableParameter() :  -> [200 x 784]
Validating --> featScale = LearnableParameter() :  -> [1 x 1]
Validating --> features = InputValue() :  -> [784 x *1]
Validating --> featScaled = ElementTimes (featScale, features) : [1 x 1], [784 x *1] -> [784 x 1 x *1]
Validating --> h1.t = Times (h1.W, featScaled) : [200 x 784], [784 x 1 x *1] -> [200 x 1 x *1]
Validating --> h1.b = LearnableParameter() :  -> [200 x 1]
Validating --> h1.z = Plus (h1.t, h1.b) : [200 x 1 x *1], [200 x 1] -> [200 x 1 x *1]
Validating --> h1.y = Sigmoid (h1.z) : [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> ol.t = Times (ol.W, h1.y) : [10 x 200], [200 x 1 x *1] -> [10 x 1 x *1]
Validating --> ol.b = LearnableParameter() :  -> [10 x 1]
Validating --> ol.z = Plus (ol.t, ol.b) : [10 x 1 x *1], [10 x 1] -> [10 x 1 x *1]
Validating --> ce = CrossEntropyWithSoftmax (labels, ol.z) : [10 x *1], [10 x 1 x *1] -> [1]
Validating --> errs = ErrorPrediction (labels, ol.z) : [10 x *1], [10 x 1 x *1] -> [1]
Validating --> unnamed89 = LearnableParameter() :  -> [1 x 1]
Validating --> top5Errs = ErrorPrediction (labels, ol.z, unnamed89) : [10 x *1], [10 x 1 x *1], [1 x 1] -> [1]

Validating network. 9 nodes to process in pass 2.


Validating network, final pass.



9 out of 17 nodes do not share the minibatch layout with the input data.

Post-processing network complete.



Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

(nil): {[ce Gradient[1]] [errs Gradient[1]] [featScale Gradient[1 x 1]] [featScaled Gradient[784 x 1 x *1]] [features Gradient[784 x *1]] [h1.W Gradient[200 x 784]] [h1.b Gradient[200 x 1]] [h1.t Gradient[200 x 1 x *1]] [h1.y Gradient[200 x 1 x *1]] [h1.z Gradient[200 x 1 x *1]] [labels Gradient[10 x *1]] [ol.W Gradient[10 x 200]] [ol.b Gradient[10 x 1]] [ol.t Gradient[10 x 1 x *1]] [ol.z Gradient[10 x 1 x *1]] [top5Errs Gradient[1]] [unnamed89 Gradient[1 x 1]] }
0x7f2ab9739eb8: {[ce Value[1]] }
0x7f2ab973a6c8: {[errs Value[1]] }
0x7f2ab973b038: {[featScale Value[1 x 1]] }
0x7f2ab973c678: {[features Value[784 x *1]] }
0x7f2ab973d578: {[h1.b Value[200 x 1]] }
0x7f2ab973da78: {[h1.W Value[200 x 784]] }
0x7f2ab973f698: {[labels Value[10 x *1]] }
0x7f2ab973fd68: {[ol.b Value[10 x 1]] }
0x7f2ab9740e48: {[ol.W Value[10 x 200]] }
0x7f2ab97418f8: {[unnamed89 Value[1 x 1]] }
0x7f2ab9745168: {[top5Errs Value[1]] }
0x7f2ab9745668: {[h1.t Value[200 x 1 x *1]] }
0x7f2ab97466e8: {[featScaled Value[784 x 1 x *1]] }
0x7f2ab9746bb8: {[h1.z Value[200 x 1 x *1]] }
0x7f2ab9746d78: {[h1.y Value[200 x 1 x *1]] }
0x7f2ab9746f38: {[ol.t Value[10 x 1 x *1]] }
0x7f2ab97470f8: {[ol.z Value[10 x 1 x *1]] }

BlockRandomizer::StartEpoch: epoch 0: frames [0..10000] (first sequence at sample 0), data subset 0 of 1
08/04/2016 14:34:42: Minibatch[1-10]: ce = 0.25123998 * 10000; errs = 7.410% * 10000; top5Errs = 0.380% * 10000
08/04/2016 14:34:42: Final Results: Minibatch[1-10]: ce = 0.25123998 * 10000; perplexity = 1.28561857; errs = 7.410% * 10000; top5Errs = 0.380% * 10000

08/04/2016 14:34:42: Action "test" complete.

08/04/2016 14:34:42: __COMPLETED__