CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU E5-2630 v2 @ 2.60GHz
    Hardware threads: 24
    Total Memory: 268381192 kB
-------------------------------------------------------------------
=== Running /cygdrive/c/jenkins/workspace/CNTK-Test-Windows-W1/x64/release/cntk.exe configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Config/Multigpu.cntk currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091805.204544\Examples\Other\Simple2d_MultiGpu@release_cpu DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Config OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091805.204544\Examples\Other\Simple2d_MultiGpu@release_cpu DeviceId=-1 timestamping=true Multigpu_Demo_Train=[SGD=[maxEpochs=3]]
-------------------------------------------------------------------
Build info: 

		Built time: Aug  4 2016 06:18:32
		Last modified date: Thu Aug  4 03:38:59 2016
		Build type: Release
		Build target: GPU
		With 1bit-SGD: yes
		Math lib: mkl
		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
		CUB_PATH: c:\src\cub-1.4.1
		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
		Build Branch: HEAD
		Build SHA1: 0f61695dfc335f2406284d335678f57c215e6e9c
		Built by svcphil on Philly-Pool1
		Build Path: c:\jenkins\workspace\CNTK-Build-Windows@2\Source\CNTK\
-------------------------------------------------------------------
Changed current directory to C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data
MPIWrapper: initializing MPI
ping [requestnodes (before change)]: 1 nodes pinging each other
ping [requestnodes (before change)]: all 1 nodes responded
requestnodes [MPIWrapper]: using 1 out of 1 MPI nodes (1 requested); we (0) are in (participating)
ping [requestnodes (after change)]: 1 nodes pinging each other
ping [requestnodes (after change)]: all 1 nodes responded
mpihelper: only one MPI process: MPI operation will be boring
ping [mpihelper]: 1 nodes pinging each other
ping [mpihelper]: all 1 nodes responded
08/04/2016 09:18:56: -------------------------------------------------------------------
08/04/2016 09:18:56: Build info: 

08/04/2016 09:18:56: 		Built time: Aug  4 2016 06:18:32
08/04/2016 09:18:56: 		Last modified date: Thu Aug  4 03:38:59 2016
08/04/2016 09:18:56: 		Build type: Release
08/04/2016 09:18:56: 		Build target: GPU
08/04/2016 09:18:56: 		With 1bit-SGD: yes
08/04/2016 09:18:56: 		Math lib: mkl
08/04/2016 09:18:56: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
08/04/2016 09:18:56: 		CUB_PATH: c:\src\cub-1.4.1
08/04/2016 09:18:56: 		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
08/04/2016 09:18:56: 		Build Branch: HEAD
08/04/2016 09:18:56: 		Build SHA1: 0f61695dfc335f2406284d335678f57c215e6e9c
08/04/2016 09:18:56: 		Built by svcphil on Philly-Pool1
08/04/2016 09:18:56: 		Build Path: c:\jenkins\workspace\CNTK-Build-Windows@2\Source\CNTK\
08/04/2016 09:18:56: -------------------------------------------------------------------
08/04/2016 09:18:59: -------------------------------------------------------------------
08/04/2016 09:18:59: GPU info:

08/04/2016 09:18:59: 		Device[0]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3072 MB
08/04/2016 09:18:59: 		Device[1]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3072 MB
08/04/2016 09:18:59: 		Device[2]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3072 MB
08/04/2016 09:18:59: 		Device[3]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3072 MB
08/04/2016 09:18:59: -------------------------------------------------------------------

08/04/2016 09:18:59: Running on DPHAIM-24 at 2016/08/04 09:18:59
08/04/2016 09:18:59: Command line: 
C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\release\cntk.exe  configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Config/Multigpu.cntk  currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data  RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091805.204544\Examples\Other\Simple2d_MultiGpu@release_cpu  DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data  ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Config  OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091805.204544\Examples\Other\Simple2d_MultiGpu@release_cpu  DeviceId=-1  timestamping=true  Multigpu_Demo_Train=[SGD=[maxEpochs=3]]



08/04/2016 09:18:59: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
08/04/2016 09:18:59: RootDir = ".."
ConfigDir = "$RootDir$/Config"
DataDir = "$RootDir$/Data"
OutputDir = "$RootDir$/Output"
ModelDir = "$OutputDir$/Models"
deviceId = "auto"
command = Multigpu_Demo_Train:Multigpu_Demo_Test
precision = "float"
traceLevel = 1
modelPath = "$ModelDir$/multigpu.dnn"
outputNodeNames = ScaledLogLikelihood
parallelTrain = true
Multigpu_Demo_Train=[
    action = "train"
    SimpleNetworkBuilder = [
        layerSizes = 2:50*2:2
        trainingCriterion = "CrossEntropyWithSoftmax"
        evalCriterion = "ErrorPrediction"
        layerTypes = "Sigmoid"
        initValueScale = 1.0
        applyMeanVarNorm = true
        uniformInit = true
        needPrior = true
    ]
    SGD = [
        epochSize = 0 
        minibatchSize = 25  
        learningRatesPerMB = 0.5:0.2*20:0.1
        momentumPerMB = 0.9
        dropoutRate = 0.0
        maxEpochs = 10
        parallelTrain = [
            parallelizationMethod = "DataParallelSGD"
            parallelizationStartEpoch = 2
            dataParallelSGD = [
                gradientBits = 1
            ]
        ]
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataDir$/SimpleDataTrain_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
]
Multigpu_Demo_Test=[
    action = "test"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataDir$/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
]
Multigpu_Demo_Output=[
    action = "write"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataDir$/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
outputPath = "$OutputDir$/MultigpuOutput"    
]
currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data
RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091805.204544\Examples\Other\Simple2d_MultiGpu@release_cpu
DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data
ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Config
OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091805.204544\Examples\Other\Simple2d_MultiGpu@release_cpu
DeviceId=-1
timestamping=true
Multigpu_Demo_Train=[SGD=[maxEpochs=3]]

08/04/2016 09:18:59: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<

08/04/2016 09:18:59: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
08/04/2016 09:18:59: RootDir = ".."
ConfigDir = "../Config"
DataDir = "../Data"
OutputDir = "../Output"
ModelDir = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091805.204544\Examples\Other\Simple2d_MultiGpu@release_cpu/Models"
deviceId = "auto"
command = Multigpu_Demo_Train:Multigpu_Demo_Test
precision = "float"
traceLevel = 1
modelPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091805.204544\Examples\Other\Simple2d_MultiGpu@release_cpu/Models/multigpu.dnn"
outputNodeNames = ScaledLogLikelihood
parallelTrain = true
Multigpu_Demo_Train=[
    action = "train"
    SimpleNetworkBuilder = [
        layerSizes = 2:50*2:2
        trainingCriterion = "CrossEntropyWithSoftmax"
        evalCriterion = "ErrorPrediction"
        layerTypes = "Sigmoid"
        initValueScale = 1.0
        applyMeanVarNorm = true
        uniformInit = true
        needPrior = true
    ]
    SGD = [
        epochSize = 0 
        minibatchSize = 25  
        learningRatesPerMB = 0.5:0.2*20:0.1
        momentumPerMB = 0.9
        dropoutRate = 0.0
        maxEpochs = 10
        parallelTrain = [
            parallelizationMethod = "DataParallelSGD"
            parallelizationStartEpoch = 2
            dataParallelSGD = [
                gradientBits = 1
            ]
        ]
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleDataTrain_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
]
Multigpu_Demo_Test=[
    action = "test"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
]
Multigpu_Demo_Output=[
    action = "write"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
outputPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091805.204544\Examples\Other\Simple2d_MultiGpu@release_cpu/MultigpuOutput"    
]
currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data
RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091805.204544\Examples\Other\Simple2d_MultiGpu@release_cpu
DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data
ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Config
OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091805.204544\Examples\Other\Simple2d_MultiGpu@release_cpu
DeviceId=-1
timestamping=true
Multigpu_Demo_Train=[SGD=[maxEpochs=3]]

08/04/2016 09:18:59: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<

08/04/2016 09:18:59: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
configparameters: Multigpu.cntk:command=Multigpu_Demo_Train:Multigpu_Demo_Test
configparameters: Multigpu.cntk:ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Config
configparameters: Multigpu.cntk:currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data
configparameters: Multigpu.cntk:DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data
configparameters: Multigpu.cntk:deviceId=-1
configparameters: Multigpu.cntk:ModelDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091805.204544\Examples\Other\Simple2d_MultiGpu@release_cpu/Models
configparameters: Multigpu.cntk:modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091805.204544\Examples\Other\Simple2d_MultiGpu@release_cpu/Models/multigpu.dnn
configparameters: Multigpu.cntk:Multigpu_Demo_Output=[
    action = "write"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
outputPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091805.204544\Examples\Other\Simple2d_MultiGpu@release_cpu/MultigpuOutput"    
]

configparameters: Multigpu.cntk:Multigpu_Demo_Test=[
    action = "test"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
]

configparameters: Multigpu.cntk:Multigpu_Demo_Train=[
    action = "train"
    SimpleNetworkBuilder = [
        layerSizes = 2:50*2:2
        trainingCriterion = "CrossEntropyWithSoftmax"
        evalCriterion = "ErrorPrediction"
        layerTypes = "Sigmoid"
        initValueScale = 1.0
        applyMeanVarNorm = true
        uniformInit = true
        needPrior = true
    ]
    SGD = [
        epochSize = 0 
        minibatchSize = 25  
        learningRatesPerMB = 0.5:0.2*20:0.1
        momentumPerMB = 0.9
        dropoutRate = 0.0
        maxEpochs = 10
        parallelTrain = [
            parallelizationMethod = "DataParallelSGD"
            parallelizationStartEpoch = 2
            dataParallelSGD = [
                gradientBits = 1
            ]
        ]
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleDataTrain_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
] [SGD=[maxEpochs=3]]

configparameters: Multigpu.cntk:OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091805.204544\Examples\Other\Simple2d_MultiGpu@release_cpu
configparameters: Multigpu.cntk:outputNodeNames=ScaledLogLikelihood
configparameters: Multigpu.cntk:parallelTrain=true
configparameters: Multigpu.cntk:precision=float
configparameters: Multigpu.cntk:RootDir=..
configparameters: Multigpu.cntk:RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091805.204544\Examples\Other\Simple2d_MultiGpu@release_cpu
configparameters: Multigpu.cntk:timestamping=true
configparameters: Multigpu.cntk:traceLevel=1
08/04/2016 09:18:59: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
08/04/2016 09:18:59: Commands: Multigpu_Demo_Train Multigpu_Demo_Test
08/04/2016 09:18:59: Precision = "float"
08/04/2016 09:18:59: CNTKModelPath: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091805.204544\Examples\Other\Simple2d_MultiGpu@release_cpu/Models/multigpu.dnn
08/04/2016 09:18:59: CNTKCommandTrainInfo: Multigpu_Demo_Train : 3
08/04/2016 09:18:59: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 3

08/04/2016 09:18:59: ##############################################################################
08/04/2016 09:18:59: #                                                                            #
08/04/2016 09:18:59: # Action "train"                                                             #
08/04/2016 09:18:59: #                                                                            #
08/04/2016 09:18:59: ##############################################################################

08/04/2016 09:18:59: CNTKCommandTrainBegin: Multigpu_Demo_Train
SimpleNetworkBuilder Using CPU

08/04/2016 09:18:59: Creating virgin network.

Post-processing network...

7 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	EvalErrorPrediction = ErrorPrediction()
	InvStdOfFeatures = InvStdDev()
	MeanOfFeatures = Mean()
	PosteriorProb = Softmax()
	Prior = Mean()
	ScaledLogLikelihood = Minus()

Validating network. 25 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [2 x *]
Validating --> W2 = LearnableParameter() :  -> [2 x 50]
Validating --> W1 = LearnableParameter() :  -> [50 x 50]
Validating --> W0 = LearnableParameter() :  -> [50 x 2]
Validating --> features = InputValue() :  -> [2 x *]
Validating --> MeanOfFeatures = Mean (features) : [2 x *] -> [2]
Validating --> InvStdOfFeatures = InvStdDev (features) : [2 x *] -> [2]
Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [2 x *], [2], [2] -> [2 x *]
Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [50 x 2], [2 x *] -> [50 x *]
Validating --> B0 = LearnableParameter() :  -> [50 x 1]
Validating --> W0*features+B0 = Plus (W0*features, B0) : [50 x *], [50 x 1] -> [50 x 1 x *]
Validating --> H1 = Sigmoid (W0*features+B0) : [50 x 1 x *] -> [50 x 1 x *]
Validating --> W1*H1 = Times (W1, H1) : [50 x 50], [50 x 1 x *] -> [50 x 1 x *]
Validating --> B1 = LearnableParameter() :  -> [50 x 1]
Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [50 x 1 x *], [50 x 1] -> [50 x 1 x *]
Validating --> H2 = Sigmoid (W1*H1+B1) : [50 x 1 x *] -> [50 x 1 x *]
Validating --> W2*H1 = Times (W2, H2) : [2 x 50], [50 x 1 x *] -> [2 x 1 x *]
Validating --> B2 = LearnableParameter() :  -> [2 x 1]
Validating --> HLast = Plus (W2*H1, B2) : [2 x 1 x *], [2 x 1] -> [2 x 1 x *]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [2 x *], [2 x 1 x *] -> [1]
Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [2 x *], [2 x 1 x *] -> [1]
Validating --> PosteriorProb = Softmax (HLast) : [2 x 1 x *] -> [2 x 1 x *]
Validating --> Prior = Mean (labels) : [2 x *] -> [2]
Validating --> LogOfPrior = Log (Prior) : [2] -> [2]
Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [2 x 1 x *], [2] -> [2 x 1 x *]

Validating network. 17 nodes to process in pass 2.


Validating network, final pass.



12 out of 25 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

08/04/2016 09:18:59: Created model with 25 nodes on CPU.

08/04/2016 09:18:59: Training criterion node(s):
08/04/2016 09:18:59: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax

08/04/2016 09:18:59: Evaluation criterion node(s):

08/04/2016 09:18:59: 	EvalErrorPrediction = ErrorPrediction


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

0000000000000000: {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[2]] [LogOfPrior Gradient[2]] [MVNormalizedFeatures Gradient[2 x *]] [MeanOfFeatures Gradient[2]] [PosteriorProb Gradient[2 x 1 x *]] [PosteriorProb Value[2 x 1 x *]] [Prior Gradient[2]] [ScaledLogLikelihood Gradient[2 x 1 x *]] [features Gradient[2 x *]] [labels Gradient[2 x *]] }
0000001CE2E68270: {[W1 Value[50 x 50]] }
0000001CE2E683B0: {[features Value[2 x *]] }
0000001CE2E684F0: {[MeanOfFeatures Value[2]] }
0000001CE2E68810: {[B1 Value[50 x 1]] }
0000001CE2E689F0: {[W0 Value[50 x 2]] }
0000001CE2E68A90: {[B0 Value[50 x 1]] }
0000001CE2E68C70: {[InvStdOfFeatures Value[2]] }
0000001CFCC4A890: {[HLast Value[2 x 1 x *]] [W2 Gradient[2 x 50]] }
0000001CFCC4AED0: {[labels Value[2 x *]] }
0000001CFCC4B1F0: {[B2 Value[2 x 1]] }
0000001CFCC4B290: {[MVNormalizedFeatures Value[2 x *]] }
0000001CFCC4B330: {[W0 Gradient[50 x 2]] [W0*features+B0 Value[50 x 1 x *]] }
0000001CFCC4B470: {[H1 Value[50 x 1 x *]] [W0*features Gradient[50 x *]] }
0000001CFCC4B510: {[W1 Gradient[50 x 50]] [W1*H1+B1 Value[50 x 1 x *]] }
0000001CFCC4B5B0: {[W0*features+B0 Gradient[50 x 1 x *]] [W1*H1 Value[50 x 1 x *]] }
0000001CFCC4B790: {[CrossEntropyWithSoftmax Value[1]] }
0000001CFCC4B830: {[LogOfPrior Value[2]] }
0000001CFCC4B8D0: {[EvalErrorPrediction Value[1]] }
0000001CFCC4B970: {[B0 Gradient[50 x 1]] [H1 Gradient[50 x 1 x *]] [W1*H1+B1 Gradient[50 x 1 x *]] [W2*H1 Value[2 x 1 x *]] }
0000001CFCC4BAB0: {[CrossEntropyWithSoftmax Gradient[1]] }
0000001CFCC4BB50: {[W2*H1 Gradient[2 x 1 x *]] }
0000001CFCC4BDD0: {[H2 Value[50 x 1 x *]] [W1*H1 Gradient[50 x 1 x *]] }
0000001CFCC4BE70: {[Prior Value[2]] }
0000001CFCC4C190: {[B2 Gradient[2 x 1]] }
0000001CFCC4C230: {[B1 Gradient[50 x 1]] [H2 Gradient[50 x 1 x *]] [HLast Gradient[2 x 1 x *]] }
0000001CFCC4C5F0: {[ScaledLogLikelihood Value[2 x 1 x *]] }
0000001CFCC4C690: {[W2 Value[2 x 50]] }
0000001CFCC4C730: {[W0*features Value[50 x *]] }


08/04/2016 09:18:59: Precomputing --> 3 PreCompute nodes found.

08/04/2016 09:18:59: 	MeanOfFeatures = Mean()
08/04/2016 09:18:59: 	InvStdOfFeatures = InvStdDev()
08/04/2016 09:18:59: 	Prior = Mean()
BlockRandomizer::StartEpoch: epoch 0: frames [0..10000] (first sequence at sample 0), data subset 0 of 1

08/04/2016 09:18:59: Precomputing --> Completed.


08/04/2016 09:18:59: Starting Epoch 1: learning rate per sample = 0.020000  effective momentum = 0.900000  momentum as time constant = 237.3 samples
BlockRandomizer::StartEpoch: epoch 0: frames [0..10000] (first sequence at sample 0), data subset 0 of 1

08/04/2016 09:18:59: Starting minibatch loop.
08/04/2016 09:18:59:  Epoch[ 1 of 3]-Minibatch[   1-  10]: CrossEntropyWithSoftmax = 0.72158575 * 250; EvalErrorPrediction = 0.54400000 * 250; time = 0.0328s; samplesPerSecond = 7617.1
08/04/2016 09:18:59:  Epoch[ 1 of 3]-Minibatch[  11-  20]: CrossEntropyWithSoftmax = 0.72945282 * 250; EvalErrorPrediction = 0.50400000 * 250; time = 0.0266s; samplesPerSecond = 9383.7
08/04/2016 09:18:59:  Epoch[ 1 of 3]-Minibatch[  21-  30]: CrossEntropyWithSoftmax = 0.70152979 * 250; EvalErrorPrediction = 0.45600000 * 250; time = 0.0258s; samplesPerSecond = 9678.7
08/04/2016 09:18:59:  Epoch[ 1 of 3]-Minibatch[  31-  40]: CrossEntropyWithSoftmax = 0.74128882 * 250; EvalErrorPrediction = 0.51600000 * 250; time = 0.0260s; samplesPerSecond = 9633.5
08/04/2016 09:18:59:  Epoch[ 1 of 3]-Minibatch[  41-  50]: CrossEntropyWithSoftmax = 0.74553027 * 250; EvalErrorPrediction = 0.58000000 * 250; time = 0.0267s; samplesPerSecond = 9370.0
08/04/2016 09:18:59:  Epoch[ 1 of 3]-Minibatch[  51-  60]: CrossEntropyWithSoftmax = 0.71826636 * 250; EvalErrorPrediction = 0.46000000 * 250; time = 0.0276s; samplesPerSecond = 9072.4
08/04/2016 09:18:59:  Epoch[ 1 of 3]-Minibatch[  61-  70]: CrossEntropyWithSoftmax = 0.70235205 * 250; EvalErrorPrediction = 0.48800000 * 250; time = 0.0267s; samplesPerSecond = 9356.3
08/04/2016 09:18:59:  Epoch[ 1 of 3]-Minibatch[  71-  80]: CrossEntropyWithSoftmax = 0.73039795 * 250; EvalErrorPrediction = 0.54000000 * 250; time = 0.0272s; samplesPerSecond = 9193.9
08/04/2016 09:18:59:  Epoch[ 1 of 3]-Minibatch[  81-  90]: CrossEntropyWithSoftmax = 0.72226611 * 250; EvalErrorPrediction = 0.50000000 * 250; time = 0.0271s; samplesPerSecond = 9216.6
08/04/2016 09:18:59:  Epoch[ 1 of 3]-Minibatch[  91- 100]: CrossEntropyWithSoftmax = 0.71367187 * 250; EvalErrorPrediction = 0.48400000 * 250; time = 0.0272s; samplesPerSecond = 9199.0
08/04/2016 09:18:59:  Epoch[ 1 of 3]-Minibatch[ 101- 110]: CrossEntropyWithSoftmax = 0.70665674 * 250; EvalErrorPrediction = 0.47600000 * 250; time = 0.0278s; samplesPerSecond = 8991.2
08/04/2016 09:18:59:  Epoch[ 1 of 3]-Minibatch[ 111- 120]: CrossEntropyWithSoftmax = 0.74862354 * 250; EvalErrorPrediction = 0.53200000 * 250; time = 0.0267s; samplesPerSecond = 9359.4
08/04/2016 09:18:59:  Epoch[ 1 of 3]-Minibatch[ 121- 130]: CrossEntropyWithSoftmax = 0.86821289 * 250; EvalErrorPrediction = 0.53200000 * 250; time = 0.0272s; samplesPerSecond = 9204.0
08/04/2016 09:18:59:  Epoch[ 1 of 3]-Minibatch[ 131- 140]: CrossEntropyWithSoftmax = 0.82599316 * 250; EvalErrorPrediction = 0.55600000 * 250; time = 0.0263s; samplesPerSecond = 9523.4
08/04/2016 09:19:00:  Epoch[ 1 of 3]-Minibatch[ 141- 150]: CrossEntropyWithSoftmax = 0.72434082 * 250; EvalErrorPrediction = 0.52400000 * 250; time = 0.0263s; samplesPerSecond = 9509.0
08/04/2016 09:19:00:  Epoch[ 1 of 3]-Minibatch[ 151- 160]: CrossEntropyWithSoftmax = 0.72374707 * 250; EvalErrorPrediction = 0.50400000 * 250; time = 0.0271s; samplesPerSecond = 9218.6
08/04/2016 09:19:00:  Epoch[ 1 of 3]-Minibatch[ 161- 170]: CrossEntropyWithSoftmax = 0.70148535 * 250; EvalErrorPrediction = 0.53600000 * 250; time = 0.0274s; samplesPerSecond = 9110.1
08/04/2016 09:19:00:  Epoch[ 1 of 3]-Minibatch[ 171- 180]: CrossEntropyWithSoftmax = 0.69553027 * 250; EvalErrorPrediction = 0.49600000 * 250; time = 0.0266s; samplesPerSecond = 9389.7
08/04/2016 09:19:00:  Epoch[ 1 of 3]-Minibatch[ 181- 190]: CrossEntropyWithSoftmax = 0.69299316 * 250; EvalErrorPrediction = 0.47200000 * 250; time = 0.0271s; samplesPerSecond = 9222.7
08/04/2016 09:19:00:  Epoch[ 1 of 3]-Minibatch[ 191- 200]: CrossEntropyWithSoftmax = 0.72501367 * 250; EvalErrorPrediction = 0.50000000 * 250; time = 0.0267s; samplesPerSecond = 9358.0
08/04/2016 09:19:00:  Epoch[ 1 of 3]-Minibatch[ 201- 210]: CrossEntropyWithSoftmax = 0.73040039 * 250; EvalErrorPrediction = 0.51600000 * 250; time = 0.0266s; samplesPerSecond = 9399.9
08/04/2016 09:19:00:  Epoch[ 1 of 3]-Minibatch[ 211- 220]: CrossEntropyWithSoftmax = 0.69652344 * 250; EvalErrorPrediction = 0.49200000 * 250; time = 0.0269s; samplesPerSecond = 9309.9
08/04/2016 09:19:00:  Epoch[ 1 of 3]-Minibatch[ 221- 230]: CrossEntropyWithSoftmax = 0.70915527 * 250; EvalErrorPrediction = 0.52400000 * 250; time = 0.0264s; samplesPerSecond = 9483.7
08/04/2016 09:19:00:  Epoch[ 1 of 3]-Minibatch[ 231- 240]: CrossEntropyWithSoftmax = 0.70665039 * 250; EvalErrorPrediction = 0.53600000 * 250; time = 0.0259s; samplesPerSecond = 9647.3
08/04/2016 09:19:00:  Epoch[ 1 of 3]-Minibatch[ 241- 250]: CrossEntropyWithSoftmax = 0.70112695 * 250; EvalErrorPrediction = 0.47200000 * 250; time = 0.0257s; samplesPerSecond = 9712.5
08/04/2016 09:19:00:  Epoch[ 1 of 3]-Minibatch[ 251- 260]: CrossEntropyWithSoftmax = 0.69939258 * 250; EvalErrorPrediction = 0.50000000 * 250; time = 0.0257s; samplesPerSecond = 9727.6
08/04/2016 09:19:00:  Epoch[ 1 of 3]-Minibatch[ 261- 270]: CrossEntropyWithSoftmax = 0.71169336 * 250; EvalErrorPrediction = 0.57200000 * 250; time = 0.0257s; samplesPerSecond = 9723.1
08/04/2016 09:19:00:  Epoch[ 1 of 3]-Minibatch[ 271- 280]: CrossEntropyWithSoftmax = 0.70169922 * 250; EvalErrorPrediction = 0.48400000 * 250; time = 0.0253s; samplesPerSecond = 9900.6
08/04/2016 09:19:00:  Epoch[ 1 of 3]-Minibatch[ 281- 290]: CrossEntropyWithSoftmax = 0.69898828 * 250; EvalErrorPrediction = 0.48000000 * 250; time = 0.0257s; samplesPerSecond = 9739.0
08/04/2016 09:19:00:  Epoch[ 1 of 3]-Minibatch[ 291- 300]: CrossEntropyWithSoftmax = 0.70277734 * 250; EvalErrorPrediction = 0.53200000 * 250; time = 0.0264s; samplesPerSecond = 9465.4
08/04/2016 09:19:00:  Epoch[ 1 of 3]-Minibatch[ 301- 310]: CrossEntropyWithSoftmax = 0.69721484 * 250; EvalErrorPrediction = 0.52800000 * 250; time = 0.0264s; samplesPerSecond = 9468.3
08/04/2016 09:19:00:  Epoch[ 1 of 3]-Minibatch[ 311- 320]: CrossEntropyWithSoftmax = 0.69657227 * 250; EvalErrorPrediction = 0.46800000 * 250; time = 0.0250s; samplesPerSecond = 10014.0
08/04/2016 09:19:00:  Epoch[ 1 of 3]-Minibatch[ 321- 330]: CrossEntropyWithSoftmax = 0.68540820 * 250; EvalErrorPrediction = 0.39600000 * 250; time = 0.0257s; samplesPerSecond = 9730.7
08/04/2016 09:19:00:  Epoch[ 1 of 3]-Minibatch[ 331- 340]: CrossEntropyWithSoftmax = 0.67916602 * 250; EvalErrorPrediction = 0.42800000 * 250; time = 0.0256s; samplesPerSecond = 9783.2
08/04/2016 09:19:00:  Epoch[ 1 of 3]-Minibatch[ 341- 350]: CrossEntropyWithSoftmax = 0.67157227 * 250; EvalErrorPrediction = 0.50000000 * 250; time = 0.0254s; samplesPerSecond = 9836.3
08/04/2016 09:19:00:  Epoch[ 1 of 3]-Minibatch[ 351- 360]: CrossEntropyWithSoftmax = 0.68412500 * 250; EvalErrorPrediction = 0.44800000 * 250; time = 0.0251s; samplesPerSecond = 9972.9
08/04/2016 09:19:00:  Epoch[ 1 of 3]-Minibatch[ 361- 370]: CrossEntropyWithSoftmax = 0.66153906 * 250; EvalErrorPrediction = 0.45200000 * 250; time = 0.0255s; samplesPerSecond = 9787.4
08/04/2016 09:19:00:  Epoch[ 1 of 3]-Minibatch[ 371- 380]: CrossEntropyWithSoftmax = 0.63971680 * 250; EvalErrorPrediction = 0.30400000 * 250; time = 0.0260s; samplesPerSecond = 9624.3
08/04/2016 09:19:00:  Epoch[ 1 of 3]-Minibatch[ 381- 390]: CrossEntropyWithSoftmax = 0.60428906 * 250; EvalErrorPrediction = 0.12000000 * 250; time = 0.0265s; samplesPerSecond = 9441.8
08/04/2016 09:19:00:  Epoch[ 1 of 3]-Minibatch[ 391- 400]: CrossEntropyWithSoftmax = 0.57421875 * 250; EvalErrorPrediction = 0.05200000 * 250; time = 0.0262s; samplesPerSecond = 9536.5
08/04/2016 09:19:00: Finished Epoch[ 1 of 3]: [Training] CrossEntropyWithSoftmax = 0.70727920 * 10000; EvalErrorPrediction = 0.47510000 * 10000; totalSamplesSeen = 10000; learningRatePerSample = 0.02; epochTime=1.06396s
08/04/2016 09:19:00: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091805.204544\Examples\Other\Simple2d_MultiGpu@release_cpu/Models/multigpu.dnn.1'

08/04/2016 09:19:00: Starting Epoch 2: learning rate per sample = 0.008000  effective momentum = 0.900000  momentum as time constant = 237.3 samples
BlockRandomizer::StartEpoch: epoch 1: frames [10000..20000] (first sequence at sample 10000), data subset 0 of 1

08/04/2016 09:19:00: Starting minibatch loop, DataParallelSGD training (MyRank = 0, NumNodes = 1, NumGradientBits = 1).
08/04/2016 09:19:00:  Epoch[ 2 of 3]-Minibatch[   1-  10, 2.50%]: CrossEntropyWithSoftmax = 0.53046664 * 250; EvalErrorPrediction = 0.13200000 * 250; time = 0.0254s; samplesPerSecond = 9837.5
08/04/2016 09:19:00:  Epoch[ 2 of 3]-Minibatch[  11-  20, 5.00%]: CrossEntropyWithSoftmax = 0.49844130 * 250; EvalErrorPrediction = 0.05200000 * 250; time = 0.0260s; samplesPerSecond = 9621.7
08/04/2016 09:19:00:  Epoch[ 2 of 3]-Minibatch[  21-  30, 7.50%]: CrossEntropyWithSoftmax = 0.47153218 * 250; EvalErrorPrediction = 0.08400000 * 250; time = 0.0264s; samplesPerSecond = 9484.4
08/04/2016 09:19:00:  Epoch[ 2 of 3]-Minibatch[  31-  40, 10.00%]: CrossEntropyWithSoftmax = 0.42864325 * 250; EvalErrorPrediction = 0.06000000 * 250; time = 0.0252s; samplesPerSecond = 9938.0
08/04/2016 09:19:00:  Epoch[ 2 of 3]-Minibatch[  41-  50, 12.50%]: CrossEntropyWithSoftmax = 0.40965658 * 250; EvalErrorPrediction = 0.07600000 * 250; time = 0.0261s; samplesPerSecond = 9562.4
08/04/2016 09:19:00:  Epoch[ 2 of 3]-Minibatch[  51-  60, 15.00%]: CrossEntropyWithSoftmax = 0.39179274 * 250; EvalErrorPrediction = 0.11600000 * 250; time = 0.0260s; samplesPerSecond = 9600.2
08/04/2016 09:19:00:  Epoch[ 2 of 3]-Minibatch[  61-  70, 17.50%]: CrossEntropyWithSoftmax = 0.33910096 * 250; EvalErrorPrediction = 0.05200000 * 250; time = 0.0255s; samplesPerSecond = 9810.5
08/04/2016 09:19:00:  Epoch[ 2 of 3]-Minibatch[  71-  80, 20.00%]: CrossEntropyWithSoftmax = 0.32177630 * 250; EvalErrorPrediction = 0.10400000 * 250; time = 0.0253s; samplesPerSecond = 9861.9
08/04/2016 09:19:00:  Epoch[ 2 of 3]-Minibatch[  81-  90, 22.50%]: CrossEntropyWithSoftmax = 0.28735066 * 250; EvalErrorPrediction = 0.04400000 * 250; time = 0.0252s; samplesPerSecond = 9905.7
08/04/2016 09:19:00:  Epoch[ 2 of 3]-Minibatch[  91- 100, 25.00%]: CrossEntropyWithSoftmax = 0.29239140 * 250; EvalErrorPrediction = 0.12000000 * 250; time = 0.0261s; samplesPerSecond = 9578.5
08/04/2016 09:19:00:  Epoch[ 2 of 3]-Minibatch[ 101- 110, 27.50%]: CrossEntropyWithSoftmax = 0.26653939 * 250; EvalErrorPrediction = 0.06400000 * 250; time = 0.0251s; samplesPerSecond = 9940.4
08/04/2016 09:19:00:  Epoch[ 2 of 3]-Minibatch[ 111- 120, 30.00%]: CrossEntropyWithSoftmax = 0.22980795 * 250; EvalErrorPrediction = 0.06000000 * 250; time = 0.0253s; samplesPerSecond = 9864.7
08/04/2016 09:19:01:  Epoch[ 2 of 3]-Minibatch[ 121- 130, 32.50%]: CrossEntropyWithSoftmax = 0.25098451 * 250; EvalErrorPrediction = 0.06800000 * 250; time = 0.0260s; samplesPerSecond = 9602.8
08/04/2016 09:19:01:  Epoch[ 2 of 3]-Minibatch[ 131- 140, 35.00%]: CrossEntropyWithSoftmax = 0.26015480 * 250; EvalErrorPrediction = 0.11600000 * 250; time = 0.0255s; samplesPerSecond = 9787.8
08/04/2016 09:19:01:  Epoch[ 2 of 3]-Minibatch[ 141- 150, 37.50%]: CrossEntropyWithSoftmax = 0.25265353 * 250; EvalErrorPrediction = 0.08800000 * 250; time = 0.0252s; samplesPerSecond = 9930.9
08/04/2016 09:19:01:  Epoch[ 2 of 3]-Minibatch[ 151- 160, 40.00%]: CrossEntropyWithSoftmax = 0.21230296 * 250; EvalErrorPrediction = 0.05200000 * 250; time = 0.0256s; samplesPerSecond = 9779.0
08/04/2016 09:19:01:  Epoch[ 2 of 3]-Minibatch[ 161- 170, 42.50%]: CrossEntropyWithSoftmax = 0.20249410 * 250; EvalErrorPrediction = 0.06800000 * 250; time = 0.0263s; samplesPerSecond = 9500.6
08/04/2016 09:19:01:  Epoch[ 2 of 3]-Minibatch[ 171- 180, 45.00%]: CrossEntropyWithSoftmax = 0.24834901 * 250; EvalErrorPrediction = 0.09200000 * 250; time = 0.0251s; samplesPerSecond = 9964.5
08/04/2016 09:19:01:  Epoch[ 2 of 3]-Minibatch[ 181- 190, 47.50%]: CrossEntropyWithSoftmax = 0.20586503 * 250; EvalErrorPrediction = 0.08000000 * 250; time = 0.0255s; samplesPerSecond = 9794.3
08/04/2016 09:19:01:  Epoch[ 2 of 3]-Minibatch[ 191- 200, 50.00%]: CrossEntropyWithSoftmax = 0.18725905 * 250; EvalErrorPrediction = 0.06000000 * 250; time = 0.0256s; samplesPerSecond = 9780.1
08/04/2016 09:19:01:  Epoch[ 2 of 3]-Minibatch[ 201- 210, 52.50%]: CrossEntropyWithSoftmax = 0.20193213 * 250; EvalErrorPrediction = 0.07600000 * 250; time = 0.0250s; samplesPerSecond = 10019.6
08/04/2016 09:19:01:  Epoch[ 2 of 3]-Minibatch[ 211- 220, 55.00%]: CrossEntropyWithSoftmax = 0.16991198 * 250; EvalErrorPrediction = 0.04800000 * 250; time = 0.0260s; samplesPerSecond = 9629.5
08/04/2016 09:19:01:  Epoch[ 2 of 3]-Minibatch[ 221- 230, 57.50%]: CrossEntropyWithSoftmax = 0.18769670 * 250; EvalErrorPrediction = 0.09200000 * 250; time = 0.0258s; samplesPerSecond = 9686.2
08/04/2016 09:19:01:  Epoch[ 2 of 3]-Minibatch[ 231- 240, 60.00%]: CrossEntropyWithSoftmax = 0.17102696 * 250; EvalErrorPrediction = 0.07200000 * 250; time = 0.0260s; samplesPerSecond = 9605.8
08/04/2016 09:19:01:  Epoch[ 2 of 3]-Minibatch[ 241- 250, 62.50%]: CrossEntropyWithSoftmax = 0.17143642 * 250; EvalErrorPrediction = 0.06400000 * 250; time = 0.0261s; samplesPerSecond = 9578.5
08/04/2016 09:19:01:  Epoch[ 2 of 3]-Minibatch[ 251- 260, 65.00%]: CrossEntropyWithSoftmax = 0.16847907 * 250; EvalErrorPrediction = 0.05600000 * 250; time = 0.0261s; samplesPerSecond = 9563.5
08/04/2016 09:19:01:  Epoch[ 2 of 3]-Minibatch[ 261- 270, 67.50%]: CrossEntropyWithSoftmax = 0.17876072 * 250; EvalErrorPrediction = 0.07200000 * 250; time = 0.0253s; samplesPerSecond = 9881.0
08/04/2016 09:19:01:  Epoch[ 2 of 3]-Minibatch[ 271- 280, 70.00%]: CrossEntropyWithSoftmax = 0.19502651 * 250; EvalErrorPrediction = 0.09200000 * 250; time = 0.0255s; samplesPerSecond = 9815.9
08/04/2016 09:19:01:  Epoch[ 2 of 3]-Minibatch[ 281- 290, 72.50%]: CrossEntropyWithSoftmax = 0.18565409 * 250; EvalErrorPrediction = 0.08800000 * 250; time = 0.0254s; samplesPerSecond = 9842.5
08/04/2016 09:19:01:  Epoch[ 2 of 3]-Minibatch[ 291- 300, 75.00%]: CrossEntropyWithSoftmax = 0.16889789 * 250; EvalErrorPrediction = 0.07200000 * 250; time = 0.0258s; samplesPerSecond = 9705.0
08/04/2016 09:19:01:  Epoch[ 2 of 3]-Minibatch[ 301- 310, 77.50%]: CrossEntropyWithSoftmax = 0.19313747 * 250; EvalErrorPrediction = 0.09600000 * 250; time = 0.0256s; samplesPerSecond = 9759.5
08/04/2016 09:19:01:  Epoch[ 2 of 3]-Minibatch[ 311- 320, 80.00%]: CrossEntropyWithSoftmax = 0.14705539 * 250; EvalErrorPrediction = 0.06000000 * 250; time = 0.0254s; samplesPerSecond = 9831.3
08/04/2016 09:19:01:  Epoch[ 2 of 3]-Minibatch[ 321- 330, 82.50%]: CrossEntropyWithSoftmax = 0.16181331 * 250; EvalErrorPrediction = 0.07200000 * 250; time = 0.0250s; samplesPerSecond = 10008.4
08/04/2016 09:19:01:  Epoch[ 2 of 3]-Minibatch[ 331- 340, 85.00%]: CrossEntropyWithSoftmax = 0.15613836 * 250; EvalErrorPrediction = 0.06400000 * 250; time = 0.0254s; samplesPerSecond = 9848.7
08/04/2016 09:19:01:  Epoch[ 2 of 3]-Minibatch[ 341- 350, 87.50%]: CrossEntropyWithSoftmax = 0.19836349 * 250; EvalErrorPrediction = 0.10800000 * 250; time = 0.0256s; samplesPerSecond = 9773.6
08/04/2016 09:19:01:  Epoch[ 2 of 3]-Minibatch[ 351- 360, 90.00%]: CrossEntropyWithSoftmax = 0.13550492 * 250; EvalErrorPrediction = 0.06000000 * 250; time = 0.0256s; samplesPerSecond = 9754.6
08/04/2016 09:19:01:  Epoch[ 2 of 3]-Minibatch[ 361- 370, 92.50%]: CrossEntropyWithSoftmax = 0.18200751 * 250; EvalErrorPrediction = 0.07600000 * 250; time = 0.0260s; samplesPerSecond = 9606.5
08/04/2016 09:19:01:  Epoch[ 2 of 3]-Minibatch[ 371- 380, 95.00%]: CrossEntropyWithSoftmax = 0.15447227 * 250; EvalErrorPrediction = 0.07600000 * 250; time = 0.0261s; samplesPerSecond = 9565.7
08/04/2016 09:19:01:  Epoch[ 2 of 3]-Minibatch[ 381- 390, 97.50%]: CrossEntropyWithSoftmax = 0.13199888 * 250; EvalErrorPrediction = 0.04800000 * 250; time = 0.0254s; samplesPerSecond = 9826.7
08/04/2016 09:19:01:  Epoch[ 2 of 3]-Minibatch[ 391- 400, 100.00%]: CrossEntropyWithSoftmax = 0.14029080 * 250; EvalErrorPrediction = 0.06000000 * 250; time = 0.0254s; samplesPerSecond = 9833.6
08/04/2016 09:19:01: Finished Epoch[ 2 of 3]: [Training] CrossEntropyWithSoftmax = 0.24217918 * 10000; EvalErrorPrediction = 0.07600000 * 10000; totalSamplesSeen = 20000; learningRatePerSample = 0.0080000004; epochTime=1.02707s
08/04/2016 09:19:01: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091805.204544\Examples\Other\Simple2d_MultiGpu@release_cpu/Models/multigpu.dnn.2'

08/04/2016 09:19:01: Starting Epoch 3: learning rate per sample = 0.008000  effective momentum = 0.900000  momentum as time constant = 237.3 samples
BlockRandomizer::StartEpoch: epoch 2: frames [20000..30000] (first sequence at sample 20000), data subset 0 of 1

08/04/2016 09:19:01: Starting minibatch loop, DataParallelSGD training (MyRank = 0, NumNodes = 1, NumGradientBits = 1).
08/04/2016 09:19:01:  Epoch[ 3 of 3]-Minibatch[   1-  10, 2.50%]: CrossEntropyWithSoftmax = 0.18067945 * 250; EvalErrorPrediction = 0.09200000 * 250; time = 0.0261s; samplesPerSecond = 9584.8
08/04/2016 09:19:01:  Epoch[ 3 of 3]-Minibatch[  11-  20, 5.00%]: CrossEntropyWithSoftmax = 0.16272764 * 250; EvalErrorPrediction = 0.08000000 * 250; time = 0.0247s; samplesPerSecond = 10101.4
08/04/2016 09:19:01:  Epoch[ 3 of 3]-Minibatch[  21-  30, 7.50%]: CrossEntropyWithSoftmax = 0.11622227 * 250; EvalErrorPrediction = 0.06000000 * 250; time = 0.0253s; samplesPerSecond = 9895.5
08/04/2016 09:19:01:  Epoch[ 3 of 3]-Minibatch[  31-  40, 10.00%]: CrossEntropyWithSoftmax = 0.16785906 * 250; EvalErrorPrediction = 0.08000000 * 250; time = 0.0261s; samplesPerSecond = 9594.4
08/04/2016 09:19:01:  Epoch[ 3 of 3]-Minibatch[  41-  50, 12.50%]: CrossEntropyWithSoftmax = 0.13883515 * 250; EvalErrorPrediction = 0.06400000 * 250; time = 0.0247s; samplesPerSecond = 10102.2
08/04/2016 09:19:01:  Epoch[ 3 of 3]-Minibatch[  51-  60, 15.00%]: CrossEntropyWithSoftmax = 0.18701463 * 250; EvalErrorPrediction = 0.09600000 * 250; time = 0.0251s; samplesPerSecond = 9968.5
08/04/2016 09:19:01:  Epoch[ 3 of 3]-Minibatch[  61-  70, 17.50%]: CrossEntropyWithSoftmax = 0.14643623 * 250; EvalErrorPrediction = 0.06800000 * 250; time = 0.0256s; samplesPerSecond = 9761.0
08/04/2016 09:19:01:  Epoch[ 3 of 3]-Minibatch[  71-  80, 20.00%]: CrossEntropyWithSoftmax = 0.20157342 * 250; EvalErrorPrediction = 0.08000000 * 250; time = 0.0252s; samplesPerSecond = 9906.5
08/04/2016 09:19:01:  Epoch[ 3 of 3]-Minibatch[  81-  90, 22.50%]: CrossEntropyWithSoftmax = 0.13585611 * 250; EvalErrorPrediction = 0.06800000 * 250; time = 0.0252s; samplesPerSecond = 9923.4
08/04/2016 09:19:01:  Epoch[ 3 of 3]-Minibatch[  91- 100, 25.00%]: CrossEntropyWithSoftmax = 0.16805095 * 250; EvalErrorPrediction = 0.08400000 * 250; time = 0.0257s; samplesPerSecond = 9718.6
08/04/2016 09:19:01:  Epoch[ 3 of 3]-Minibatch[ 101- 110, 27.50%]: CrossEntropyWithSoftmax = 0.14819023 * 250; EvalErrorPrediction = 0.08000000 * 250; time = 0.0251s; samplesPerSecond = 9958.6
08/04/2016 09:19:02:  Epoch[ 3 of 3]-Minibatch[ 111- 120, 30.00%]: CrossEntropyWithSoftmax = 0.18859411 * 250; EvalErrorPrediction = 0.08400000 * 250; time = 0.0255s; samplesPerSecond = 9823.2
08/04/2016 09:19:02:  Epoch[ 3 of 3]-Minibatch[ 121- 130, 32.50%]: CrossEntropyWithSoftmax = 0.17085504 * 250; EvalErrorPrediction = 0.09200000 * 250; time = 0.0256s; samplesPerSecond = 9767.2
08/04/2016 09:19:02:  Epoch[ 3 of 3]-Minibatch[ 131- 140, 35.00%]: CrossEntropyWithSoftmax = 0.14583641 * 250; EvalErrorPrediction = 0.07200000 * 250; time = 0.0255s; samplesPerSecond = 9808.9
08/04/2016 09:19:02:  Epoch[ 3 of 3]-Minibatch[ 141- 150, 37.50%]: CrossEntropyWithSoftmax = 0.19282798 * 250; EvalErrorPrediction = 0.09200000 * 250; time = 0.0258s; samplesPerSecond = 9675.3
08/04/2016 09:19:02:  Epoch[ 3 of 3]-Minibatch[ 151- 160, 40.00%]: CrossEntropyWithSoftmax = 0.16918935 * 250; EvalErrorPrediction = 0.08000000 * 250; time = 0.0255s; samplesPerSecond = 9789.3
08/04/2016 09:19:02:  Epoch[ 3 of 3]-Minibatch[ 161- 170, 42.50%]: CrossEntropyWithSoftmax = 0.14369155 * 250; EvalErrorPrediction = 0.06800000 * 250; time = 0.0247s; samplesPerSecond = 10127.2
08/04/2016 09:19:02:  Epoch[ 3 of 3]-Minibatch[ 171- 180, 45.00%]: CrossEntropyWithSoftmax = 0.18267917 * 250; EvalErrorPrediction = 0.09600000 * 250; time = 0.0249s; samplesPerSecond = 10030.9
08/04/2016 09:19:02:  Epoch[ 3 of 3]-Minibatch[ 181- 190, 47.50%]: CrossEntropyWithSoftmax = 0.17132546 * 250; EvalErrorPrediction = 0.07600000 * 250; time = 0.0262s; samplesPerSecond = 9549.3
08/04/2016 09:19:02:  Epoch[ 3 of 3]-Minibatch[ 191- 200, 50.00%]: CrossEntropyWithSoftmax = 0.17608363 * 250; EvalErrorPrediction = 0.07200000 * 250; time = 0.0247s; samplesPerSecond = 10140.8
08/04/2016 09:19:02:  Epoch[ 3 of 3]-Minibatch[ 201- 210, 52.50%]: CrossEntropyWithSoftmax = 0.17453689 * 250; EvalErrorPrediction = 0.08400000 * 250; time = 0.0259s; samplesPerSecond = 9649.5
08/04/2016 09:19:02:  Epoch[ 3 of 3]-Minibatch[ 211- 220, 55.00%]: CrossEntropyWithSoftmax = 0.13741015 * 250; EvalErrorPrediction = 0.05600000 * 250; time = 0.0257s; samplesPerSecond = 9731.4
08/04/2016 09:19:02:  Epoch[ 3 of 3]-Minibatch[ 221- 230, 57.50%]: CrossEntropyWithSoftmax = 0.15649810 * 250; EvalErrorPrediction = 0.06800000 * 250; time = 0.0260s; samplesPerSecond = 9611.7
08/04/2016 09:19:02:  Epoch[ 3 of 3]-Minibatch[ 231- 240, 60.00%]: CrossEntropyWithSoftmax = 0.18014433 * 250; EvalErrorPrediction = 0.09200000 * 250; time = 0.0258s; samplesPerSecond = 9694.1
08/04/2016 09:19:02:  Epoch[ 3 of 3]-Minibatch[ 241- 250, 62.50%]: CrossEntropyWithSoftmax = 0.15542777 * 250; EvalErrorPrediction = 0.07200000 * 250; time = 0.0255s; samplesPerSecond = 9811.6
08/04/2016 09:19:02:  Epoch[ 3 of 3]-Minibatch[ 251- 260, 65.00%]: CrossEntropyWithSoftmax = 0.19670080 * 250; EvalErrorPrediction = 0.08400000 * 250; time = 0.0259s; samplesPerSecond = 9665.9
08/04/2016 09:19:02:  Epoch[ 3 of 3]-Minibatch[ 261- 270, 67.50%]: CrossEntropyWithSoftmax = 0.16579946 * 250; EvalErrorPrediction = 0.07600000 * 250; time = 0.0255s; samplesPerSecond = 9807.0
08/04/2016 09:19:02:  Epoch[ 3 of 3]-Minibatch[ 271- 280, 70.00%]: CrossEntropyWithSoftmax = 0.13287001 * 250; EvalErrorPrediction = 0.06000000 * 250; time = 0.0257s; samplesPerSecond = 9717.8
08/04/2016 09:19:02:  Epoch[ 3 of 3]-Minibatch[ 281- 290, 72.50%]: CrossEntropyWithSoftmax = 0.14498562 * 250; EvalErrorPrediction = 0.06400000 * 250; time = 0.0253s; samplesPerSecond = 9896.3
08/04/2016 09:19:02:  Epoch[ 3 of 3]-Minibatch[ 291- 300, 75.00%]: CrossEntropyWithSoftmax = 0.13406230 * 250; EvalErrorPrediction = 0.06400000 * 250; time = 0.0256s; samplesPerSecond = 9754.2
08/04/2016 09:19:02:  Epoch[ 3 of 3]-Minibatch[ 301- 310, 77.50%]: CrossEntropyWithSoftmax = 0.13992312 * 250; EvalErrorPrediction = 0.05200000 * 250; time = 0.0264s; samplesPerSecond = 9466.1
08/04/2016 09:19:02:  Epoch[ 3 of 3]-Minibatch[ 311- 320, 80.00%]: CrossEntropyWithSoftmax = 0.13409074 * 250; EvalErrorPrediction = 0.06400000 * 250; time = 0.0252s; samplesPerSecond = 9904.1
08/04/2016 09:19:02:  Epoch[ 3 of 3]-Minibatch[ 321- 330, 82.50%]: CrossEntropyWithSoftmax = 0.15792100 * 250; EvalErrorPrediction = 0.07200000 * 250; time = 0.0255s; samplesPerSecond = 9817.4
08/04/2016 09:19:02:  Epoch[ 3 of 3]-Minibatch[ 331- 340, 85.00%]: CrossEntropyWithSoftmax = 0.14153950 * 250; EvalErrorPrediction = 0.07600000 * 250; time = 0.0252s; samplesPerSecond = 9914.3
08/04/2016 09:19:02:  Epoch[ 3 of 3]-Minibatch[ 341- 350, 87.50%]: CrossEntropyWithSoftmax = 0.18178703 * 250; EvalErrorPrediction = 0.09600000 * 250; time = 0.0254s; samplesPerSecond = 9855.3
08/04/2016 09:19:02:  Epoch[ 3 of 3]-Minibatch[ 351- 360, 90.00%]: CrossEntropyWithSoftmax = 0.13716375 * 250; EvalErrorPrediction = 0.06400000 * 250; time = 0.0258s; samplesPerSecond = 9672.3
08/04/2016 09:19:02:  Epoch[ 3 of 3]-Minibatch[ 361- 370, 92.50%]: CrossEntropyWithSoftmax = 0.14689745 * 250; EvalErrorPrediction = 0.07600000 * 250; time = 0.0246s; samplesPerSecond = 10177.1
08/04/2016 09:19:02:  Epoch[ 3 of 3]-Minibatch[ 371- 380, 95.00%]: CrossEntropyWithSoftmax = 0.14682445 * 250; EvalErrorPrediction = 0.06000000 * 250; time = 0.0255s; samplesPerSecond = 9794.7
08/04/2016 09:19:02:  Epoch[ 3 of 3]-Minibatch[ 381- 390, 97.50%]: CrossEntropyWithSoftmax = 0.13586331 * 250; EvalErrorPrediction = 0.06000000 * 250; time = 0.0251s; samplesPerSecond = 9942.7
08/04/2016 09:19:02:  Epoch[ 3 of 3]-Minibatch[ 391- 400, 100.00%]: CrossEntropyWithSoftmax = 0.17850424 * 250; EvalErrorPrediction = 0.08800000 * 250; time = 0.0258s; samplesPerSecond = 9671.6
08/04/2016 09:19:02: Finished Epoch[ 3 of 3]: [Training] CrossEntropyWithSoftmax = 0.15933695 * 10000; EvalErrorPrediction = 0.07530000 * 10000; totalSamplesSeen = 30000; learningRatePerSample = 0.0080000004; epochTime=1.02061s
08/04/2016 09:19:02: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091805.204544\Examples\Other\Simple2d_MultiGpu@release_cpu/Models/multigpu.dnn'
08/04/2016 09:19:02: CNTKCommandTrainEnd: Multigpu_Demo_Train

08/04/2016 09:19:02: Action "train" complete.


08/04/2016 09:19:02: ##############################################################################
08/04/2016 09:19:02: #                                                                            #
08/04/2016 09:19:02: # Action "test"                                                              #
08/04/2016 09:19:02: #                                                                            #
08/04/2016 09:19:02: ##############################################################################


Post-processing network...

7 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	EvalErrorPrediction = ErrorPrediction()
	InvStdOfFeatures = InvStdDev()
	MeanOfFeatures = Mean()
	PosteriorProb = Softmax()
	Prior = Mean()
	ScaledLogLikelihood = Minus()

Validating network. 25 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [2 x *1]
Validating --> W2 = LearnableParameter() :  -> [2 x 50]
Validating --> W1 = LearnableParameter() :  -> [50 x 50]
Validating --> W0 = LearnableParameter() :  -> [50 x 2]
Validating --> features = InputValue() :  -> [2 x *1]
Validating --> MeanOfFeatures = Mean (features) : [2 x *1] -> [2]
Validating --> InvStdOfFeatures = InvStdDev (features) : [2 x *1] -> [2]
Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [2 x *1], [2], [2] -> [2 x *1]
Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [50 x 2], [2 x *1] -> [50 x *1]
Validating --> B0 = LearnableParameter() :  -> [50 x 1]
Validating --> W0*features+B0 = Plus (W0*features, B0) : [50 x *1], [50 x 1] -> [50 x 1 x *1]
Validating --> H1 = Sigmoid (W0*features+B0) : [50 x 1 x *1] -> [50 x 1 x *1]
Validating --> W1*H1 = Times (W1, H1) : [50 x 50], [50 x 1 x *1] -> [50 x 1 x *1]
Validating --> B1 = LearnableParameter() :  -> [50 x 1]
Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [50 x 1 x *1], [50 x 1] -> [50 x 1 x *1]
Validating --> H2 = Sigmoid (W1*H1+B1) : [50 x 1 x *1] -> [50 x 1 x *1]
Validating --> W2*H1 = Times (W2, H2) : [2 x 50], [50 x 1 x *1] -> [2 x 1 x *1]
Validating --> B2 = LearnableParameter() :  -> [2 x 1]
Validating --> HLast = Plus (W2*H1, B2) : [2 x 1 x *1], [2 x 1] -> [2 x 1 x *1]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [2 x *1], [2 x 1 x *1] -> [1]
Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [2 x *1], [2 x 1 x *1] -> [1]
Validating --> PosteriorProb = Softmax (HLast) : [2 x 1 x *1] -> [2 x 1 x *1]
Validating --> Prior = Mean (labels) : [2 x *1] -> [2]
Validating --> LogOfPrior = Log (Prior) : [2] -> [2]
Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [2 x 1 x *1], [2] -> [2 x 1 x *1]

Validating network. 17 nodes to process in pass 2.


Validating network, final pass.



12 out of 25 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

evalNodeNames are not specified, using all the default evalnodes and training criterion nodes.


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

0000000000000000: {[B0 Gradient[50 x 1]] [B1 Gradient[50 x 1]] [B2 Gradient[2 x 1]] [CrossEntropyWithSoftmax Gradient[1]] [EvalErrorPrediction Gradient[1]] [H1 Gradient[50 x 1 x *1]] [H2 Gradient[50 x 1 x *1]] [HLast Gradient[2 x 1 x *1]] [InvStdOfFeatures Gradient[2]] [LogOfPrior Gradient[2]] [MVNormalizedFeatures Gradient[2 x *1]] [MeanOfFeatures Gradient[2]] [PosteriorProb Gradient[2 x 1 x *1]] [PosteriorProb Value[2 x 1 x *1]] [Prior Gradient[2]] [ScaledLogLikelihood Gradient[2 x 1 x *1]] [ScaledLogLikelihood Value[2 x 1 x *1]] [W0 Gradient[50 x 2]] [W0*features Gradient[50 x *1]] [W0*features+B0 Gradient[50 x 1 x *1]] [W1 Gradient[50 x 50]] [W1*H1 Gradient[50 x 1 x *1]] [W1*H1+B1 Gradient[50 x 1 x *1]] [W2 Gradient[2 x 50]] [W2*H1 Gradient[2 x 1 x *1]] [features Gradient[2 x *1]] [labels Gradient[2 x *1]] }
0000001CFA041570: {[LogOfPrior Value[2]] }
0000001CFA041610: {[H1 Value[50 x 1 x *1]] }
0000001CFA0416B0: {[W1*H1 Value[50 x 1 x *1]] }
0000001CFA041750: {[CrossEntropyWithSoftmax Value[1]] }
0000001CFA0417F0: {[MVNormalizedFeatures Value[2 x *1]] }
0000001CFA041890: {[HLast Value[2 x 1 x *1]] }
0000001CFA041B10: {[W1*H1+B1 Value[50 x 1 x *1]] }
0000001CFA041C50: {[W0*features+B0 Value[50 x 1 x *1]] }
0000001CFA041D90: {[H2 Value[50 x 1 x *1]] }
0000001CFA041E30: {[W2*H1 Value[2 x 1 x *1]] }
0000001CFA041ED0: {[EvalErrorPrediction Value[1]] }
0000001CFA041F70: {[W2 Value[2 x 50]] }
0000001CFA0423D0: {[W0*features Value[50 x *1]] }
0000001CFC6B0480: {[B1 Value[50 x 1]] }
0000001CFC6B0520: {[B2 Value[2 x 1]] }
0000001CFC6B05C0: {[B0 Value[50 x 1]] }
0000001CFC6B0980: {[features Value[2 x *1]] }
0000001CFCE84770: {[W0 Value[50 x 2]] }
0000001CFCE84A90: {[W1 Value[50 x 50]] }
0000001CFCE84D10: {[MeanOfFeatures Value[2]] }
0000001CFCE84E50: {[Prior Value[2]] }
0000001CFCE85030: {[labels Value[2 x *1]] }
0000001CFCE850D0: {[InvStdOfFeatures Value[2]] }

BlockRandomizer::StartEpoch: epoch 0: frames [0..603] (first sequence at sample 0), data subset 0 of 1
Actual gradient aggregation time: 4.5e-005
08/04/2016 09:19:02: Minibatch[1-1]: EvalErrorPrediction = 0.03150912 * 603; CrossEntropyWithSoftmax = 0.09034959 * 603
08/04/2016 09:19:02: Final Results: Minibatch[1-1]: EvalErrorPrediction = 0.03150912 * 603; CrossEntropyWithSoftmax = 0.09034959 * 603; perplexity = 1.09455686

08/04/2016 09:19:02: Action "test" complete.

08/04/2016 09:19:02: __COMPLETED__
~MPIWrapper