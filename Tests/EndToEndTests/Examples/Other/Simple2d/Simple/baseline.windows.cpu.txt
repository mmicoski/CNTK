CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU E5-2630 v2 @ 2.60GHz
    Hardware threads: 24
    Total Memory: 268381192 kB
-------------------------------------------------------------------
=== Running /cygdrive/c/jenkins/workspace/CNTK-Test-Windows-W1/x64/release_CpuOnly/cntk.exe configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Config/Simple.cntk currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804061332.536810\Examples\Other\Simple2d_Simple@release_cpu DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Config OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804061332.536810\Examples\Other\Simple2d_Simple@release_cpu DeviceId=-1 timestamping=true Simple_Demo_Train=[SGD=[maxEpochs=3]]
-------------------------------------------------------------------
Build info: 

		Built time: Aug  4 2016 06:08:21
		Last modified date: Thu Aug  4 03:38:57 2016
		Build type: Release
		Build target: CPU-only
		With 1bit-SGD: no
		Math lib: mkl
		Build Branch: HEAD
		Build SHA1: 0f61695dfc335f2406284d335678f57c215e6e9c
		Built by svcphil on Philly-Pool1
		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
-------------------------------------------------------------------
Changed current directory to C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data
08/04/2016 06:13:33: -------------------------------------------------------------------
08/04/2016 06:13:33: Build info: 

08/04/2016 06:13:33: 		Built time: Aug  4 2016 06:08:21
08/04/2016 06:13:33: 		Last modified date: Thu Aug  4 03:38:57 2016
08/04/2016 06:13:33: 		Build type: Release
08/04/2016 06:13:33: 		Build target: CPU-only
08/04/2016 06:13:33: 		With 1bit-SGD: no
08/04/2016 06:13:33: 		Math lib: mkl
08/04/2016 06:13:33: 		Build Branch: HEAD
08/04/2016 06:13:33: 		Build SHA1: 0f61695dfc335f2406284d335678f57c215e6e9c
08/04/2016 06:13:33: 		Built by svcphil on Philly-Pool1
08/04/2016 06:13:33: 		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
08/04/2016 06:13:33: -------------------------------------------------------------------

08/04/2016 06:13:33: Running on DPHAIM-25 at 2016/08/04 06:13:33
08/04/2016 06:13:33: Command line: 
C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\release_CpuOnly\cntk.exe  configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Config/Simple.cntk  currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data  RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804061332.536810\Examples\Other\Simple2d_Simple@release_cpu  DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data  ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Config  OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804061332.536810\Examples\Other\Simple2d_Simple@release_cpu  DeviceId=-1  timestamping=true  Simple_Demo_Train=[SGD=[maxEpochs=3]]



08/04/2016 06:13:33: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
08/04/2016 06:13:33: RootDir = ".."
ConfigDir = "$RootDir$/Config"
DataDir   = "$RootDir$/Data"
OutputDir = "$RootDir$/Output"
ModelDir  = "$OutputDir$/Models"
deviceId = -1
command = Simple_Demo_Train:Simple_Demo_Test:Simple_Demo_Output
precision = "float"
traceLevel = 1
modelPath = "$ModelDir$/simple.dnn"
outputNodeNames = ScaledLogLikelihood
Simple_Demo_Train = [
    action = "train"
    SimpleNetworkBuilder = [
        layerSizes = 2:50*2:2
        trainingCriterion = "CrossEntropyWithSoftmax"
        evalCriterion = "ErrorPrediction"
        layerTypes = "Sigmoid"
        initValueScale = 1.0
        applyMeanVarNorm = true
        uniformInit = true
        needPrior = true
    ]
    SGD = [
        epochSize = 0 
        minibatchSize = 25  
        learningRatesPerMB = 0.5:0.2*20:0.1
        momentumPerMB = 0.9
        dropoutRate = 0.0
        maxEpochs = 10
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataDir$/SimpleDataTrain_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
]
Simple_Demo_Test = [
    action = "test"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataDir$/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
]
Simple_Demo_Output=[
    action = "write"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataDir$/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
outputNodeNames = PosteriorProb : labels    
outputPath = "$OutputDir$/SimpleOutput"     
    format = [
type = "category"                                
labelMappingFile = "$DataDir$/SimpleMapping.txt" 
sequenceEpilogue = "\t// %s\n"                   
    ]
]
currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data
RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804061332.536810\Examples\Other\Simple2d_Simple@release_cpu
DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data
ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Config
OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804061332.536810\Examples\Other\Simple2d_Simple@release_cpu
DeviceId=-1
timestamping=true
Simple_Demo_Train=[SGD=[maxEpochs=3]]

08/04/2016 06:13:33: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<

08/04/2016 06:13:33: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
08/04/2016 06:13:33: RootDir = ".."
ConfigDir = "../Config"
DataDir   = "../Data"
OutputDir = "../Output"
ModelDir  = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804061332.536810\Examples\Other\Simple2d_Simple@release_cpu/Models"
deviceId = -1
command = Simple_Demo_Train:Simple_Demo_Test:Simple_Demo_Output
precision = "float"
traceLevel = 1
modelPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804061332.536810\Examples\Other\Simple2d_Simple@release_cpu/Models/simple.dnn"
outputNodeNames = ScaledLogLikelihood
Simple_Demo_Train = [
    action = "train"
    SimpleNetworkBuilder = [
        layerSizes = 2:50*2:2
        trainingCriterion = "CrossEntropyWithSoftmax"
        evalCriterion = "ErrorPrediction"
        layerTypes = "Sigmoid"
        initValueScale = 1.0
        applyMeanVarNorm = true
        uniformInit = true
        needPrior = true
    ]
    SGD = [
        epochSize = 0 
        minibatchSize = 25  
        learningRatesPerMB = 0.5:0.2*20:0.1
        momentumPerMB = 0.9
        dropoutRate = 0.0
        maxEpochs = 10
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleDataTrain_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
]
Simple_Demo_Test = [
    action = "test"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
]
Simple_Demo_Output=[
    action = "write"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
outputNodeNames = PosteriorProb : labels    
outputPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804061332.536810\Examples\Other\Simple2d_Simple@release_cpu/SimpleOutput"     
    format = [
type = "category"                                
labelMappingFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleMapping.txt" 
sequenceEpilogue = "\t// %s\n"                   
    ]
]
currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data
RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804061332.536810\Examples\Other\Simple2d_Simple@release_cpu
DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data
ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Config
OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804061332.536810\Examples\Other\Simple2d_Simple@release_cpu
DeviceId=-1
timestamping=true
Simple_Demo_Train=[SGD=[maxEpochs=3]]

08/04/2016 06:13:33: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<

08/04/2016 06:13:33: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
configparameters: Simple.cntk:command=Simple_Demo_Train:Simple_Demo_Test:Simple_Demo_Output
configparameters: Simple.cntk:ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Config
configparameters: Simple.cntk:currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data
configparameters: Simple.cntk:DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data
configparameters: Simple.cntk:deviceId=-1
configparameters: Simple.cntk:ModelDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804061332.536810\Examples\Other\Simple2d_Simple@release_cpu/Models
configparameters: Simple.cntk:modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804061332.536810\Examples\Other\Simple2d_Simple@release_cpu/Models/simple.dnn
configparameters: Simple.cntk:OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804061332.536810\Examples\Other\Simple2d_Simple@release_cpu
configparameters: Simple.cntk:outputNodeNames=ScaledLogLikelihood
configparameters: Simple.cntk:precision=float
configparameters: Simple.cntk:RootDir=..
configparameters: Simple.cntk:RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804061332.536810\Examples\Other\Simple2d_Simple@release_cpu
configparameters: Simple.cntk:Simple_Demo_Output=[
    action = "write"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
outputNodeNames = PosteriorProb : labels    
outputPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804061332.536810\Examples\Other\Simple2d_Simple@release_cpu/SimpleOutput"     
    format = [
type = "category"                                
labelMappingFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleMapping.txt" 
sequenceEpilogue = "\t// %s\n"                   
    ]
]

configparameters: Simple.cntk:Simple_Demo_Test=[
    action = "test"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
]

configparameters: Simple.cntk:Simple_Demo_Train=[
    action = "train"
    SimpleNetworkBuilder = [
        layerSizes = 2:50*2:2
        trainingCriterion = "CrossEntropyWithSoftmax"
        evalCriterion = "ErrorPrediction"
        layerTypes = "Sigmoid"
        initValueScale = 1.0
        applyMeanVarNorm = true
        uniformInit = true
        needPrior = true
    ]
    SGD = [
        epochSize = 0 
        minibatchSize = 25  
        learningRatesPerMB = 0.5:0.2*20:0.1
        momentumPerMB = 0.9
        dropoutRate = 0.0
        maxEpochs = 10
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleDataTrain_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
] [SGD=[maxEpochs=3]]

configparameters: Simple.cntk:timestamping=true
configparameters: Simple.cntk:traceLevel=1
08/04/2016 06:13:33: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
08/04/2016 06:13:33: Commands: Simple_Demo_Train Simple_Demo_Test Simple_Demo_Output
08/04/2016 06:13:33: Precision = "float"
08/04/2016 06:13:33: CNTKModelPath: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804061332.536810\Examples\Other\Simple2d_Simple@release_cpu/Models/simple.dnn
08/04/2016 06:13:33: CNTKCommandTrainInfo: Simple_Demo_Train : 3
08/04/2016 06:13:33: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 3

08/04/2016 06:13:33: ##############################################################################
08/04/2016 06:13:33: #                                                                            #
08/04/2016 06:13:33: # Action "train"                                                             #
08/04/2016 06:13:33: #                                                                            #
08/04/2016 06:13:33: ##############################################################################

08/04/2016 06:13:33: CNTKCommandTrainBegin: Simple_Demo_Train
SimpleNetworkBuilder Using CPU

08/04/2016 06:13:33: Creating virgin network.

Post-processing network...

7 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	EvalErrorPrediction = ErrorPrediction()
	InvStdOfFeatures = InvStdDev()
	MeanOfFeatures = Mean()
	PosteriorProb = Softmax()
	Prior = Mean()
	ScaledLogLikelihood = Minus()

Validating network. 25 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [2 x *]
Validating --> W2 = LearnableParameter() :  -> [2 x 50]
Validating --> W1 = LearnableParameter() :  -> [50 x 50]
Validating --> W0 = LearnableParameter() :  -> [50 x 2]
Validating --> features = InputValue() :  -> [2 x *]
Validating --> MeanOfFeatures = Mean (features) : [2 x *] -> [2]
Validating --> InvStdOfFeatures = InvStdDev (features) : [2 x *] -> [2]
Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [2 x *], [2], [2] -> [2 x *]
Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [50 x 2], [2 x *] -> [50 x *]
Validating --> B0 = LearnableParameter() :  -> [50 x 1]
Validating --> W0*features+B0 = Plus (W0*features, B0) : [50 x *], [50 x 1] -> [50 x 1 x *]
Validating --> H1 = Sigmoid (W0*features+B0) : [50 x 1 x *] -> [50 x 1 x *]
Validating --> W1*H1 = Times (W1, H1) : [50 x 50], [50 x 1 x *] -> [50 x 1 x *]
Validating --> B1 = LearnableParameter() :  -> [50 x 1]
Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [50 x 1 x *], [50 x 1] -> [50 x 1 x *]
Validating --> H2 = Sigmoid (W1*H1+B1) : [50 x 1 x *] -> [50 x 1 x *]
Validating --> W2*H1 = Times (W2, H2) : [2 x 50], [50 x 1 x *] -> [2 x 1 x *]
Validating --> B2 = LearnableParameter() :  -> [2 x 1]
Validating --> HLast = Plus (W2*H1, B2) : [2 x 1 x *], [2 x 1] -> [2 x 1 x *]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [2 x *], [2 x 1 x *] -> [1]
Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [2 x *], [2 x 1 x *] -> [1]
Validating --> PosteriorProb = Softmax (HLast) : [2 x 1 x *] -> [2 x 1 x *]
Validating --> Prior = Mean (labels) : [2 x *] -> [2]
Validating --> LogOfPrior = Log (Prior) : [2] -> [2]
Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [2 x 1 x *], [2] -> [2 x 1 x *]

Validating network. 17 nodes to process in pass 2.


Validating network, final pass.



12 out of 25 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

08/04/2016 06:13:33: Created model with 25 nodes on CPU.

08/04/2016 06:13:33: Training criterion node(s):
08/04/2016 06:13:33: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax

08/04/2016 06:13:33: Evaluation criterion node(s):

08/04/2016 06:13:33: 	EvalErrorPrediction = ErrorPrediction


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

0000000000000000: {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[2]] [LogOfPrior Gradient[2]] [MVNormalizedFeatures Gradient[2 x *]] [MeanOfFeatures Gradient[2]] [PosteriorProb Gradient[2 x 1 x *]] [PosteriorProb Value[2 x 1 x *]] [Prior Gradient[2]] [ScaledLogLikelihood Gradient[2 x 1 x *]] [features Gradient[2 x *]] [labels Gradient[2 x *]] }
000000EFB1D25AE0: {[features Value[2 x *]] }
000000EFB1D25D60: {[B1 Value[50 x 1]] }
000000EFB1D25E00: {[InvStdOfFeatures Value[2]] }
000000EFB1D26120: {[W1 Value[50 x 50]] }
000000EFB1D26440: {[B0 Value[50 x 1]] }
000000EFB1D264E0: {[MeanOfFeatures Value[2]] }
000000EFB1D26620: {[W0 Value[50 x 2]] }
000000EFB1D363D0: {[Prior Value[2]] }
000000EFB1D36470: {[CrossEntropyWithSoftmax Value[1]] }
000000EFB1D36510: {[CrossEntropyWithSoftmax Gradient[1]] }
000000EFB1D365B0: {[B2 Gradient[2 x 1]] }
000000EFB1D368D0: {[HLast Value[2 x 1 x *]] [W2 Gradient[2 x 50]] }
000000EFB1D36970: {[W2*H1 Gradient[2 x 1 x *]] }
000000EFB1D36BF0: {[EvalErrorPrediction Value[1]] }
000000EFB1D36E70: {[ScaledLogLikelihood Value[2 x 1 x *]] }
000000EFB1D36F10: {[H1 Value[50 x 1 x *]] [W0*features Gradient[50 x *]] }
000000EFB1D36FB0: {[W2 Value[2 x 50]] }
000000EFB1D37050: {[B2 Value[2 x 1]] }
000000EFB1D370F0: {[MVNormalizedFeatures Value[2 x *]] }
000000EFB1D37190: {[W0*features+B0 Gradient[50 x 1 x *]] [W1*H1 Value[50 x 1 x *]] }
000000EFB1D37230: {[H2 Value[50 x 1 x *]] [W1*H1 Gradient[50 x 1 x *]] }
000000EFB1D37370: {[W1 Gradient[50 x 50]] [W1*H1+B1 Value[50 x 1 x *]] }
000000EFB1D375F0: {[B1 Gradient[50 x 1]] [H2 Gradient[50 x 1 x *]] [HLast Gradient[2 x 1 x *]] }
000000EFB1D37690: {[labels Value[2 x *]] }
000000EFB1D37870: {[W0*features Value[50 x *]] }
000000EFB1D37C30: {[W0 Gradient[50 x 2]] [W0*features+B0 Value[50 x 1 x *]] }
000000EFB1D37E10: {[LogOfPrior Value[2]] }
000000EFB1D37EB0: {[B0 Gradient[50 x 1]] [H1 Gradient[50 x 1 x *]] [W1*H1+B1 Gradient[50 x 1 x *]] [W2*H1 Value[2 x 1 x *]] }


08/04/2016 06:13:33: Precomputing --> 3 PreCompute nodes found.

08/04/2016 06:13:33: 	MeanOfFeatures = Mean()
08/04/2016 06:13:33: 	InvStdOfFeatures = InvStdDev()
08/04/2016 06:13:33: 	Prior = Mean()
BlockRandomizer::StartEpoch: epoch 0: frames [0..10000] (first sequence at sample 0), data subset 0 of 1

08/04/2016 06:13:33: Precomputing --> Completed.


08/04/2016 06:13:33: Starting Epoch 1: learning rate per sample = 0.020000  effective momentum = 0.900000  momentum as time constant = 237.3 samples
BlockRandomizer::StartEpoch: epoch 0: frames [0..10000] (first sequence at sample 0), data subset 0 of 1

08/04/2016 06:13:33: Starting minibatch loop.
08/04/2016 06:13:33:  Epoch[ 1 of 3]-Minibatch[   1-  10]: CrossEntropyWithSoftmax = 0.72158575 * 250; EvalErrorPrediction = 0.54400000 * 250; time = 0.3948s; samplesPerSecond = 633.2
08/04/2016 06:13:33:  Epoch[ 1 of 3]-Minibatch[  11-  20]: CrossEntropyWithSoftmax = 0.72945282 * 250; EvalErrorPrediction = 0.50400000 * 250; time = 0.0242s; samplesPerSecond = 10329.7
08/04/2016 06:13:33:  Epoch[ 1 of 3]-Minibatch[  21-  30]: CrossEntropyWithSoftmax = 0.70152979 * 250; EvalErrorPrediction = 0.45600000 * 250; time = 0.0241s; samplesPerSecond = 10363.6
08/04/2016 06:13:33:  Epoch[ 1 of 3]-Minibatch[  31-  40]: CrossEntropyWithSoftmax = 0.74128882 * 250; EvalErrorPrediction = 0.51600000 * 250; time = 0.0236s; samplesPerSecond = 10595.0
08/04/2016 06:13:33:  Epoch[ 1 of 3]-Minibatch[  41-  50]: CrossEntropyWithSoftmax = 0.74553027 * 250; EvalErrorPrediction = 0.58000000 * 250; time = 0.0227s; samplesPerSecond = 11026.3
08/04/2016 06:13:33:  Epoch[ 1 of 3]-Minibatch[  51-  60]: CrossEntropyWithSoftmax = 0.71826636 * 250; EvalErrorPrediction = 0.46000000 * 250; time = 0.0224s; samplesPerSecond = 11142.8
08/04/2016 06:13:33:  Epoch[ 1 of 3]-Minibatch[  61-  70]: CrossEntropyWithSoftmax = 0.70235205 * 250; EvalErrorPrediction = 0.48800000 * 250; time = 0.0227s; samplesPerSecond = 11034.1
08/04/2016 06:13:33:  Epoch[ 1 of 3]-Minibatch[  71-  80]: CrossEntropyWithSoftmax = 0.73039795 * 250; EvalErrorPrediction = 0.54000000 * 250; time = 0.0232s; samplesPerSecond = 10782.4
08/04/2016 06:13:33:  Epoch[ 1 of 3]-Minibatch[  81-  90]: CrossEntropyWithSoftmax = 0.72226611 * 250; EvalErrorPrediction = 0.50000000 * 250; time = 0.0216s; samplesPerSecond = 11572.5
08/04/2016 06:13:33:  Epoch[ 1 of 3]-Minibatch[  91- 100]: CrossEntropyWithSoftmax = 0.71367187 * 250; EvalErrorPrediction = 0.48400000 * 250; time = 0.0219s; samplesPerSecond = 11420.2
08/04/2016 06:13:33:  Epoch[ 1 of 3]-Minibatch[ 101- 110]: CrossEntropyWithSoftmax = 0.70665674 * 250; EvalErrorPrediction = 0.47600000 * 250; time = 0.0216s; samplesPerSecond = 11596.1
08/04/2016 06:13:33:  Epoch[ 1 of 3]-Minibatch[ 111- 120]: CrossEntropyWithSoftmax = 0.74862354 * 250; EvalErrorPrediction = 0.53200000 * 250; time = 0.0221s; samplesPerSecond = 11316.3
08/04/2016 06:13:33:  Epoch[ 1 of 3]-Minibatch[ 121- 130]: CrossEntropyWithSoftmax = 0.86821289 * 250; EvalErrorPrediction = 0.53200000 * 250; time = 0.0223s; samplesPerSecond = 11206.7
08/04/2016 06:13:34:  Epoch[ 1 of 3]-Minibatch[ 131- 140]: CrossEntropyWithSoftmax = 0.82599316 * 250; EvalErrorPrediction = 0.55600000 * 250; time = 0.0221s; samplesPerSecond = 11316.3
08/04/2016 06:13:34:  Epoch[ 1 of 3]-Minibatch[ 141- 150]: CrossEntropyWithSoftmax = 0.72434082 * 250; EvalErrorPrediction = 0.52400000 * 250; time = 0.0224s; samplesPerSecond = 11153.2
08/04/2016 06:13:34:  Epoch[ 1 of 3]-Minibatch[ 151- 160]: CrossEntropyWithSoftmax = 0.72374707 * 250; EvalErrorPrediction = 0.50400000 * 250; time = 0.0218s; samplesPerSecond = 11472.1
08/04/2016 06:13:34:  Epoch[ 1 of 3]-Minibatch[ 161- 170]: CrossEntropyWithSoftmax = 0.70148535 * 250; EvalErrorPrediction = 0.53600000 * 250; time = 0.0217s; samplesPerSecond = 11507.5
08/04/2016 06:13:34:  Epoch[ 1 of 3]-Minibatch[ 171- 180]: CrossEntropyWithSoftmax = 0.69553027 * 250; EvalErrorPrediction = 0.49600000 * 250; time = 0.0215s; samplesPerSecond = 11616.0
08/04/2016 06:13:34:  Epoch[ 1 of 3]-Minibatch[ 181- 190]: CrossEntropyWithSoftmax = 0.69299316 * 250; EvalErrorPrediction = 0.47200000 * 250; time = 0.0220s; samplesPerSecond = 11361.1
08/04/2016 06:13:34:  Epoch[ 1 of 3]-Minibatch[ 191- 200]: CrossEntropyWithSoftmax = 0.72501367 * 250; EvalErrorPrediction = 0.50000000 * 250; time = 0.0220s; samplesPerSecond = 11365.2
08/04/2016 06:13:34:  Epoch[ 1 of 3]-Minibatch[ 201- 210]: CrossEntropyWithSoftmax = 0.73040039 * 250; EvalErrorPrediction = 0.51600000 * 250; time = 0.0222s; samplesPerSecond = 11256.7
08/04/2016 06:13:34:  Epoch[ 1 of 3]-Minibatch[ 211- 220]: CrossEntropyWithSoftmax = 0.69652344 * 250; EvalErrorPrediction = 0.49200000 * 250; time = 0.0219s; samplesPerSecond = 11417.1
08/04/2016 06:13:34:  Epoch[ 1 of 3]-Minibatch[ 221- 230]: CrossEntropyWithSoftmax = 0.70915527 * 250; EvalErrorPrediction = 0.52400000 * 250; time = 0.0220s; samplesPerSecond = 11352.3
08/04/2016 06:13:34:  Epoch[ 1 of 3]-Minibatch[ 231- 240]: CrossEntropyWithSoftmax = 0.70665039 * 250; EvalErrorPrediction = 0.53600000 * 250; time = 0.0221s; samplesPerSecond = 11333.2
08/04/2016 06:13:34:  Epoch[ 1 of 3]-Minibatch[ 241- 250]: CrossEntropyWithSoftmax = 0.70112695 * 250; EvalErrorPrediction = 0.47200000 * 250; time = 0.0218s; samplesPerSecond = 11474.7
08/04/2016 06:13:34:  Epoch[ 1 of 3]-Minibatch[ 251- 260]: CrossEntropyWithSoftmax = 0.69939258 * 250; EvalErrorPrediction = 0.50000000 * 250; time = 0.0215s; samplesPerSecond = 11652.3
08/04/2016 06:13:34:  Epoch[ 1 of 3]-Minibatch[ 261- 270]: CrossEntropyWithSoftmax = 0.71169336 * 250; EvalErrorPrediction = 0.57200000 * 250; time = 0.0216s; samplesPerSecond = 11588.0
08/04/2016 06:13:34:  Epoch[ 1 of 3]-Minibatch[ 271- 280]: CrossEntropyWithSoftmax = 0.70169922 * 250; EvalErrorPrediction = 0.48400000 * 250; time = 0.0219s; samplesPerSecond = 11426.5
08/04/2016 06:13:34:  Epoch[ 1 of 3]-Minibatch[ 281- 290]: CrossEntropyWithSoftmax = 0.69898828 * 250; EvalErrorPrediction = 0.48000000 * 250; time = 0.0219s; samplesPerSecond = 11423.3
08/04/2016 06:13:34:  Epoch[ 1 of 3]-Minibatch[ 291- 300]: CrossEntropyWithSoftmax = 0.70277734 * 250; EvalErrorPrediction = 0.53200000 * 250; time = 0.0222s; samplesPerSecond = 11240.5
08/04/2016 06:13:34:  Epoch[ 1 of 3]-Minibatch[ 301- 310]: CrossEntropyWithSoftmax = 0.69721484 * 250; EvalErrorPrediction = 0.52800000 * 250; time = 0.0224s; samplesPerSecond = 11145.3
08/04/2016 06:13:34:  Epoch[ 1 of 3]-Minibatch[ 311- 320]: CrossEntropyWithSoftmax = 0.69657227 * 250; EvalErrorPrediction = 0.46800000 * 250; time = 0.0218s; samplesPerSecond = 11449.0
08/04/2016 06:13:34:  Epoch[ 1 of 3]-Minibatch[ 321- 330]: CrossEntropyWithSoftmax = 0.68540820 * 250; EvalErrorPrediction = 0.39600000 * 250; time = 0.0221s; samplesPerSecond = 11301.5
08/04/2016 06:13:34:  Epoch[ 1 of 3]-Minibatch[ 331- 340]: CrossEntropyWithSoftmax = 0.67916602 * 250; EvalErrorPrediction = 0.42800000 * 250; time = 0.0214s; samplesPerSecond = 11700.3
08/04/2016 06:13:34:  Epoch[ 1 of 3]-Minibatch[ 341- 350]: CrossEntropyWithSoftmax = 0.67157227 * 250; EvalErrorPrediction = 0.50000000 * 250; time = 0.0218s; samplesPerSecond = 11443.7
08/04/2016 06:13:34:  Epoch[ 1 of 3]-Minibatch[ 351- 360]: CrossEntropyWithSoftmax = 0.68412500 * 250; EvalErrorPrediction = 0.44800000 * 250; time = 0.0218s; samplesPerSecond = 11492.1
08/04/2016 06:13:34:  Epoch[ 1 of 3]-Minibatch[ 361- 370]: CrossEntropyWithSoftmax = 0.66153906 * 250; EvalErrorPrediction = 0.45200000 * 250; time = 0.0220s; samplesPerSecond = 11347.6
08/04/2016 06:13:34:  Epoch[ 1 of 3]-Minibatch[ 371- 380]: CrossEntropyWithSoftmax = 0.63971680 * 250; EvalErrorPrediction = 0.30400000 * 250; time = 0.0216s; samplesPerSecond = 11553.2
08/04/2016 06:13:34:  Epoch[ 1 of 3]-Minibatch[ 381- 390]: CrossEntropyWithSoftmax = 0.60428906 * 250; EvalErrorPrediction = 0.12000000 * 250; time = 0.0221s; samplesPerSecond = 11315.3
08/04/2016 06:13:34:  Epoch[ 1 of 3]-Minibatch[ 391- 400]: CrossEntropyWithSoftmax = 0.57421875 * 250; EvalErrorPrediction = 0.05200000 * 250; time = 0.0219s; samplesPerSecond = 11402.0
08/04/2016 06:13:34: Finished Epoch[ 1 of 3]: [Training] CrossEntropyWithSoftmax = 0.70727920 * 10000; EvalErrorPrediction = 0.47510000 * 10000; totalSamplesSeen = 10000; learningRatePerSample = 0.02; epochTime=1.26229s
08/04/2016 06:13:34: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804061332.536810\Examples\Other\Simple2d_Simple@release_cpu/Models/simple.dnn.1'

08/04/2016 06:13:34: Starting Epoch 2: learning rate per sample = 0.008000  effective momentum = 0.900000  momentum as time constant = 237.3 samples
BlockRandomizer::StartEpoch: epoch 1: frames [10000..20000] (first sequence at sample 10000), data subset 0 of 1

08/04/2016 06:13:34: Starting minibatch loop.
08/04/2016 06:13:34:  Epoch[ 2 of 3]-Minibatch[   1-  10, 2.50%]: CrossEntropyWithSoftmax = 0.53028949 * 250; EvalErrorPrediction = 0.13200000 * 250; time = 0.0219s; samplesPerSecond = 11426.0
08/04/2016 06:13:34:  Epoch[ 2 of 3]-Minibatch[  11-  20, 5.00%]: CrossEntropyWithSoftmax = 0.49788055 * 250; EvalErrorPrediction = 0.05200000 * 250; time = 0.0218s; samplesPerSecond = 11473.2
08/04/2016 06:13:34:  Epoch[ 2 of 3]-Minibatch[  21-  30, 7.50%]: CrossEntropyWithSoftmax = 0.47060999 * 250; EvalErrorPrediction = 0.08400000 * 250; time = 0.0214s; samplesPerSecond = 11674.1
08/04/2016 06:13:34:  Epoch[ 2 of 3]-Minibatch[  31-  40, 10.00%]: CrossEntropyWithSoftmax = 0.42760901 * 250; EvalErrorPrediction = 0.06000000 * 250; time = 0.0216s; samplesPerSecond = 11590.7
08/04/2016 06:13:34:  Epoch[ 2 of 3]-Minibatch[  41-  50, 12.50%]: CrossEntropyWithSoftmax = 0.40836853 * 250; EvalErrorPrediction = 0.07200000 * 250; time = 0.0214s; samplesPerSecond = 11709.6
08/04/2016 06:13:34:  Epoch[ 2 of 3]-Minibatch[  51-  60, 15.00%]: CrossEntropyWithSoftmax = 0.39042041 * 250; EvalErrorPrediction = 0.11200000 * 250; time = 0.0210s; samplesPerSecond = 11891.7
08/04/2016 06:13:34:  Epoch[ 2 of 3]-Minibatch[  61-  70, 17.50%]: CrossEntropyWithSoftmax = 0.33780884 * 250; EvalErrorPrediction = 0.05200000 * 250; time = 0.0217s; samplesPerSecond = 11524.5
08/04/2016 06:13:34:  Epoch[ 2 of 3]-Minibatch[  71-  80, 20.00%]: CrossEntropyWithSoftmax = 0.32121509 * 250; EvalErrorPrediction = 0.10800000 * 250; time = 0.0216s; samplesPerSecond = 11557.5
08/04/2016 06:13:34:  Epoch[ 2 of 3]-Minibatch[  81-  90, 22.50%]: CrossEntropyWithSoftmax = 0.28648071 * 250; EvalErrorPrediction = 0.04400000 * 250; time = 0.0214s; samplesPerSecond = 11680.6
08/04/2016 06:13:34:  Epoch[ 2 of 3]-Minibatch[  91- 100, 25.00%]: CrossEntropyWithSoftmax = 0.29183130 * 250; EvalErrorPrediction = 0.12000000 * 250; time = 0.0210s; samplesPerSecond = 11921.8
08/04/2016 06:13:34:  Epoch[ 2 of 3]-Minibatch[ 101- 110, 27.50%]: CrossEntropyWithSoftmax = 0.26609058 * 250; EvalErrorPrediction = 0.07200000 * 250; time = 0.0216s; samplesPerSecond = 11553.7
08/04/2016 06:13:34:  Epoch[ 2 of 3]-Minibatch[ 111- 120, 30.00%]: CrossEntropyWithSoftmax = 0.22948193 * 250; EvalErrorPrediction = 0.06000000 * 250; time = 0.0220s; samplesPerSecond = 11382.8
08/04/2016 06:13:34:  Epoch[ 2 of 3]-Minibatch[ 121- 130, 32.50%]: CrossEntropyWithSoftmax = 0.24973926 * 250; EvalErrorPrediction = 0.06800000 * 250; time = 0.0214s; samplesPerSecond = 11684.4
08/04/2016 06:13:34:  Epoch[ 2 of 3]-Minibatch[ 131- 140, 35.00%]: CrossEntropyWithSoftmax = 0.25798730 * 250; EvalErrorPrediction = 0.11600000 * 250; time = 0.0214s; samplesPerSecond = 11668.1
08/04/2016 06:13:34:  Epoch[ 2 of 3]-Minibatch[ 141- 150, 37.50%]: CrossEntropyWithSoftmax = 0.25312158 * 250; EvalErrorPrediction = 0.08800000 * 250; time = 0.0220s; samplesPerSecond = 11363.6
08/04/2016 06:13:34:  Epoch[ 2 of 3]-Minibatch[ 151- 160, 40.00%]: CrossEntropyWithSoftmax = 0.21122607 * 250; EvalErrorPrediction = 0.05200000 * 250; time = 0.0216s; samplesPerSecond = 11600.4
08/04/2016 06:13:34:  Epoch[ 2 of 3]-Minibatch[ 161- 170, 42.50%]: CrossEntropyWithSoftmax = 0.20185840 * 250; EvalErrorPrediction = 0.06800000 * 250; time = 0.0216s; samplesPerSecond = 11573.0
08/04/2016 06:13:34:  Epoch[ 2 of 3]-Minibatch[ 171- 180, 45.00%]: CrossEntropyWithSoftmax = 0.24792188 * 250; EvalErrorPrediction = 0.10000000 * 250; time = 0.0214s; samplesPerSecond = 11688.3
08/04/2016 06:13:34:  Epoch[ 2 of 3]-Minibatch[ 181- 190, 47.50%]: CrossEntropyWithSoftmax = 0.20568262 * 250; EvalErrorPrediction = 0.08000000 * 250; time = 0.0212s; samplesPerSecond = 11769.1
08/04/2016 06:13:35:  Epoch[ 2 of 3]-Minibatch[ 191- 200, 50.00%]: CrossEntropyWithSoftmax = 0.18670605 * 250; EvalErrorPrediction = 0.06000000 * 250; time = 0.0215s; samplesPerSecond = 11644.7
08/04/2016 06:13:35:  Epoch[ 2 of 3]-Minibatch[ 201- 210, 52.50%]: CrossEntropyWithSoftmax = 0.20154199 * 250; EvalErrorPrediction = 0.07600000 * 250; time = 0.0215s; samplesPerSecond = 11619.8
08/04/2016 06:13:35:  Epoch[ 2 of 3]-Minibatch[ 211- 220, 55.00%]: CrossEntropyWithSoftmax = 0.16976660 * 250; EvalErrorPrediction = 0.04800000 * 250; time = 0.0215s; samplesPerSecond = 11647.4
08/04/2016 06:13:35:  Epoch[ 2 of 3]-Minibatch[ 221- 230, 57.50%]: CrossEntropyWithSoftmax = 0.18794043 * 250; EvalErrorPrediction = 0.08400000 * 250; time = 0.0213s; samplesPerSecond = 11757.0
08/04/2016 06:13:35:  Epoch[ 2 of 3]-Minibatch[ 231- 240, 60.00%]: CrossEntropyWithSoftmax = 0.17097119 * 250; EvalErrorPrediction = 0.07200000 * 250; time = 0.0213s; samplesPerSecond = 11722.8
08/04/2016 06:13:35:  Epoch[ 2 of 3]-Minibatch[ 241- 250, 62.50%]: CrossEntropyWithSoftmax = 0.17111719 * 250; EvalErrorPrediction = 0.06400000 * 250; time = 0.0215s; samplesPerSecond = 11642.0
08/04/2016 06:13:35:  Epoch[ 2 of 3]-Minibatch[ 251- 260, 65.00%]: CrossEntropyWithSoftmax = 0.16854688 * 250; EvalErrorPrediction = 0.05600000 * 250; time = 0.0213s; samplesPerSecond = 11738.7
08/04/2016 06:13:35:  Epoch[ 2 of 3]-Minibatch[ 261- 270, 67.50%]: CrossEntropyWithSoftmax = 0.17842773 * 250; EvalErrorPrediction = 0.06800000 * 250; time = 0.0217s; samplesPerSecond = 11513.3
08/04/2016 06:13:35:  Epoch[ 2 of 3]-Minibatch[ 271- 280, 70.00%]: CrossEntropyWithSoftmax = 0.19504785 * 250; EvalErrorPrediction = 0.09200000 * 250; time = 0.0215s; samplesPerSecond = 11607.9
08/04/2016 06:13:35:  Epoch[ 2 of 3]-Minibatch[ 281- 290, 72.50%]: CrossEntropyWithSoftmax = 0.18517090 * 250; EvalErrorPrediction = 0.08800000 * 250; time = 0.0215s; samplesPerSecond = 11643.6
08/04/2016 06:13:35:  Epoch[ 2 of 3]-Minibatch[ 291- 300, 75.00%]: CrossEntropyWithSoftmax = 0.16892578 * 250; EvalErrorPrediction = 0.06800000 * 250; time = 0.0215s; samplesPerSecond = 11640.9
08/04/2016 06:13:35:  Epoch[ 2 of 3]-Minibatch[ 301- 310, 77.50%]: CrossEntropyWithSoftmax = 0.19334668 * 250; EvalErrorPrediction = 0.09600000 * 250; time = 0.0215s; samplesPerSecond = 11623.0
08/04/2016 06:13:35:  Epoch[ 2 of 3]-Minibatch[ 311- 320, 80.00%]: CrossEntropyWithSoftmax = 0.14720117 * 250; EvalErrorPrediction = 0.06000000 * 250; time = 0.0215s; samplesPerSecond = 11605.2
08/04/2016 06:13:35:  Epoch[ 2 of 3]-Minibatch[ 321- 330, 82.50%]: CrossEntropyWithSoftmax = 0.16194629 * 250; EvalErrorPrediction = 0.07200000 * 250; time = 0.0213s; samplesPerSecond = 11726.6
08/04/2016 06:13:35:  Epoch[ 2 of 3]-Minibatch[ 331- 340, 85.00%]: CrossEntropyWithSoftmax = 0.15622559 * 250; EvalErrorPrediction = 0.06400000 * 250; time = 0.0214s; samplesPerSecond = 11683.3
08/04/2016 06:13:35:  Epoch[ 2 of 3]-Minibatch[ 341- 350, 87.50%]: CrossEntropyWithSoftmax = 0.19808398 * 250; EvalErrorPrediction = 0.10800000 * 250; time = 0.0216s; samplesPerSecond = 11578.9
08/04/2016 06:13:35:  Epoch[ 2 of 3]-Minibatch[ 351- 360, 90.00%]: CrossEntropyWithSoftmax = 0.13561621 * 250; EvalErrorPrediction = 0.06000000 * 250; time = 0.0213s; samplesPerSecond = 11723.3
08/04/2016 06:13:35:  Epoch[ 2 of 3]-Minibatch[ 361- 370, 92.50%]: CrossEntropyWithSoftmax = 0.18180371 * 250; EvalErrorPrediction = 0.08000000 * 250; time = 0.0216s; samplesPerSecond = 11550.0
08/04/2016 06:13:35:  Epoch[ 2 of 3]-Minibatch[ 371- 380, 95.00%]: CrossEntropyWithSoftmax = 0.15394336 * 250; EvalErrorPrediction = 0.07600000 * 250; time = 0.0218s; samplesPerSecond = 11454.8
08/04/2016 06:13:35:  Epoch[ 2 of 3]-Minibatch[ 381- 390, 97.50%]: CrossEntropyWithSoftmax = 0.13239453 * 250; EvalErrorPrediction = 0.05200000 * 250; time = 0.0214s; samplesPerSecond = 11664.8
08/04/2016 06:13:35:  Epoch[ 2 of 3]-Minibatch[ 391- 400, 100.00%]: CrossEntropyWithSoftmax = 0.14059277 * 250; EvalErrorPrediction = 0.06000000 * 250; time = 0.0212s; samplesPerSecond = 11792.5
08/04/2016 06:13:35: Finished Epoch[ 2 of 3]: [Training] CrossEntropyWithSoftmax = 0.24177351 * 10000; EvalErrorPrediction = 0.07610000 * 10000; totalSamplesSeen = 20000; learningRatePerSample = 0.0080000004; epochTime=0.861662s
08/04/2016 06:13:35: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804061332.536810\Examples\Other\Simple2d_Simple@release_cpu/Models/simple.dnn.2'

08/04/2016 06:13:35: Starting Epoch 3: learning rate per sample = 0.008000  effective momentum = 0.900000  momentum as time constant = 237.3 samples
BlockRandomizer::StartEpoch: epoch 2: frames [20000..30000] (first sequence at sample 20000), data subset 0 of 1

08/04/2016 06:13:35: Starting minibatch loop.
08/04/2016 06:13:35:  Epoch[ 3 of 3]-Minibatch[   1-  10, 2.50%]: CrossEntropyWithSoftmax = 0.18061520 * 250; EvalErrorPrediction = 0.09200000 * 250; time = 0.0217s; samplesPerSecond = 11533.5
08/04/2016 06:13:35:  Epoch[ 3 of 3]-Minibatch[  11-  20, 5.00%]: CrossEntropyWithSoftmax = 0.16272729 * 250; EvalErrorPrediction = 0.08000000 * 250; time = 0.0215s; samplesPerSecond = 11639.8
08/04/2016 06:13:35:  Epoch[ 3 of 3]-Minibatch[  21-  30, 7.50%]: CrossEntropyWithSoftmax = 0.11642908 * 250; EvalErrorPrediction = 0.06000000 * 250; time = 0.0219s; samplesPerSecond = 11398.9
08/04/2016 06:13:35:  Epoch[ 3 of 3]-Minibatch[  31-  40, 10.00%]: CrossEntropyWithSoftmax = 0.16767398 * 250; EvalErrorPrediction = 0.08000000 * 250; time = 0.0214s; samplesPerSecond = 11682.8
08/04/2016 06:13:35:  Epoch[ 3 of 3]-Minibatch[  41-  50, 12.50%]: CrossEntropyWithSoftmax = 0.13866888 * 250; EvalErrorPrediction = 0.06400000 * 250; time = 0.0215s; samplesPerSecond = 11643.1
08/04/2016 06:13:35:  Epoch[ 3 of 3]-Minibatch[  51-  60, 15.00%]: CrossEntropyWithSoftmax = 0.18733411 * 250; EvalErrorPrediction = 0.09600000 * 250; time = 0.0214s; samplesPerSecond = 11674.6
08/04/2016 06:13:35:  Epoch[ 3 of 3]-Minibatch[  61-  70, 17.50%]: CrossEntropyWithSoftmax = 0.14666486 * 250; EvalErrorPrediction = 0.06800000 * 250; time = 0.0215s; samplesPerSecond = 11643.1
08/04/2016 06:13:35:  Epoch[ 3 of 3]-Minibatch[  71-  80, 20.00%]: CrossEntropyWithSoftmax = 0.20152917 * 250; EvalErrorPrediction = 0.08000000 * 250; time = 0.0215s; samplesPerSecond = 11644.2
08/04/2016 06:13:35:  Epoch[ 3 of 3]-Minibatch[  81-  90, 22.50%]: CrossEntropyWithSoftmax = 0.13597058 * 250; EvalErrorPrediction = 0.06800000 * 250; time = 0.0215s; samplesPerSecond = 11608.5
08/04/2016 06:13:35:  Epoch[ 3 of 3]-Minibatch[  91- 100, 25.00%]: CrossEntropyWithSoftmax = 0.16771094 * 250; EvalErrorPrediction = 0.08400000 * 250; time = 0.0217s; samplesPerSecond = 11536.2
08/04/2016 06:13:35:  Epoch[ 3 of 3]-Minibatch[ 101- 110, 27.50%]: CrossEntropyWithSoftmax = 0.14776990 * 250; EvalErrorPrediction = 0.08000000 * 250; time = 0.0221s; samplesPerSecond = 11332.7
08/04/2016 06:13:35:  Epoch[ 3 of 3]-Minibatch[ 111- 120, 30.00%]: CrossEntropyWithSoftmax = 0.18771338 * 250; EvalErrorPrediction = 0.08400000 * 250; time = 0.0219s; samplesPerSecond = 11428.6
08/04/2016 06:13:35:  Epoch[ 3 of 3]-Minibatch[ 121- 130, 32.50%]: CrossEntropyWithSoftmax = 0.17035156 * 250; EvalErrorPrediction = 0.09200000 * 250; time = 0.0216s; samplesPerSecond = 11577.8
08/04/2016 06:13:35:  Epoch[ 3 of 3]-Minibatch[ 131- 140, 35.00%]: CrossEntropyWithSoftmax = 0.14387671 * 250; EvalErrorPrediction = 0.07200000 * 250; time = 0.0216s; samplesPerSecond = 11580.0
08/04/2016 06:13:35:  Epoch[ 3 of 3]-Minibatch[ 141- 150, 37.50%]: CrossEntropyWithSoftmax = 0.18934985 * 250; EvalErrorPrediction = 0.09600000 * 250; time = 0.0224s; samplesPerSecond = 11150.8
08/04/2016 06:13:35:  Epoch[ 3 of 3]-Minibatch[ 151- 160, 40.00%]: CrossEntropyWithSoftmax = 0.16943774 * 250; EvalErrorPrediction = 0.08000000 * 250; time = 0.0228s; samplesPerSecond = 10964.4
08/04/2016 06:13:35:  Epoch[ 3 of 3]-Minibatch[ 161- 170, 42.50%]: CrossEntropyWithSoftmax = 0.14288574 * 250; EvalErrorPrediction = 0.06400000 * 250; time = 0.0214s; samplesPerSecond = 11686.1
08/04/2016 06:13:35:  Epoch[ 3 of 3]-Minibatch[ 171- 180, 45.00%]: CrossEntropyWithSoftmax = 0.18284570 * 250; EvalErrorPrediction = 0.09600000 * 250; time = 0.0215s; samplesPerSecond = 11651.8
08/04/2016 06:13:35:  Epoch[ 3 of 3]-Minibatch[ 181- 190, 47.50%]: CrossEntropyWithSoftmax = 0.17150049 * 250; EvalErrorPrediction = 0.08000000 * 250; time = 0.0217s; samplesPerSecond = 11544.1
08/04/2016 06:13:35:  Epoch[ 3 of 3]-Minibatch[ 191- 200, 50.00%]: CrossEntropyWithSoftmax = 0.17612769 * 250; EvalErrorPrediction = 0.07200000 * 250; time = 0.0214s; samplesPerSecond = 11666.4
08/04/2016 06:13:35:  Epoch[ 3 of 3]-Minibatch[ 201- 210, 52.50%]: CrossEntropyWithSoftmax = 0.17437231 * 250; EvalErrorPrediction = 0.08400000 * 250; time = 0.0213s; samplesPerSecond = 11734.3
08/04/2016 06:13:35:  Epoch[ 3 of 3]-Minibatch[ 211- 220, 55.00%]: CrossEntropyWithSoftmax = 0.13774658 * 250; EvalErrorPrediction = 0.05600000 * 250; time = 0.0215s; samplesPerSecond = 11619.8
08/04/2016 06:13:35:  Epoch[ 3 of 3]-Minibatch[ 221- 230, 57.50%]: CrossEntropyWithSoftmax = 0.15612793 * 250; EvalErrorPrediction = 0.06800000 * 250; time = 0.0211s; samplesPerSecond = 11858.5
08/04/2016 06:13:35:  Epoch[ 3 of 3]-Minibatch[ 231- 240, 60.00%]: CrossEntropyWithSoftmax = 0.17963916 * 250; EvalErrorPrediction = 0.09200000 * 250; time = 0.0217s; samplesPerSecond = 11502.2
08/04/2016 06:13:36:  Epoch[ 3 of 3]-Minibatch[ 241- 250, 62.50%]: CrossEntropyWithSoftmax = 0.15503711 * 250; EvalErrorPrediction = 0.07200000 * 250; time = 0.0219s; samplesPerSecond = 11431.7
08/04/2016 06:13:36:  Epoch[ 3 of 3]-Minibatch[ 251- 260, 65.00%]: CrossEntropyWithSoftmax = 0.19616113 * 250; EvalErrorPrediction = 0.08800000 * 250; time = 0.0216s; samplesPerSecond = 11552.1
08/04/2016 06:13:36:  Epoch[ 3 of 3]-Minibatch[ 261- 270, 67.50%]: CrossEntropyWithSoftmax = 0.16320020 * 250; EvalErrorPrediction = 0.08400000 * 250; time = 0.0211s; samplesPerSecond = 11869.7
08/04/2016 06:13:36:  Epoch[ 3 of 3]-Minibatch[ 271- 280, 70.00%]: CrossEntropyWithSoftmax = 0.13371875 * 250; EvalErrorPrediction = 0.05600000 * 250; time = 0.0210s; samplesPerSecond = 11877.0
08/04/2016 06:13:36:  Epoch[ 3 of 3]-Minibatch[ 281- 290, 72.50%]: CrossEntropyWithSoftmax = 0.14497168 * 250; EvalErrorPrediction = 0.06400000 * 250; time = 0.0217s; samplesPerSecond = 11531.9
08/04/2016 06:13:36:  Epoch[ 3 of 3]-Minibatch[ 291- 300, 75.00%]: CrossEntropyWithSoftmax = 0.13384375 * 250; EvalErrorPrediction = 0.06400000 * 250; time = 0.0215s; samplesPerSecond = 11647.4
08/04/2016 06:13:36:  Epoch[ 3 of 3]-Minibatch[ 301- 310, 77.50%]: CrossEntropyWithSoftmax = 0.14045264 * 250; EvalErrorPrediction = 0.05200000 * 250; time = 0.0216s; samplesPerSecond = 11577.8
08/04/2016 06:13:36:  Epoch[ 3 of 3]-Minibatch[ 311- 320, 80.00%]: CrossEntropyWithSoftmax = 0.13401416 * 250; EvalErrorPrediction = 0.06000000 * 250; time = 0.0215s; samplesPerSecond = 11644.2
08/04/2016 06:13:36:  Epoch[ 3 of 3]-Minibatch[ 321- 330, 82.50%]: CrossEntropyWithSoftmax = 0.15810059 * 250; EvalErrorPrediction = 0.07200000 * 250; time = 0.0215s; samplesPerSecond = 11613.3
08/04/2016 06:13:36:  Epoch[ 3 of 3]-Minibatch[ 331- 340, 85.00%]: CrossEntropyWithSoftmax = 0.14149609 * 250; EvalErrorPrediction = 0.07600000 * 250; time = 0.0211s; samplesPerSecond = 11857.9
08/04/2016 06:13:36:  Epoch[ 3 of 3]-Minibatch[ 341- 350, 87.50%]: CrossEntropyWithSoftmax = 0.18146289 * 250; EvalErrorPrediction = 0.09200000 * 250; time = 0.0214s; samplesPerSecond = 11680.1
08/04/2016 06:13:36:  Epoch[ 3 of 3]-Minibatch[ 351- 360, 90.00%]: CrossEntropyWithSoftmax = 0.13763086 * 250; EvalErrorPrediction = 0.06000000 * 250; time = 0.0221s; samplesPerSecond = 11331.2
08/04/2016 06:13:36:  Epoch[ 3 of 3]-Minibatch[ 361- 370, 92.50%]: CrossEntropyWithSoftmax = 0.14693994 * 250; EvalErrorPrediction = 0.07600000 * 250; time = 0.0214s; samplesPerSecond = 11662.1
08/04/2016 06:13:36:  Epoch[ 3 of 3]-Minibatch[ 371- 380, 95.00%]: CrossEntropyWithSoftmax = 0.14701660 * 250; EvalErrorPrediction = 0.06000000 * 250; time = 0.0216s; samplesPerSecond = 11600.4
08/04/2016 06:13:36:  Epoch[ 3 of 3]-Minibatch[ 381- 390, 97.50%]: CrossEntropyWithSoftmax = 0.13530859 * 250; EvalErrorPrediction = 0.06000000 * 250; time = 0.0209s; samplesPerSecond = 11950.3
08/04/2016 06:13:36:  Epoch[ 3 of 3]-Minibatch[ 391- 400, 100.00%]: CrossEntropyWithSoftmax = 0.17790039 * 250; EvalErrorPrediction = 0.08400000 * 250; time = 0.0214s; samplesPerSecond = 11688.3
08/04/2016 06:13:36: Finished Epoch[ 3 of 3]: [Training] CrossEntropyWithSoftmax = 0.15905811 * 10000; EvalErrorPrediction = 0.07520000 * 10000; totalSamplesSeen = 30000; learningRatePerSample = 0.0080000004; epochTime=0.864596s
08/04/2016 06:13:36: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804061332.536810\Examples\Other\Simple2d_Simple@release_cpu/Models/simple.dnn'
08/04/2016 06:13:36: CNTKCommandTrainEnd: Simple_Demo_Train

08/04/2016 06:13:36: Action "train" complete.


08/04/2016 06:13:36: ##############################################################################
08/04/2016 06:13:36: #                                                                            #
08/04/2016 06:13:36: # Action "test"                                                              #
08/04/2016 06:13:36: #                                                                            #
08/04/2016 06:13:36: ##############################################################################


Post-processing network...

7 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	EvalErrorPrediction = ErrorPrediction()
	InvStdOfFeatures = InvStdDev()
	MeanOfFeatures = Mean()
	PosteriorProb = Softmax()
	Prior = Mean()
	ScaledLogLikelihood = Minus()

Validating network. 25 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [2 x *1]
Validating --> W2 = LearnableParameter() :  -> [2 x 50]
Validating --> W1 = LearnableParameter() :  -> [50 x 50]
Validating --> W0 = LearnableParameter() :  -> [50 x 2]
Validating --> features = InputValue() :  -> [2 x *1]
Validating --> MeanOfFeatures = Mean (features) : [2 x *1] -> [2]
Validating --> InvStdOfFeatures = InvStdDev (features) : [2 x *1] -> [2]
Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [2 x *1], [2], [2] -> [2 x *1]
Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [50 x 2], [2 x *1] -> [50 x *1]
Validating --> B0 = LearnableParameter() :  -> [50 x 1]
Validating --> W0*features+B0 = Plus (W0*features, B0) : [50 x *1], [50 x 1] -> [50 x 1 x *1]
Validating --> H1 = Sigmoid (W0*features+B0) : [50 x 1 x *1] -> [50 x 1 x *1]
Validating --> W1*H1 = Times (W1, H1) : [50 x 50], [50 x 1 x *1] -> [50 x 1 x *1]
Validating --> B1 = LearnableParameter() :  -> [50 x 1]
Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [50 x 1 x *1], [50 x 1] -> [50 x 1 x *1]
Validating --> H2 = Sigmoid (W1*H1+B1) : [50 x 1 x *1] -> [50 x 1 x *1]
Validating --> W2*H1 = Times (W2, H2) : [2 x 50], [50 x 1 x *1] -> [2 x 1 x *1]
Validating --> B2 = LearnableParameter() :  -> [2 x 1]
Validating --> HLast = Plus (W2*H1, B2) : [2 x 1 x *1], [2 x 1] -> [2 x 1 x *1]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [2 x *1], [2 x 1 x *1] -> [1]
Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [2 x *1], [2 x 1 x *1] -> [1]
Validating --> PosteriorProb = Softmax (HLast) : [2 x 1 x *1] -> [2 x 1 x *1]
Validating --> Prior = Mean (labels) : [2 x *1] -> [2]
Validating --> LogOfPrior = Log (Prior) : [2] -> [2]
Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [2 x 1 x *1], [2] -> [2 x 1 x *1]

Validating network. 17 nodes to process in pass 2.


Validating network, final pass.



12 out of 25 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

evalNodeNames are not specified, using all the default evalnodes and training criterion nodes.


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

0000000000000000: {[B0 Gradient[50 x 1]] [B1 Gradient[50 x 1]] [B2 Gradient[2 x 1]] [CrossEntropyWithSoftmax Gradient[1]] [EvalErrorPrediction Gradient[1]] [H1 Gradient[50 x 1 x *1]] [H2 Gradient[50 x 1 x *1]] [HLast Gradient[2 x 1 x *1]] [InvStdOfFeatures Gradient[2]] [LogOfPrior Gradient[2]] [MVNormalizedFeatures Gradient[2 x *1]] [MeanOfFeatures Gradient[2]] [PosteriorProb Gradient[2 x 1 x *1]] [PosteriorProb Value[2 x 1 x *1]] [Prior Gradient[2]] [ScaledLogLikelihood Gradient[2 x 1 x *1]] [ScaledLogLikelihood Value[2 x 1 x *1]] [W0 Gradient[50 x 2]] [W0*features Gradient[50 x *1]] [W0*features+B0 Gradient[50 x 1 x *1]] [W1 Gradient[50 x 50]] [W1*H1 Gradient[50 x 1 x *1]] [W1*H1+B1 Gradient[50 x 1 x *1]] [W2 Gradient[2 x 50]] [W2*H1 Gradient[2 x 1 x *1]] [features Gradient[2 x *1]] [labels Gradient[2 x *1]] }
000000EFB1DF4C60: {[B1 Value[50 x 1]] }
000000EFB1DF5340: {[InvStdOfFeatures Value[2]] }
000000EFB1DF5520: {[labels Value[2 x *1]] }
000000EFB1DF5840: {[MeanOfFeatures Value[2]] }
000000EFB1DF5CA0: {[B2 Value[2 x 1]] }
000000EFB1DF62E0: {[features Value[2 x *1]] }
000000EFB1DF66A0: {[B0 Value[50 x 1]] }
000000EFBA9248C0: {[W0*features Value[50 x *1]] }
000000EFBA924960: {[HLast Value[2 x 1 x *1]] }
000000EFBA924DC0: {[W0 Value[50 x 2]] }
000000EFBA924FA0: {[LogOfPrior Value[2]] }
000000EFBA925040: {[MVNormalizedFeatures Value[2 x *1]] }
000000EFBA925180: {[W1*H1+B1 Value[50 x 1 x *1]] }
000000EFBA925360: {[W1*H1 Value[50 x 1 x *1]] }
000000EFBA925400: {[H2 Value[50 x 1 x *1]] }
000000EFBA925540: {[Prior Value[2]] }
000000EFBA9255E0: {[W2 Value[2 x 50]] }
000000EFBA925680: {[W0*features+B0 Value[50 x 1 x *1]] }
000000EFBA925720: {[W1 Value[50 x 50]] }
000000EFBA9259A0: {[EvalErrorPrediction Value[1]] }
000000EFBA925CC0: {[W2*H1 Value[2 x 1 x *1]] }
000000EFBA925FE0: {[CrossEntropyWithSoftmax Value[1]] }
000000EFBA926080: {[H1 Value[50 x 1 x *1]] }

BlockRandomizer::StartEpoch: epoch 0: frames [0..603] (first sequence at sample 0), data subset 0 of 1
08/04/2016 06:13:36: Minibatch[1-1]: EvalErrorPrediction = 0.03150912 * 603; CrossEntropyWithSoftmax = 0.09041683 * 603
08/04/2016 06:13:36: Final Results: Minibatch[1-1]: EvalErrorPrediction = 0.03150912 * 603; CrossEntropyWithSoftmax = 0.09041683 * 603; perplexity = 1.09463047

08/04/2016 06:13:36: Action "test" complete.


08/04/2016 06:13:36: ##############################################################################
08/04/2016 06:13:36: #                                                                            #
08/04/2016 06:13:36: # Action "write"                                                             #
08/04/2016 06:13:36: #                                                                            #
08/04/2016 06:13:36: ##############################################################################


Post-processing network...

8 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	EvalErrorPrediction = ErrorPrediction()
	InvStdOfFeatures = InvStdDev()
	MeanOfFeatures = Mean()
	PosteriorProb = Softmax()
	Prior = Mean()
	ScaledLogLikelihood = Minus()
	labels = InputValue()

Validating network. 25 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [2 x *2]
Validating --> W2 = LearnableParameter() :  -> [2 x 50]
Validating --> W1 = LearnableParameter() :  -> [50 x 50]
Validating --> W0 = LearnableParameter() :  -> [50 x 2]
Validating --> features = InputValue() :  -> [2 x *2]
Validating --> MeanOfFeatures = Mean (features) : [2 x *2] -> [2]
Validating --> InvStdOfFeatures = InvStdDev (features) : [2 x *2] -> [2]
Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [2 x *2], [2], [2] -> [2 x *2]
Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [50 x 2], [2 x *2] -> [50 x *2]
Validating --> B0 = LearnableParameter() :  -> [50 x 1]
Validating --> W0*features+B0 = Plus (W0*features, B0) : [50 x *2], [50 x 1] -> [50 x 1 x *2]
Validating --> H1 = Sigmoid (W0*features+B0) : [50 x 1 x *2] -> [50 x 1 x *2]
Validating --> W1*H1 = Times (W1, H1) : [50 x 50], [50 x 1 x *2] -> [50 x 1 x *2]
Validating --> B1 = LearnableParameter() :  -> [50 x 1]
Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [50 x 1 x *2], [50 x 1] -> [50 x 1 x *2]
Validating --> H2 = Sigmoid (W1*H1+B1) : [50 x 1 x *2] -> [50 x 1 x *2]
Validating --> W2*H1 = Times (W2, H2) : [2 x 50], [50 x 1 x *2] -> [2 x 1 x *2]
Validating --> B2 = LearnableParameter() :  -> [2 x 1]
Validating --> HLast = Plus (W2*H1, B2) : [2 x 1 x *2], [2 x 1] -> [2 x 1 x *2]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [2 x *2], [2 x 1 x *2] -> [1]
Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [2 x *2], [2 x 1 x *2] -> [1]
Validating --> PosteriorProb = Softmax (HLast) : [2 x 1 x *2] -> [2 x 1 x *2]
Validating --> Prior = Mean (labels) : [2 x *2] -> [2]
Validating --> LogOfPrior = Log (Prior) : [2] -> [2]
Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [2 x 1 x *2], [2] -> [2 x 1 x *2]

Validating network. 17 nodes to process in pass 2.


Validating network, final pass.



12 out of 25 nodes do not share the minibatch layout with the input data.

Post-processing network complete.



Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

0000000000000000: {[B0 Gradient[50 x 1]] [B1 Gradient[50 x 1]] [B2 Gradient[2 x 1]] [CrossEntropyWithSoftmax Gradient[1]] [CrossEntropyWithSoftmax Value[1]] [EvalErrorPrediction Gradient[1]] [EvalErrorPrediction Value[1]] [H1 Gradient[50 x 1 x *2]] [H2 Gradient[50 x 1 x *2]] [HLast Gradient[2 x 1 x *2]] [InvStdOfFeatures Gradient[2]] [LogOfPrior Gradient[2]] [MVNormalizedFeatures Gradient[2 x *2]] [MeanOfFeatures Gradient[2]] [PosteriorProb Gradient[2 x 1 x *2]] [Prior Gradient[2]] [ScaledLogLikelihood Gradient[2 x 1 x *2]] [ScaledLogLikelihood Value[2 x 1 x *2]] [W0 Gradient[50 x 2]] [W0*features Gradient[50 x *2]] [W0*features+B0 Gradient[50 x 1 x *2]] [W1 Gradient[50 x 50]] [W1*H1 Gradient[50 x 1 x *2]] [W1*H1+B1 Gradient[50 x 1 x *2]] [W2 Gradient[2 x 50]] [W2*H1 Gradient[2 x 1 x *2]] [features Gradient[2 x *2]] [labels Gradient[2 x *2]] }
000000EFB1DF4EE0: {[B1 Value[50 x 1]] }
000000EFB1DF5200: {[features Value[2 x *2]] }
000000EFB1DF5480: {[MeanOfFeatures Value[2]] }
000000EFB1DF5980: {[labels Value[2 x *2]] }
000000EFB1DF6560: {[B0 Value[50 x 1]] }
000000EFB1DF6880: {[B2 Value[2 x 1]] }
000000EFB1DF69C0: {[InvStdOfFeatures Value[2]] }
000000EFBA93D810: {[W0*features+B0 Value[50 x 1 x *2]] }
000000EFBA93D9F0: {[Prior Value[2]] }
000000EFBA93DA90: {[W0 Value[50 x 2]] }
000000EFBA93DC70: {[W1*H1 Value[50 x 1 x *2]] }
000000EFBA93DD10: {[H2 Value[50 x 1 x *2]] }
000000EFBA93DDB0: {[W2*H1 Value[2 x 1 x *2]] }
000000EFBA93DE50: {[W0*features Value[50 x *2]] }
000000EFBA93E2B0: {[H1 Value[50 x 1 x *2]] }
000000EFBA93E5D0: {[MVNormalizedFeatures Value[2 x *2]] }
000000EFBA93E710: {[LogOfPrior Value[2]] }
000000EFBA93E8F0: {[PosteriorProb Value[2 x 1 x *2]] }
000000EFBA93E990: {[W1*H1+B1 Value[50 x 1 x *2]] }
000000EFBA93EA30: {[HLast Value[2 x 1 x *2]] }
000000EFBA93EC10: {[W1 Value[50 x 50]] }
000000EFBA93F110: {[W2 Value[2 x 50]] }

Minibatch[0]: ActualMBSize = 603
Written to C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804061332.536810\Examples\Other\Simple2d_Simple@release_cpu/SimpleOutput*
Total Samples Evaluated = 603

08/04/2016 06:13:36: Action "write" complete.

08/04/2016 06:13:36: __COMPLETED__