CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU E5-2630 v2 @ 2.60GHz
    Hardware threads: 24
    Total Memory: 264172964 kB
-------------------------------------------------------------------
=== Running mpiexec -n 2 /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/1bitsgd/release/bin/cntk configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/../ParallelBM/cntk.cntk currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data RunDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/.. OutputDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu DeviceId=0 timestamping=true numCPUThreads=12 precision=double speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]] stderr=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu/stderr
-------------------------------------------------------------------
Build info: 

		Built time: Aug  4 2016 13:07:13
		Last modified date: Thu Aug  4 10:38:25 2016
		Build type: release
		Build target: GPU
		With 1bit-SGD: yes
		Math lib: mkl
		CUDA_PATH: /usr/local/cuda-7.5
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local/cudnn-4.0
		Build Branch: HEAD
		Build SHA1: 0f61695dfc335f2406284d335678f57c215e6e9c
		Built by philly on ee6c20c358b8
		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
-------------------------------------------------------------------
-------------------------------------------------------------------
Build info: 

		Built time: Aug  4 2016 13:07:13
		Last modified date: Thu Aug  4 10:38:25 2016
		Build type: release
		Build target: GPU
		With 1bit-SGD: yes
		Math lib: mkl
		CUDA_PATH: /usr/local/cuda-7.5
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local/cudnn-4.0
		Build Branch: HEAD
		Build SHA1: 0f61695dfc335f2406284d335678f57c215e6e9c
		Built by philly on ee6c20c358b8
		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
-------------------------------------------------------------------
Changed current directory to /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
Changed current directory to /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPIWrapper: initializing MPI
MPIWrapper: initializing MPI
ping [requestnodes (before change)]: 2 nodes pinging each other
ping [requestnodes (before change)]: 2 nodes pinging each other
ping [requestnodes (before change)]: all 2 nodes responded
requestnodes [MPIWrapper]: using 2 out of 2 MPI nodes (2 requested); we (0) are in (participating)
ping [requestnodes (after change)]: 2 nodes pinging each other
ping [requestnodes (after change)]: all 2 nodes responded
mpihelper: we are cog 0 in a gearbox of 2
ping [mpihelper]: 2 nodes pinging each other
ping [requestnodes (before change)]: all 2 nodes responded
requestnodes [MPIWrapper]: using 2 out of 2 MPI nodes (2 requested); we (1) are in (participating)
ping [requestnodes (after change)]: 2 nodes pinging each other
ping [requestnodes (after change)]: all 2 nodes responded
mpihelper: we are cog 1 in a gearbox of 2
ping [mpihelper]: 2 nodes pinging each other
ping [mpihelper]: all 2 nodes responded
ping [mpihelper]: all 2 nodes responded
08/04/2016 14:00:21: Redirecting stderr to file /tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu/stderr_speechTrain.logrank0
08/04/2016 14:00:21: Redirecting stderr to file /tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu/stderr_speechTrain.logrank1
MPI Rank 0: 08/04/2016 14:00:21: -------------------------------------------------------------------
MPI Rank 0: 08/04/2016 14:00:21: Build info: 
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:21: 		Built time: Aug  4 2016 13:07:13
MPI Rank 0: 08/04/2016 14:00:21: 		Last modified date: Thu Aug  4 10:38:25 2016
MPI Rank 0: 08/04/2016 14:00:21: 		Build type: release
MPI Rank 0: 08/04/2016 14:00:21: 		Build target: GPU
MPI Rank 0: 08/04/2016 14:00:21: 		With 1bit-SGD: yes
MPI Rank 0: 08/04/2016 14:00:21: 		Math lib: mkl
MPI Rank 0: 08/04/2016 14:00:21: 		CUDA_PATH: /usr/local/cuda-7.5
MPI Rank 0: 08/04/2016 14:00:21: 		CUB_PATH: /usr/local/cub-1.4.1
MPI Rank 0: 08/04/2016 14:00:21: 		CUDNN_PATH: /usr/local/cudnn-4.0
MPI Rank 0: 08/04/2016 14:00:21: 		Build Branch: HEAD
MPI Rank 0: 08/04/2016 14:00:21: 		Build SHA1: 0f61695dfc335f2406284d335678f57c215e6e9c
MPI Rank 0: 08/04/2016 14:00:21: 		Built by philly on ee6c20c358b8
MPI Rank 0: 08/04/2016 14:00:21: 		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
MPI Rank 0: 08/04/2016 14:00:21: -------------------------------------------------------------------
MPI Rank 0: 08/04/2016 14:00:22: -------------------------------------------------------------------
MPI Rank 0: 08/04/2016 14:00:22: GPU info:
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:22: 		Device[0]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
MPI Rank 0: 08/04/2016 14:00:22: 		Device[1]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
MPI Rank 0: 08/04/2016 14:00:22: 		Device[2]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
MPI Rank 0: 08/04/2016 14:00:22: -------------------------------------------------------------------
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:22: Running on localhost at 2016/08/04 14:00:22
MPI Rank 0: 08/04/2016 14:00:22: Command line: 
MPI Rank 0: /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/1bitsgd/release/bin/cntk  configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/../ParallelBM/cntk.cntk  currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data  RunDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu  DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data  ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..  OutputDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu  DeviceId=0  timestamping=true  numCPUThreads=12  precision=double  speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]  stderr=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu/stderr
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:22: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: 08/04/2016 14:00:22: precision = "float"
MPI Rank 0: command = speechTrain
MPI Rank 0: deviceId = $DeviceId$
MPI Rank 0: parallelTrain = true
MPI Rank 0: speechTrain = [
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "$RunDir$/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = $DeviceId$
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 blockSizePerWorker=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "$DataDir$/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "$DataDir$/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ]
MPI Rank 0: currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: RunDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu
MPI Rank 0: DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 0: OutputDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu
MPI Rank 0: DeviceId=0
MPI Rank 0: timestamping=true
MPI Rank 0: numCPUThreads=12
MPI Rank 0: precision=double
MPI Rank 0: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: stderr=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu/stderr
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:22: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:22: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: 08/04/2016 14:00:22: precision = "float"
MPI Rank 0: command = speechTrain
MPI Rank 0: deviceId = 0
MPI Rank 0: parallelTrain = true
MPI Rank 0: speechTrain = [
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = 0
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 blockSizePerWorker=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ]
MPI Rank 0: currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: RunDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu
MPI Rank 0: DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 0: OutputDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu
MPI Rank 0: DeviceId=0
MPI Rank 0: timestamping=true
MPI Rank 0: numCPUThreads=12
MPI Rank 0: precision=double
MPI Rank 0: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: stderr=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu/stderr
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:22: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:22: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: configparameters: cntk.cntk:command=speechTrain
MPI Rank 0: configparameters: cntk.cntk:ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 0: configparameters: cntk.cntk:currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: configparameters: cntk.cntk:DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: configparameters: cntk.cntk:deviceId=0
MPI Rank 0: configparameters: cntk.cntk:numCPUThreads=12
MPI Rank 0: configparameters: cntk.cntk:OutputDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu
MPI Rank 0: configparameters: cntk.cntk:parallelTrain=true
MPI Rank 0: configparameters: cntk.cntk:precision=double
MPI Rank 0: configparameters: cntk.cntk:RunDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu
MPI Rank 0: configparameters: cntk.cntk:speechTrain=[
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = 0
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 blockSizePerWorker=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ] [SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: 
MPI Rank 0: configparameters: cntk.cntk:stderr=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu/stderr
MPI Rank 0: configparameters: cntk.cntk:timestamping=true
MPI Rank 0: 08/04/2016 14:00:22: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 08/04/2016 14:00:22: Commands: speechTrain
MPI Rank 0: 08/04/2016 14:00:22: Precision = "double"
MPI Rank 0: 08/04/2016 14:00:22: Using 12 CPU threads.
MPI Rank 0: 08/04/2016 14:00:22: CNTKModelPath: /tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn
MPI Rank 0: 08/04/2016 14:00:22: CNTKCommandTrainInfo: speechTrain : 5
MPI Rank 0: 08/04/2016 14:00:22: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 5
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:22: ##############################################################################
MPI Rank 0: 08/04/2016 14:00:22: #                                                                            #
MPI Rank 0: 08/04/2016 14:00:22: # Action "train"                                                             #
MPI Rank 0: 08/04/2016 14:00:22: #                                                                            #
MPI Rank 0: 08/04/2016 14:00:22: ##############################################################################
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:22: CNTKCommandTrainBegin: speechTrain
MPI Rank 0: SimpleNetworkBuilder Using GPU 0
MPI Rank 0: reading script file glob_0000.scp ... 948 entries
MPI Rank 0: total 132 state names in state list /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list
MPI Rank 0: htkmlfreader: reading MLF file /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf ... total 948 entries
MPI Rank 0: ...............................................................................................feature set 0: 252734 frames in 948 out of 948 utterances
MPI Rank 0: label set 0: 129 classes
MPI Rank 0: minibatchutterancesource: 948 utterances grouped into 3 chunks, av. chunk size: 316.0 utterances, 84244.7 frames
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:22: Creating virgin network.
MPI Rank 0: SetUniformRandomValue (GPU): creating curand object with seed 1, sizeof(ElemType)==8
MPI Rank 0: 
MPI Rank 0: Post-processing network...
MPI Rank 0: 
MPI Rank 0: 7 roots:
MPI Rank 0: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
MPI Rank 0: 	EvalErrorPrediction = ErrorPrediction()
MPI Rank 0: 	InvStdOfFeatures = InvStdDev()
MPI Rank 0: 	MeanOfFeatures = Mean()
MPI Rank 0: 	PosteriorProb = Softmax()
MPI Rank 0: 	Prior = Mean()
MPI Rank 0: 	ScaledLogLikelihood = Minus()
MPI Rank 0: 
MPI Rank 0: Validating network. 25 nodes to process in pass 1.
MPI Rank 0: 
MPI Rank 0: Validating --> labels = InputValue() :  -> [132 x *]
MPI Rank 0: Validating --> W2 = LearnableParameter() :  -> [132 x 512]
MPI Rank 0: Validating --> W1 = LearnableParameter() :  -> [512 x 512]
MPI Rank 0: Validating --> W0 = LearnableParameter() :  -> [512 x 363]
MPI Rank 0: Validating --> features = InputValue() :  -> [363 x *]
MPI Rank 0: Validating --> MeanOfFeatures = Mean (features) : [363 x *] -> [363]
MPI Rank 0: Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *] -> [363]
MPI Rank 0: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *], [363], [363] -> [363 x *]
MPI Rank 0: Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [512 x 363], [363 x *] -> [512 x *]
MPI Rank 0: Validating --> B0 = LearnableParameter() :  -> [512 x 1]
MPI Rank 0: Validating --> W0*features+B0 = Plus (W0*features, B0) : [512 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 0: Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> W1*H1 = Times (W1, H1) : [512 x 512], [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> B1 = LearnableParameter() :  -> [512 x 1]
MPI Rank 0: Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [512 x 1 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 0: Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> W2*H1 = Times (W2, H2) : [132 x 512], [512 x 1 x *] -> [132 x 1 x *]
MPI Rank 0: Validating --> B2 = LearnableParameter() :  -> [132 x 1]
MPI Rank 0: Validating --> HLast = Plus (W2*H1, B2) : [132 x 1 x *], [132 x 1] -> [132 x 1 x *]
MPI Rank 0: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 0: Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 0: Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *] -> [132 x 1 x *]
MPI Rank 0: Validating --> Prior = Mean (labels) : [132 x *] -> [132]
MPI Rank 0: Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
MPI Rank 0: Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *], [132] -> [132 x 1 x *]
MPI Rank 0: 
MPI Rank 0: Validating network. 17 nodes to process in pass 2.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: Validating network, final pass.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 12 out of 25 nodes do not share the minibatch layout with the input data.
MPI Rank 0: 
MPI Rank 0: Post-processing network complete.
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:22: Created model with 25 nodes on GPU 0.
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:22: Training criterion node(s):
MPI Rank 0: 08/04/2016 14:00:22: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:22: Evaluation criterion node(s):
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:22: 	EvalErrorPrediction = ErrorPrediction
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: Allocating matrices for forward and/or backward propagation.
MPI Rank 0: 
MPI Rank 0: Memory Sharing Structure:
MPI Rank 0: 
MPI Rank 0: (nil): {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[363]] [LogOfPrior Gradient[132]] [MVNormalizedFeatures Gradient[363 x *]] [MeanOfFeatures Gradient[363]] [PosteriorProb Gradient[132 x 1 x *]] [PosteriorProb Value[132 x 1 x *]] [Prior Gradient[132]] [ScaledLogLikelihood Gradient[132 x 1 x *]] [features Gradient[363 x *]] [labels Gradient[132 x *]] }
MPI Rank 0: 0x16cdd08: {[features Value[363 x *]] }
MPI Rank 0: 0x2708868: {[MeanOfFeatures Value[363]] }
MPI Rank 0: 0x2708d48: {[InvStdOfFeatures Value[363]] }
MPI Rank 0: 0x2709a08: {[W0 Value[512 x 363]] }
MPI Rank 0: 0x28eaae8: {[B2 Value[132 x 1]] }
MPI Rank 0: 0x28eb8f8: {[labels Value[132 x *]] }
MPI Rank 0: 0x28ecb48: {[Prior Value[132]] }
MPI Rank 0: 0x28f24a8: {[EvalErrorPrediction Value[1]] }
MPI Rank 0: 0x28f26f8: {[ScaledLogLikelihood Value[132 x 1 x *]] }
MPI Rank 0: 0x28f2858: {[CrossEntropyWithSoftmax Value[1]] }
MPI Rank 0: 0x28f2ce8: {[W0 Gradient[512 x 363]] [W0*features+B0 Value[512 x 1 x *]] }
MPI Rank 0: 0x28f2de8: {[H1 Value[512 x 1 x *]] [W0*features Gradient[512 x *]] }
MPI Rank 0: 0x28f2e98: {[LogOfPrior Value[132]] }
MPI Rank 0: 0x28f49c8: {[B0 Value[512 x 1]] }
MPI Rank 0: 0x28f6b58: {[W1 Value[512 x 512]] }
MPI Rank 0: 0x28f7938: {[B1 Value[512 x 1]] }
MPI Rank 0: 0x28f8af8: {[W2 Value[132 x 512]] }
MPI Rank 0: 0x2bd45e8: {[MVNormalizedFeatures Value[363 x *]] }
MPI Rank 0: 0x2bd4da8: {[W0*features Value[512 x *]] }
MPI Rank 0: 0x2bd5078: {[W0*features+B0 Gradient[512 x 1 x *]] [W1*H1 Value[512 x 1 x *]] }
MPI Rank 0: 0x2bd5238: {[W1 Gradient[512 x 512]] [W1*H1+B1 Value[512 x 1 x *]] }
MPI Rank 0: 0x2bd53f8: {[H2 Value[512 x 1 x *]] [W1*H1 Gradient[512 x 1 x *]] }
MPI Rank 0: 0x2bd55b8: {[B0 Gradient[512 x 1]] [H1 Gradient[512 x 1 x *]] [W1*H1+B1 Gradient[512 x 1 x *]] [W2*H1 Value[132 x 1 x *]] }
MPI Rank 0: 0x2bd5778: {[HLast Value[132 x 1 x *]] [W2 Gradient[132 x 512]] }
MPI Rank 0: 0x2bd62d8: {[CrossEntropyWithSoftmax Gradient[1]] }
MPI Rank 0: 0x2bd6498: {[B1 Gradient[512 x 1]] [H2 Gradient[512 x 1 x *]] [HLast Gradient[132 x 1 x *]] }
MPI Rank 0: 0x2bd6658: {[W2*H1 Gradient[132 x 1 x *]] }
MPI Rank 0: 0x2bd6818: {[B2 Gradient[132 x 1]] }
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:22: Precomputing --> 3 PreCompute nodes found.
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:22: 	MeanOfFeatures = Mean()
MPI Rank 0: 08/04/2016 14:00:22: 	InvStdOfFeatures = InvStdDev()
MPI Rank 0: 08/04/2016 14:00:22: 	Prior = Mean()
MPI Rank 0: minibatchiterator: epoch 0: frames [0..252734] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 0: requiredata: determined feature kind as 33-dimensional 'USER' with frame shift 10.0 ms
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:25: Precomputing --> Completed.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:25: Starting Epoch 1: learning rate per sample = 0.015625  effective momentum = 0.900000  momentum as time constant = 607.4 samples
MPI Rank 0: minibatchiterator: epoch 0: frames [0..20480] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:25: Starting minibatch loop.
MPI Rank 0: 08/04/2016 14:00:25:  Epoch[ 1 of 5]-Minibatch[   1-   3, 0.94%]: CrossEntropyWithSoftmax = 4.75753123 * 192; EvalErrorPrediction = 0.95833333 * 192; time = 0.0195s; samplesPerSecond = 9848.2
MPI Rank 0: 08/04/2016 14:00:25:  Epoch[ 1 of 5]-Minibatch[   4-   6, 1.88%]: CrossEntropyWithSoftmax = 4.52346672 * 192; EvalErrorPrediction = 0.94270833 * 192; time = 0.0184s; samplesPerSecond = 10432.5
MPI Rank 0: 08/04/2016 14:00:25:  Epoch[ 1 of 5]-Minibatch[   7-   9, 2.81%]: CrossEntropyWithSoftmax = 4.53919276 * 192; EvalErrorPrediction = 0.94791667 * 192; time = 0.0184s; samplesPerSecond = 10427.4
MPI Rank 0: 08/04/2016 14:00:25:  Epoch[ 1 of 5]-Minibatch[  10-  12, 3.75%]: CrossEntropyWithSoftmax = 4.07985813 * 192; EvalErrorPrediction = 0.91145833 * 192; time = 0.0184s; samplesPerSecond = 10427.4
MPI Rank 0: 08/04/2016 14:00:25:  Epoch[ 1 of 5]-Minibatch[  13-  15, 4.69%]: CrossEntropyWithSoftmax = 4.36802377 * 192; EvalErrorPrediction = 0.89583333 * 192; time = 0.0184s; samplesPerSecond = 10428.5
MPI Rank 0: 08/04/2016 14:00:25:  Epoch[ 1 of 5]-Minibatch[  16-  18, 5.62%]: CrossEntropyWithSoftmax = 4.46618540 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.0184s; samplesPerSecond = 10428.5
MPI Rank 0: 08/04/2016 14:00:25:  Epoch[ 1 of 5]-Minibatch[  19-  21, 6.56%]: CrossEntropyWithSoftmax = 4.16931089 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.0184s; samplesPerSecond = 10425.7
MPI Rank 0: 08/04/2016 14:00:25:  Epoch[ 1 of 5]-Minibatch[  22-  24, 7.50%]: CrossEntropyWithSoftmax = 4.02382530 * 192; EvalErrorPrediction = 0.90104167 * 192; time = 0.0184s; samplesPerSecond = 10412.1
MPI Rank 0: 08/04/2016 14:00:25:  Epoch[ 1 of 5]-Minibatch[  25-  27, 8.44%]: CrossEntropyWithSoftmax = 4.05445487 * 192; EvalErrorPrediction = 0.88020833 * 192; time = 0.0184s; samplesPerSecond = 10432.5
MPI Rank 0: 08/04/2016 14:00:25:  Epoch[ 1 of 5]-Minibatch[  28-  30, 9.38%]: CrossEntropyWithSoftmax = 3.89305671 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 0.0184s; samplesPerSecond = 10416.7
MPI Rank 0: 08/04/2016 14:00:25:  Epoch[ 1 of 5]-Minibatch[  31-  33, 10.31%]: CrossEntropyWithSoftmax = 4.02209842 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.0184s; samplesPerSecond = 10413.8
MPI Rank 0: 08/04/2016 14:00:25:  Epoch[ 1 of 5]-Minibatch[  34-  36, 11.25%]: CrossEntropyWithSoftmax = 3.91036430 * 192; EvalErrorPrediction = 0.86979167 * 192; time = 0.0184s; samplesPerSecond = 10426.8
MPI Rank 0: 08/04/2016 14:00:25:  Epoch[ 1 of 5]-Minibatch[  37-  39, 12.19%]: CrossEntropyWithSoftmax = 3.84805452 * 192; EvalErrorPrediction = 0.85937500 * 192; time = 0.0184s; samplesPerSecond = 10426.8
MPI Rank 0: 08/04/2016 14:00:25:  Epoch[ 1 of 5]-Minibatch[  40-  42, 13.12%]: CrossEntropyWithSoftmax = 3.80726858 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.0184s; samplesPerSecond = 10421.2
MPI Rank 0: 08/04/2016 14:00:25:  Epoch[ 1 of 5]-Minibatch[  43-  45, 14.06%]: CrossEntropyWithSoftmax = 3.72193150 * 192; EvalErrorPrediction = 0.86979167 * 192; time = 0.0184s; samplesPerSecond = 10426.3
MPI Rank 0: 08/04/2016 14:00:25:  Epoch[ 1 of 5]-Minibatch[  46-  48, 15.00%]: CrossEntropyWithSoftmax = 3.71906777 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 0.0184s; samplesPerSecond = 10432.5
MPI Rank 0: 08/04/2016 14:00:25:  Epoch[ 1 of 5]-Minibatch[  49-  51, 15.94%]: CrossEntropyWithSoftmax = 3.79507786 * 192; EvalErrorPrediction = 0.85937500 * 192; time = 0.0184s; samplesPerSecond = 10420.6
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[  52-  54, 16.88%]: CrossEntropyWithSoftmax = 3.79610654 * 192; EvalErrorPrediction = 0.88020833 * 192; time = 0.0184s; samplesPerSecond = 10427.4
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[  55-  57, 17.81%]: CrossEntropyWithSoftmax = 3.89841042 * 192; EvalErrorPrediction = 0.86979167 * 192; time = 0.0184s; samplesPerSecond = 10423.5
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[  58-  60, 18.75%]: CrossEntropyWithSoftmax = 3.63159420 * 192; EvalErrorPrediction = 0.86979167 * 192; time = 0.0184s; samplesPerSecond = 10424.0
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[  61-  63, 19.69%]: CrossEntropyWithSoftmax = 3.60704590 * 192; EvalErrorPrediction = 0.81250000 * 192; time = 0.0184s; samplesPerSecond = 10426.8
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[  64-  66, 20.62%]: CrossEntropyWithSoftmax = 3.44549344 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 0.0184s; samplesPerSecond = 10410.5
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[  67-  69, 21.56%]: CrossEntropyWithSoftmax = 3.70529241 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.0184s; samplesPerSecond = 10433.6
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[  70-  72, 22.50%]: CrossEntropyWithSoftmax = 3.43741033 * 192; EvalErrorPrediction = 0.79166667 * 192; time = 0.0184s; samplesPerSecond = 10425.2
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[  73-  75, 23.44%]: CrossEntropyWithSoftmax = 3.37944332 * 192; EvalErrorPrediction = 0.81250000 * 192; time = 0.0184s; samplesPerSecond = 10440.5
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[  76-  78, 24.38%]: CrossEntropyWithSoftmax = 3.43534073 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.0184s; samplesPerSecond = 10419.5
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[  79-  81, 25.31%]: CrossEntropyWithSoftmax = 3.37121589 * 192; EvalErrorPrediction = 0.82291667 * 192; time = 0.0184s; samplesPerSecond = 10424.6
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[  82-  84, 26.25%]: CrossEntropyWithSoftmax = 3.55975850 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.0184s; samplesPerSecond = 10418.9
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[  85-  87, 27.19%]: CrossEntropyWithSoftmax = 3.56430173 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.0184s; samplesPerSecond = 10431.9
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[  88-  90, 28.12%]: CrossEntropyWithSoftmax = 3.24770444 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.0184s; samplesPerSecond = 10425.7
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[  91-  93, 29.06%]: CrossEntropyWithSoftmax = 3.52691776 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 0.0184s; samplesPerSecond = 10418.4
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[  94-  96, 30.00%]: CrossEntropyWithSoftmax = 3.30961054 * 192; EvalErrorPrediction = 0.79166667 * 192; time = 0.0184s; samplesPerSecond = 10423.5
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[  97-  99, 30.94%]: CrossEntropyWithSoftmax = 3.31256725 * 192; EvalErrorPrediction = 0.79166667 * 192; time = 0.0184s; samplesPerSecond = 10427.4
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 100- 102, 31.87%]: CrossEntropyWithSoftmax = 3.42063469 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.0184s; samplesPerSecond = 10416.7
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 103- 105, 32.81%]: CrossEntropyWithSoftmax = 3.50669976 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 0.0184s; samplesPerSecond = 10430.8
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 106- 108, 33.75%]: CrossEntropyWithSoftmax = 3.42987849 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.0184s; samplesPerSecond = 10421.2
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 109- 111, 34.69%]: CrossEntropyWithSoftmax = 3.19770439 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.0184s; samplesPerSecond = 10424.6
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 112- 114, 35.62%]: CrossEntropyWithSoftmax = 3.11421415 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.0184s; samplesPerSecond = 10418.4
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 115- 117, 36.56%]: CrossEntropyWithSoftmax = 2.91744742 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0184s; samplesPerSecond = 10424.0
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 118- 120, 37.50%]: CrossEntropyWithSoftmax = 3.18073355 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0184s; samplesPerSecond = 10422.3
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 121- 123, 38.44%]: CrossEntropyWithSoftmax = 3.20812063 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.0184s; samplesPerSecond = 10427.4
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 124- 126, 39.38%]: CrossEntropyWithSoftmax = 3.11795416 * 192; EvalErrorPrediction = 0.71354167 * 192; time = 0.0184s; samplesPerSecond = 10423.5
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 127- 129, 40.31%]: CrossEntropyWithSoftmax = 3.20472785 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 0.0184s; samplesPerSecond = 10425.7
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 130- 132, 41.25%]: CrossEntropyWithSoftmax = 3.02016452 * 192; EvalErrorPrediction = 0.72395833 * 192; time = 0.0184s; samplesPerSecond = 10428.5
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 133- 135, 42.19%]: CrossEntropyWithSoftmax = 3.32051194 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0184s; samplesPerSecond = 10427.4
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 136- 138, 43.12%]: CrossEntropyWithSoftmax = 3.04799826 * 192; EvalErrorPrediction = 0.74479167 * 192; time = 0.0184s; samplesPerSecond = 10423.5
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 139- 141, 44.06%]: CrossEntropyWithSoftmax = 2.86527306 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0184s; samplesPerSecond = 10418.9
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 142- 144, 45.00%]: CrossEntropyWithSoftmax = 3.10455502 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 0.0184s; samplesPerSecond = 10415.0
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 145- 147, 45.94%]: CrossEntropyWithSoftmax = 3.23688957 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0184s; samplesPerSecond = 10421.2
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 148- 150, 46.88%]: CrossEntropyWithSoftmax = 2.82572328 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0184s; samplesPerSecond = 10429.1
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 151- 153, 47.81%]: CrossEntropyWithSoftmax = 3.02639422 * 192; EvalErrorPrediction = 0.77083333 * 192; time = 0.0184s; samplesPerSecond = 10415.5
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 154- 156, 48.75%]: CrossEntropyWithSoftmax = 3.02072952 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0184s; samplesPerSecond = 10425.7
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 157- 159, 49.69%]: CrossEntropyWithSoftmax = 3.04646926 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0184s; samplesPerSecond = 10420.6
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 160- 162, 50.62%]: CrossEntropyWithSoftmax = 3.11199357 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.0184s; samplesPerSecond = 10424.6
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 163- 165, 51.56%]: CrossEntropyWithSoftmax = 3.06844023 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0184s; samplesPerSecond = 10415.5
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 166- 168, 52.50%]: CrossEntropyWithSoftmax = 2.79676651 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.0184s; samplesPerSecond = 10424.6
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 169- 171, 53.44%]: CrossEntropyWithSoftmax = 2.88325303 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 0.0184s; samplesPerSecond = 10422.9
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 172- 174, 54.37%]: CrossEntropyWithSoftmax = 2.95502023 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0184s; samplesPerSecond = 10434.2
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 175- 177, 55.31%]: CrossEntropyWithSoftmax = 2.72193165 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0184s; samplesPerSecond = 10409.9
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 178- 180, 56.25%]: CrossEntropyWithSoftmax = 2.73032177 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0184s; samplesPerSecond = 10426.3
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 181- 183, 57.19%]: CrossEntropyWithSoftmax = 2.78240341 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0184s; samplesPerSecond = 10417.8
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 184- 186, 58.13%]: CrossEntropyWithSoftmax = 2.85209658 * 192; EvalErrorPrediction = 0.71875000 * 192; time = 0.0184s; samplesPerSecond = 10414.4
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 187- 189, 59.06%]: CrossEntropyWithSoftmax = 2.85994717 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0185s; samplesPerSecond = 10394.7
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 190- 192, 60.00%]: CrossEntropyWithSoftmax = 2.87532953 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0184s; samplesPerSecond = 10422.3
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 193- 195, 60.94%]: CrossEntropyWithSoftmax = 2.65994146 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0184s; samplesPerSecond = 10416.1
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 196- 198, 61.88%]: CrossEntropyWithSoftmax = 2.61193397 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0179s; samplesPerSecond = 10752.1
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 199- 201, 62.81%]: CrossEntropyWithSoftmax = 2.65584290 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.0171s; samplesPerSecond = 11239.9
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 202- 204, 63.75%]: CrossEntropyWithSoftmax = 2.85889340 * 192; EvalErrorPrediction = 0.71875000 * 192; time = 0.0184s; samplesPerSecond = 10421.8
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 205- 207, 64.69%]: CrossEntropyWithSoftmax = 2.73678257 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.0184s; samplesPerSecond = 10423.5
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 208- 210, 65.62%]: CrossEntropyWithSoftmax = 2.79029130 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0184s; samplesPerSecond = 10422.3
MPI Rank 0: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 211- 213, 66.56%]: CrossEntropyWithSoftmax = 2.79023222 * 192; EvalErrorPrediction = 0.75000000 * 192; time = 0.0184s; samplesPerSecond = 10429.1
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 214- 216, 67.50%]: CrossEntropyWithSoftmax = 2.71961189 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.0184s; samplesPerSecond = 10449.0
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 217- 219, 68.44%]: CrossEntropyWithSoftmax = 2.39883393 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0185s; samplesPerSecond = 10405.9
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 220- 222, 69.38%]: CrossEntropyWithSoftmax = 2.44922642 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0184s; samplesPerSecond = 10433.6
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 223- 225, 70.31%]: CrossEntropyWithSoftmax = 2.58579114 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.0184s; samplesPerSecond = 10422.3
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 226- 228, 71.25%]: CrossEntropyWithSoftmax = 2.59000443 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0184s; samplesPerSecond = 10422.3
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 229- 231, 72.19%]: CrossEntropyWithSoftmax = 2.51957284 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0184s; samplesPerSecond = 10425.7
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 232- 234, 73.12%]: CrossEntropyWithSoftmax = 2.44297254 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0184s; samplesPerSecond = 10417.8
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 235- 237, 74.06%]: CrossEntropyWithSoftmax = 2.55342763 * 192; EvalErrorPrediction = 0.67187500 * 192; time = 0.0184s; samplesPerSecond = 10419.5
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 238- 240, 75.00%]: CrossEntropyWithSoftmax = 2.23889842 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0184s; samplesPerSecond = 10420.1
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 241- 243, 75.94%]: CrossEntropyWithSoftmax = 2.57037103 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0184s; samplesPerSecond = 10415.5
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 244- 246, 76.88%]: CrossEntropyWithSoftmax = 2.48165344 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0184s; samplesPerSecond = 10421.8
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 247- 249, 77.81%]: CrossEntropyWithSoftmax = 2.33221339 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.0184s; samplesPerSecond = 10407.6
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 250- 252, 78.75%]: CrossEntropyWithSoftmax = 2.48291671 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0184s; samplesPerSecond = 10421.2
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 253- 255, 79.69%]: CrossEntropyWithSoftmax = 2.33755124 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0185s; samplesPerSecond = 10382.9
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 256- 258, 80.62%]: CrossEntropyWithSoftmax = 2.53305608 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.0184s; samplesPerSecond = 10413.8
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 259- 261, 81.56%]: CrossEntropyWithSoftmax = 2.32593640 * 192; EvalErrorPrediction = 0.67187500 * 192; time = 0.0184s; samplesPerSecond = 10416.1
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 262- 264, 82.50%]: CrossEntropyWithSoftmax = 2.39802742 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0184s; samplesPerSecond = 10416.7
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 265- 267, 83.44%]: CrossEntropyWithSoftmax = 2.09161261 * 192; EvalErrorPrediction = 0.56250000 * 192; time = 0.0184s; samplesPerSecond = 10411.6
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 268- 270, 84.38%]: CrossEntropyWithSoftmax = 2.37188248 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0184s; samplesPerSecond = 10421.2
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 271- 273, 85.31%]: CrossEntropyWithSoftmax = 2.42025573 * 192; EvalErrorPrediction = 0.60937500 * 192; time = 0.0184s; samplesPerSecond = 10410.5
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 274- 276, 86.25%]: CrossEntropyWithSoftmax = 2.69930022 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.0184s; samplesPerSecond = 10407.6
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 277- 279, 87.19%]: CrossEntropyWithSoftmax = 2.14700044 * 192; EvalErrorPrediction = 0.54687500 * 192; time = 0.0184s; samplesPerSecond = 10421.8
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 280- 282, 88.12%]: CrossEntropyWithSoftmax = 2.48209132 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0184s; samplesPerSecond = 10417.8
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 283- 285, 89.06%]: CrossEntropyWithSoftmax = 2.40099538 * 192; EvalErrorPrediction = 0.59375000 * 192; time = 0.0184s; samplesPerSecond = 10426.8
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 286- 288, 90.00%]: CrossEntropyWithSoftmax = 2.43650120 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0184s; samplesPerSecond = 10422.3
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 289- 291, 90.94%]: CrossEntropyWithSoftmax = 2.18969205 * 192; EvalErrorPrediction = 0.55208333 * 192; time = 0.0184s; samplesPerSecond = 10419.5
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 292- 294, 91.88%]: CrossEntropyWithSoftmax = 2.14137919 * 192; EvalErrorPrediction = 0.58854167 * 192; time = 0.0184s; samplesPerSecond = 10420.1
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 295- 297, 92.81%]: CrossEntropyWithSoftmax = 2.07609863 * 192; EvalErrorPrediction = 0.59375000 * 192; time = 0.0184s; samplesPerSecond = 10431.4
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 298- 300, 93.75%]: CrossEntropyWithSoftmax = 2.38633462 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.0184s; samplesPerSecond = 10425.2
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 301- 303, 94.69%]: CrossEntropyWithSoftmax = 2.25116819 * 192; EvalErrorPrediction = 0.57812500 * 192; time = 0.0184s; samplesPerSecond = 10423.5
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 304- 306, 95.62%]: CrossEntropyWithSoftmax = 2.39758335 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.0184s; samplesPerSecond = 10421.8
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 307- 309, 96.56%]: CrossEntropyWithSoftmax = 2.21459239 * 192; EvalErrorPrediction = 0.60937500 * 192; time = 0.0184s; samplesPerSecond = 10426.8
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 310- 312, 97.50%]: CrossEntropyWithSoftmax = 2.18911109 * 192; EvalErrorPrediction = 0.55729167 * 192; time = 0.0184s; samplesPerSecond = 10421.8
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 313- 315, 98.44%]: CrossEntropyWithSoftmax = 2.14740149 * 192; EvalErrorPrediction = 0.55208333 * 192; time = 0.0184s; samplesPerSecond = 10426.3
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 316- 318, 99.38%]: CrossEntropyWithSoftmax = 2.24498948 * 192; EvalErrorPrediction = 0.59375000 * 192; time = 0.0184s; samplesPerSecond = 10422.9
MPI Rank 0: 08/04/2016 14:00:27: Finished Epoch[ 1 of 5]: [Training] CrossEntropyWithSoftmax = 3.03956016 * 20480; EvalErrorPrediction = 0.73344727 * 20480; totalSamplesSeen = 20480; learningRatePerSample = 0.015625; epochTime=1.97216s
MPI Rank 0: 08/04/2016 14:00:27: SGD: Saving checkpoint model '/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn.1'
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:27: Starting Epoch 2: learning rate per sample = 0.001953  effective momentum = 0.656119  momentum as time constant = 607.5 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 1: frames [20480..40960] (first utterance at frame 20480), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:27: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 2 of 5]-Minibatch[   1-   3, 3.75%]: CrossEntropyWithSoftmax = 2.11182347 * 497; EvalErrorPrediction = 0.58551308 * 497; time = 0.0233s; samplesPerSecond = 21346.0
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 2 of 5]-Minibatch[   4-   6, 7.50%]: CrossEntropyWithSoftmax = 2.11146349 * 513; EvalErrorPrediction = 0.57504873 * 513; time = 0.0316s; samplesPerSecond = 16224.4
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 2 of 5]-Minibatch[   7-   9, 11.25%]: CrossEntropyWithSoftmax = 2.21734929 * 488; EvalErrorPrediction = 0.60450820 * 488; time = 0.0208s; samplesPerSecond = 23496.6
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 2 of 5]-Minibatch[  10-  12, 15.00%]: CrossEntropyWithSoftmax = 2.03763784 * 486; EvalErrorPrediction = 0.56995885 * 486; time = 0.0266s; samplesPerSecond = 18256.3
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.04-seconds latency this time; accumulated time on sync point = 0.04 seconds , average latency = 0.04 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     0.16 seconds since last report (0.00 seconds on comm.); 4262 samples processed by 2 workers (2142 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 26.87k samplesPerSecond , throughputPerWorker = 13.43k samplesPerSecond
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 2 of 5]-Minibatch[  13-  15, 18.75%]: CrossEntropyWithSoftmax = 2.17292511 * 478; EvalErrorPrediction = 0.60251046 * 478; time = 0.0715s; samplesPerSecond = 6685.0
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 2 of 5]-Minibatch[  16-  18, 22.50%]: CrossEntropyWithSoftmax = 2.14307237 * 497; EvalErrorPrediction = 0.59959759 * 497; time = 0.0269s; samplesPerSecond = 18460.7
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 2 of 5]-Minibatch[  19-  21, 26.25%]: CrossEntropyWithSoftmax = 2.22180433 * 488; EvalErrorPrediction = 0.60245902 * 488; time = 0.0188s; samplesPerSecond = 25980.9
MPI Rank 0: 08/04/2016 14:00:27:  Epoch[ 2 of 5]-Minibatch[  22-  24, 30.00%]: CrossEntropyWithSoftmax = 1.92443426 * 480; EvalErrorPrediction = 0.54166667 * 480; time = 0.0272s; samplesPerSecond = 17679.6
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.04-seconds latency this time; accumulated time on sync point = 0.08 seconds , average latency = 0.04 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     0.15 seconds since last report (0.00 seconds on comm.); 4236 samples processed by 2 workers (2113 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 27.72k samplesPerSecond , throughputPerWorker = 13.86k samplesPerSecond
MPI Rank 0: 08/04/2016 14:00:28:  Epoch[ 2 of 5]-Minibatch[  25-  27, 33.75%]: CrossEntropyWithSoftmax = 1.89841840 * 496; EvalErrorPrediction = 0.52016129 * 496; time = 0.0725s; samplesPerSecond = 6837.5
MPI Rank 0: 08/04/2016 14:00:28:  Epoch[ 2 of 5]-Minibatch[  28-  30, 37.50%]: CrossEntropyWithSoftmax = 2.00161774 * 474; EvalErrorPrediction = 0.55696203 * 474; time = 0.0257s; samplesPerSecond = 18462.3
MPI Rank 0: 08/04/2016 14:00:28:  Epoch[ 2 of 5]-Minibatch[  31-  33, 41.25%]: CrossEntropyWithSoftmax = 2.07016019 * 475; EvalErrorPrediction = 0.55157895 * 475; time = 0.0274s; samplesPerSecond = 17308.6
MPI Rank 0: 08/04/2016 14:00:28:  Epoch[ 2 of 5]-Minibatch[  34-  36, 45.00%]: CrossEntropyWithSoftmax = 1.95872554 * 500; EvalErrorPrediction = 0.52000000 * 500; time = 0.0271s; samplesPerSecond = 18446.8
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.03-seconds latency this time; accumulated time on sync point = 0.11 seconds , average latency = 0.04 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     0.15 seconds since last report (0.01 seconds on comm.); 4175 samples processed by 2 workers (2109 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 28.03k samplesPerSecond , throughputPerWorker = 14.01k samplesPerSecond
MPI Rank 0: 08/04/2016 14:00:28:  Epoch[ 2 of 5]-Minibatch[  37-  39, 48.75%]: CrossEntropyWithSoftmax = 2.00006442 * 492; EvalErrorPrediction = 0.53861789 * 492; time = 0.0575s; samplesPerSecond = 8554.1
MPI Rank 0: 08/04/2016 14:00:28:  Epoch[ 2 of 5]-Minibatch[  40-  42, 52.50%]: CrossEntropyWithSoftmax = 1.92790267 * 505; EvalErrorPrediction = 0.52277228 * 505; time = 0.0286s; samplesPerSecond = 17676.5
MPI Rank 0: 08/04/2016 14:00:28:  Epoch[ 2 of 5]-Minibatch[  43-  45, 56.25%]: CrossEntropyWithSoftmax = 1.90951416 * 495; EvalErrorPrediction = 0.54141414 * 495; time = 0.0277s; samplesPerSecond = 17899.8
MPI Rank 0: 08/04/2016 14:00:28:  Epoch[ 2 of 5]-Minibatch[  46-  48, 60.00%]: CrossEntropyWithSoftmax = 1.94842608 * 510; EvalErrorPrediction = 0.54509804 * 510; time = 0.0272s; samplesPerSecond = 18770.7
MPI Rank 0: 08/04/2016 14:00:28:  Epoch[ 2 of 5]-Minibatch[  49-  51, 63.75%]: CrossEntropyWithSoftmax = 1.93421565 * 471; EvalErrorPrediction = 0.51804671 * 471; time = 0.0163s; samplesPerSecond = 28973.9
MPI Rank 0: 08/04/2016 14:00:28:  Epoch[ 2 of 5]-Minibatch[  52-  54, 67.50%]: CrossEntropyWithSoftmax = 1.93579956 * 480; EvalErrorPrediction = 0.53750000 * 480; time = 0.0148s; samplesPerSecond = 32434.6
MPI Rank 0: 08/04/2016 14:00:28:  Epoch[ 2 of 5]-Minibatch[  55-  57, 71.25%]: CrossEntropyWithSoftmax = 1.92226123 * 483; EvalErrorPrediction = 0.51759834 * 483; time = 0.0148s; samplesPerSecond = 32571.3
MPI Rank 0: 08/04/2016 14:00:28:  Epoch[ 2 of 5]-Minibatch[  58-  60, 75.00%]: CrossEntropyWithSoftmax = 1.77608676 * 501; EvalErrorPrediction = 0.46906188 * 501; time = 0.0150s; samplesPerSecond = 33366.6
MPI Rank 0: 08/04/2016 14:00:28:  Epoch[ 2 of 5]-Minibatch[  61-  63, 78.75%]: CrossEntropyWithSoftmax = 1.94199389 * 491; EvalErrorPrediction = 0.52545825 * 491; time = 0.0149s; samplesPerSecond = 32970.7
MPI Rank 0: 08/04/2016 14:00:28:  Epoch[ 2 of 5]-Minibatch[  64-  66, 82.50%]: CrossEntropyWithSoftmax = 1.92754849 * 476; EvalErrorPrediction = 0.55252101 * 476; time = 0.0147s; samplesPerSecond = 32295.3
MPI Rank 0: 08/04/2016 14:00:28:  Epoch[ 2 of 5]-Minibatch[  67-  69, 86.25%]: CrossEntropyWithSoftmax = 1.97435576 * 484; EvalErrorPrediction = 0.57644628 * 484; time = 0.0148s; samplesPerSecond = 32676.2
MPI Rank 0: 08/04/2016 14:00:28:  Epoch[ 2 of 5]-Minibatch[  70-  72, 90.00%]: CrossEntropyWithSoftmax = 1.89912750 * 470; EvalErrorPrediction = 0.50638298 * 470; time = 0.0146s; samplesPerSecond = 32125.8
MPI Rank 0: 08/04/2016 14:00:28:  Epoch[ 2 of 5]-Minibatch[  73-  75, 93.75%]: CrossEntropyWithSoftmax = 1.89820625 * 477; EvalErrorPrediction = 0.50943396 * 477; time = 0.0147s; samplesPerSecond = 32486.5
MPI Rank 0: 08/04/2016 14:00:28:  Epoch[ 2 of 5]-Minibatch[  76-  78, 97.50%]: CrossEntropyWithSoftmax = 1.90788597 * 484; EvalErrorPrediction = 0.51859504 * 484; time = 0.0148s; samplesPerSecond = 32780.2
MPI Rank 0: 08/04/2016 14:00:28:  Epoch[ 2 of 5]-Minibatch[  79-  81, 101.25%]: CrossEntropyWithSoftmax = 1.91027999 * 340; EvalErrorPrediction = 0.50882353 * 340; time = 0.0101s; samplesPerSecond = 33817.4
MPI Rank 0: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.11 seconds , average latency = 0.03 seconds
MPI Rank 0: 		(model aggregation stats) 4-th sync:     0.25 seconds since last report (0.00 seconds on comm.); 7807 samples processed by 2 workers (6667 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 30.81k samplesPerSecond , throughputPerWorker = 15.40k samplesPerSecond
MPI Rank 0: 08/04/2016 14:00:28: Finished Epoch[ 2 of 5]: [Training] CrossEntropyWithSoftmax = 2.00205464 * 20480; EvalErrorPrediction = 0.54848633 * 20480; totalSamplesSeen = 40960; learningRatePerSample = 0.001953125; epochTime=0.714063s
MPI Rank 0: 08/04/2016 14:00:28: SGD: Saving checkpoint model '/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn.2'
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:28: Starting Epoch 3: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 2: frames [40960..61440] (first utterance at frame 40960), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:28: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 08/04/2016 14:00:28:  Epoch[ 3 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.91214529 * 1922; EvalErrorPrediction = 0.55046826 * 1922; time = 0.0994s; samplesPerSecond = 19342.2
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     0.13 seconds since last report (0.00 seconds on comm.); 4878 samples processed by 2 workers (2584 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 36.63k samplesPerSecond , throughputPerWorker = 18.31k samplesPerSecond
MPI Rank 0: 08/04/2016 14:00:28:  Epoch[ 3 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.92981774 * 1928; EvalErrorPrediction = 0.53319502 * 1928; time = 0.0636s; samplesPerSecond = 30290.7
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.02-seconds latency this time; accumulated time on sync point = 0.02 seconds , average latency = 0.01 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     0.12 seconds since last report (0.01 seconds on comm.); 4878 samples processed by 2 workers (2565 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 41.99k samplesPerSecond , throughputPerWorker = 20.99k samplesPerSecond
MPI Rank 0: 08/04/2016 14:00:28:  Epoch[ 3 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.89059545 * 1914; EvalErrorPrediction = 0.53552769 * 1914; time = 0.1069s; samplesPerSecond = 17897.4
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.02-seconds latency this time; accumulated time on sync point = 0.04 seconds , average latency = 0.01 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     0.11 seconds since last report (0.01 seconds on comm.); 4809 samples processed by 2 workers (2532 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 42.51k samplesPerSecond , throughputPerWorker = 21.25k samplesPerSecond
MPI Rank 0: 08/04/2016 14:00:28:  Epoch[ 3 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.91828516 * 1917; EvalErrorPrediction = 0.55033907 * 1917; time = 0.0881s; samplesPerSecond = 21768.3
MPI Rank 0: 08/04/2016 14:00:28:  Epoch[ 3 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.90102818 * 1938; EvalErrorPrediction = 0.53405573 * 1938; time = 0.0589s; samplesPerSecond = 32885.4
MPI Rank 0: 08/04/2016 14:00:28:  Epoch[ 3 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.91521281 * 1929; EvalErrorPrediction = 0.53913945 * 1929; time = 0.0431s; samplesPerSecond = 44772.0
MPI Rank 0: 08/04/2016 14:00:29:  Epoch[ 3 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.84608722 * 1278; EvalErrorPrediction = 0.50860720 * 1278; time = 0.0276s; samplesPerSecond = 46327.8
MPI Rank 0: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.04 seconds , average latency = 0.01 seconds
MPI Rank 0: 		(model aggregation stats) 4-th sync:     0.14 seconds since last report (0.00 seconds on comm.); 5915 samples processed by 2 workers (5145 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 42.63k samplesPerSecond , throughputPerWorker = 21.32k samplesPerSecond
MPI Rank 0: 08/04/2016 14:00:29: Finished Epoch[ 3 of 5]: [Training] CrossEntropyWithSoftmax = 1.90143984 * 20480; EvalErrorPrediction = 0.53535156 * 20480; totalSamplesSeen = 61440; learningRatePerSample = 9.7656251e-05; epochTime=0.501376s
MPI Rank 0: 08/04/2016 14:00:29: SGD: Saving checkpoint model '/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn.3'
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:29: Starting Epoch 4: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 3: frames [61440..81920] (first utterance at frame 61440), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:29: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 08/04/2016 14:00:29:  Epoch[ 4 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.89265890 * 1879; EvalErrorPrediction = 0.52794039 * 1879; time = 0.0628s; samplesPerSecond = 29928.0
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.03-seconds latency this time; accumulated time on sync point = 0.03 seconds , average latency = 0.03 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     0.12 seconds since last report (0.01 seconds on comm.); 4812 samples processed by 2 workers (2506 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 40.58k samplesPerSecond , throughputPerWorker = 20.29k samplesPerSecond
MPI Rank 0: 08/04/2016 14:00:29:  Epoch[ 4 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.88051472 * 1959; EvalErrorPrediction = 0.51352731 * 1959; time = 0.1118s; samplesPerSecond = 17520.0
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.04 seconds , average latency = 0.02 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     0.12 seconds since last report (0.00 seconds on comm.); 4977 samples processed by 2 workers (2595 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 42.06k samplesPerSecond , throughputPerWorker = 21.03k samplesPerSecond
MPI Rank 0: 08/04/2016 14:00:29:  Epoch[ 4 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.81197194 * 1902; EvalErrorPrediction = 0.49631966 * 1902; time = 0.0829s; samplesPerSecond = 22930.0
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.03-seconds latency this time; accumulated time on sync point = 0.06 seconds , average latency = 0.02 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     0.12 seconds since last report (0.01 seconds on comm.); 4887 samples processed by 2 workers (2499 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 42.26k samplesPerSecond , throughputPerWorker = 21.13k samplesPerSecond
MPI Rank 0: 08/04/2016 14:00:29:  Epoch[ 4 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.93901384 * 1860; EvalErrorPrediction = 0.53387097 * 1860; time = 0.0906s; samplesPerSecond = 20539.3
MPI Rank 0: 08/04/2016 14:00:29:  Epoch[ 4 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.83872160 * 1881; EvalErrorPrediction = 0.51249335 * 1881; time = 0.0581s; samplesPerSecond = 32395.8
MPI Rank 0: 08/04/2016 14:00:29:  Epoch[ 4 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.91440239 * 1875; EvalErrorPrediction = 0.52586667 * 1875; time = 0.0414s; samplesPerSecond = 45309.6
MPI Rank 0: 08/04/2016 14:00:29:  Epoch[ 4 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.88918933 * 1232; EvalErrorPrediction = 0.52110390 * 1232; time = 0.0272s; samplesPerSecond = 45370.8
MPI Rank 0: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.06 seconds , average latency = 0.02 seconds
MPI Rank 0: 		(model aggregation stats) 4-th sync:     0.14 seconds since last report (0.00 seconds on comm.); 5804 samples processed by 2 workers (4988 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 42.66k samplesPerSecond , throughputPerWorker = 21.33k samplesPerSecond
MPI Rank 0: 08/04/2016 14:00:29: Finished Epoch[ 4 of 5]: [Training] CrossEntropyWithSoftmax = 1.86556236 * 20480; EvalErrorPrediction = 0.51552734 * 20480; totalSamplesSeen = 81920; learningRatePerSample = 9.7656251e-05; epochTime=0.488765s
MPI Rank 0: 08/04/2016 14:00:29: SGD: Saving checkpoint model '/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn.4'
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:29: Starting Epoch 5: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 4: frames [81920..102400] (first utterance at frame 81920), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:29: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 08/04/2016 14:00:29:  Epoch[ 5 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.82203030 * 1856; EvalErrorPrediction = 0.51778017 * 1856; time = 0.0674s; samplesPerSecond = 27535.5
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.03-seconds latency this time; accumulated time on sync point = 0.03 seconds , average latency = 0.03 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     0.12 seconds since last report (0.01 seconds on comm.); 4910 samples processed by 2 workers (2502 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 40.80k samplesPerSecond , throughputPerWorker = 20.40k samplesPerSecond
MPI Rank 0: 08/04/2016 14:00:29:  Epoch[ 5 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.77747842 * 1880; EvalErrorPrediction = 0.50957447 * 1880; time = 0.0979s; samplesPerSecond = 19205.2
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.02-seconds latency this time; accumulated time on sync point = 0.05 seconds , average latency = 0.03 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     0.11 seconds since last report (0.01 seconds on comm.); 4540 samples processed by 2 workers (2481 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 41.65k samplesPerSecond , throughputPerWorker = 20.83k samplesPerSecond
MPI Rank 0: 08/04/2016 14:00:29:  Epoch[ 5 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.87287966 * 1856; EvalErrorPrediction = 0.53071121 * 1856; time = 0.0825s; samplesPerSecond = 22498.9
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.03-seconds latency this time; accumulated time on sync point = 0.08 seconds , average latency = 0.03 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     0.12 seconds since last report (0.01 seconds on comm.); 4881 samples processed by 2 workers (2454 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 42.30k samplesPerSecond , throughputPerWorker = 21.15k samplesPerSecond
MPI Rank 0: 08/04/2016 14:00:30:  Epoch[ 5 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.82439832 * 1845; EvalErrorPrediction = 0.51165312 * 1845; time = 0.0927s; samplesPerSecond = 19905.5
MPI Rank 0: 08/04/2016 14:00:30:  Epoch[ 5 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.78850033 * 1841; EvalErrorPrediction = 0.48614883 * 1841; time = 0.0561s; samplesPerSecond = 32793.6
MPI Rank 0: 08/04/2016 14:00:30:  Epoch[ 5 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.79950091 * 1897; EvalErrorPrediction = 0.50079072 * 1897; time = 0.0557s; samplesPerSecond = 34036.1
MPI Rank 0: 08/04/2016 14:00:30:  Epoch[ 5 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.81058128 * 1212; EvalErrorPrediction = 0.48927393 * 1212; time = 0.0269s; samplesPerSecond = 45045.7
MPI Rank 0: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.08 seconds , average latency = 0.02 seconds
MPI Rank 0: 		(model aggregation stats) 4-th sync:     0.15 seconds since last report (0.00 seconds on comm.); 6149 samples processed by 2 workers (4950 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 41.40k samplesPerSecond , throughputPerWorker = 20.70k samplesPerSecond
MPI Rank 0: 08/04/2016 14:00:30: Finished Epoch[ 5 of 5]: [Training] CrossEntropyWithSoftmax = 1.82398510 * 20480; EvalErrorPrediction = 0.51347656 * 20480; totalSamplesSeen = 102400; learningRatePerSample = 9.7656251e-05; epochTime=0.493384s
MPI Rank 0: 08/04/2016 14:00:30: SGD: Saving checkpoint model '/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn'
MPI Rank 0: 08/04/2016 14:00:30: CNTKCommandTrainEnd: speechTrain
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:30: Action "train" complete.
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:30: __COMPLETED__
MPI Rank 0: ~MPIWrapper
MPI Rank 1: 08/04/2016 14:00:21: -------------------------------------------------------------------
MPI Rank 1: 08/04/2016 14:00:21: Build info: 
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:21: 		Built time: Aug  4 2016 13:07:13
MPI Rank 1: 08/04/2016 14:00:21: 		Last modified date: Thu Aug  4 10:38:25 2016
MPI Rank 1: 08/04/2016 14:00:21: 		Build type: release
MPI Rank 1: 08/04/2016 14:00:21: 		Build target: GPU
MPI Rank 1: 08/04/2016 14:00:21: 		With 1bit-SGD: yes
MPI Rank 1: 08/04/2016 14:00:21: 		Math lib: mkl
MPI Rank 1: 08/04/2016 14:00:21: 		CUDA_PATH: /usr/local/cuda-7.5
MPI Rank 1: 08/04/2016 14:00:21: 		CUB_PATH: /usr/local/cub-1.4.1
MPI Rank 1: 08/04/2016 14:00:21: 		CUDNN_PATH: /usr/local/cudnn-4.0
MPI Rank 1: 08/04/2016 14:00:21: 		Build Branch: HEAD
MPI Rank 1: 08/04/2016 14:00:21: 		Build SHA1: 0f61695dfc335f2406284d335678f57c215e6e9c
MPI Rank 1: 08/04/2016 14:00:21: 		Built by philly on ee6c20c358b8
MPI Rank 1: 08/04/2016 14:00:21: 		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
MPI Rank 1: 08/04/2016 14:00:21: -------------------------------------------------------------------
MPI Rank 1: 08/04/2016 14:00:23: -------------------------------------------------------------------
MPI Rank 1: 08/04/2016 14:00:23: GPU info:
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:23: 		Device[0]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
MPI Rank 1: 08/04/2016 14:00:23: 		Device[1]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
MPI Rank 1: 08/04/2016 14:00:23: 		Device[2]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
MPI Rank 1: 08/04/2016 14:00:23: -------------------------------------------------------------------
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:23: Running on localhost at 2016/08/04 14:00:23
MPI Rank 1: 08/04/2016 14:00:23: Command line: 
MPI Rank 1: /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/1bitsgd/release/bin/cntk  configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/../ParallelBM/cntk.cntk  currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data  RunDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu  DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data  ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..  OutputDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu  DeviceId=0  timestamping=true  numCPUThreads=12  precision=double  speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]  stderr=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu/stderr
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:23: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: 08/04/2016 14:00:23: precision = "float"
MPI Rank 1: command = speechTrain
MPI Rank 1: deviceId = $DeviceId$
MPI Rank 1: parallelTrain = true
MPI Rank 1: speechTrain = [
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "$RunDir$/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = $DeviceId$
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 blockSizePerWorker=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "$DataDir$/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "$DataDir$/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ]
MPI Rank 1: currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: RunDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu
MPI Rank 1: DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 1: OutputDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu
MPI Rank 1: DeviceId=0
MPI Rank 1: timestamping=true
MPI Rank 1: numCPUThreads=12
MPI Rank 1: precision=double
MPI Rank 1: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: stderr=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu/stderr
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:23: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:23: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: 08/04/2016 14:00:23: precision = "float"
MPI Rank 1: command = speechTrain
MPI Rank 1: deviceId = 0
MPI Rank 1: parallelTrain = true
MPI Rank 1: speechTrain = [
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = 0
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 blockSizePerWorker=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ]
MPI Rank 1: currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: RunDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu
MPI Rank 1: DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 1: OutputDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu
MPI Rank 1: DeviceId=0
MPI Rank 1: timestamping=true
MPI Rank 1: numCPUThreads=12
MPI Rank 1: precision=double
MPI Rank 1: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: stderr=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu/stderr
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:23: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:23: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: configparameters: cntk.cntk:command=speechTrain
MPI Rank 1: configparameters: cntk.cntk:ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 1: configparameters: cntk.cntk:currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: configparameters: cntk.cntk:DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: configparameters: cntk.cntk:deviceId=0
MPI Rank 1: configparameters: cntk.cntk:numCPUThreads=12
MPI Rank 1: configparameters: cntk.cntk:OutputDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu
MPI Rank 1: configparameters: cntk.cntk:parallelTrain=true
MPI Rank 1: configparameters: cntk.cntk:precision=double
MPI Rank 1: configparameters: cntk.cntk:RunDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu
MPI Rank 1: configparameters: cntk.cntk:speechTrain=[
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = 0
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 blockSizePerWorker=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ] [SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: 
MPI Rank 1: configparameters: cntk.cntk:stderr=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu/stderr
MPI Rank 1: configparameters: cntk.cntk:timestamping=true
MPI Rank 1: 08/04/2016 14:00:23: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 08/04/2016 14:00:23: Commands: speechTrain
MPI Rank 1: 08/04/2016 14:00:23: Precision = "double"
MPI Rank 1: 08/04/2016 14:00:23: Using 12 CPU threads.
MPI Rank 1: 08/04/2016 14:00:23: CNTKModelPath: /tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn
MPI Rank 1: 08/04/2016 14:00:23: CNTKCommandTrainInfo: speechTrain : 5
MPI Rank 1: 08/04/2016 14:00:23: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 5
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:23: ##############################################################################
MPI Rank 1: 08/04/2016 14:00:23: #                                                                            #
MPI Rank 1: 08/04/2016 14:00:23: # Action "train"                                                             #
MPI Rank 1: 08/04/2016 14:00:23: #                                                                            #
MPI Rank 1: 08/04/2016 14:00:23: ##############################################################################
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:23: CNTKCommandTrainBegin: speechTrain
MPI Rank 1: SimpleNetworkBuilder Using GPU 0
MPI Rank 1: reading script file glob_0000.scp ... 948 entries
MPI Rank 1: total 132 state names in state list /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list
MPI Rank 1: htkmlfreader: reading MLF file /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf ... total 948 entries
MPI Rank 1: ...............................................................................................feature set 0: 252734 frames in 948 out of 948 utterances
MPI Rank 1: label set 0: 129 classes
MPI Rank 1: minibatchutterancesource: 948 utterances grouped into 3 chunks, av. chunk size: 316.0 utterances, 84244.7 frames
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:23: Creating virgin network.
MPI Rank 1: SetUniformRandomValue (GPU): creating curand object with seed 1, sizeof(ElemType)==8
MPI Rank 1: 
MPI Rank 1: Post-processing network...
MPI Rank 1: 
MPI Rank 1: 7 roots:
MPI Rank 1: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
MPI Rank 1: 	EvalErrorPrediction = ErrorPrediction()
MPI Rank 1: 	InvStdOfFeatures = InvStdDev()
MPI Rank 1: 	MeanOfFeatures = Mean()
MPI Rank 1: 	PosteriorProb = Softmax()
MPI Rank 1: 	Prior = Mean()
MPI Rank 1: 	ScaledLogLikelihood = Minus()
MPI Rank 1: 
MPI Rank 1: Validating network. 25 nodes to process in pass 1.
MPI Rank 1: 
MPI Rank 1: Validating --> labels = InputValue() :  -> [132 x *]
MPI Rank 1: Validating --> W2 = LearnableParameter() :  -> [132 x 512]
MPI Rank 1: Validating --> W1 = LearnableParameter() :  -> [512 x 512]
MPI Rank 1: Validating --> W0 = LearnableParameter() :  -> [512 x 363]
MPI Rank 1: Validating --> features = InputValue() :  -> [363 x *]
MPI Rank 1: Validating --> MeanOfFeatures = Mean (features) : [363 x *] -> [363]
MPI Rank 1: Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *] -> [363]
MPI Rank 1: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *], [363], [363] -> [363 x *]
MPI Rank 1: Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [512 x 363], [363 x *] -> [512 x *]
MPI Rank 1: Validating --> B0 = LearnableParameter() :  -> [512 x 1]
MPI Rank 1: Validating --> W0*features+B0 = Plus (W0*features, B0) : [512 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 1: Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> W1*H1 = Times (W1, H1) : [512 x 512], [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> B1 = LearnableParameter() :  -> [512 x 1]
MPI Rank 1: Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [512 x 1 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 1: Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> W2*H1 = Times (W2, H2) : [132 x 512], [512 x 1 x *] -> [132 x 1 x *]
MPI Rank 1: Validating --> B2 = LearnableParameter() :  -> [132 x 1]
MPI Rank 1: Validating --> HLast = Plus (W2*H1, B2) : [132 x 1 x *], [132 x 1] -> [132 x 1 x *]
MPI Rank 1: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 1: Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 1: Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *] -> [132 x 1 x *]
MPI Rank 1: Validating --> Prior = Mean (labels) : [132 x *] -> [132]
MPI Rank 1: Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
MPI Rank 1: Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *], [132] -> [132 x 1 x *]
MPI Rank 1: 
MPI Rank 1: Validating network. 17 nodes to process in pass 2.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: Validating network, final pass.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 12 out of 25 nodes do not share the minibatch layout with the input data.
MPI Rank 1: 
MPI Rank 1: Post-processing network complete.
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:23: Created model with 25 nodes on GPU 0.
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:23: Training criterion node(s):
MPI Rank 1: 08/04/2016 14:00:23: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:23: Evaluation criterion node(s):
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:23: 	EvalErrorPrediction = ErrorPrediction
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: Allocating matrices for forward and/or backward propagation.
MPI Rank 1: 
MPI Rank 1: Memory Sharing Structure:
MPI Rank 1: 
MPI Rank 1: (nil): {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[363]] [LogOfPrior Gradient[132]] [MVNormalizedFeatures Gradient[363 x *]] [MeanOfFeatures Gradient[363]] [PosteriorProb Gradient[132 x 1 x *]] [PosteriorProb Value[132 x 1 x *]] [Prior Gradient[132]] [ScaledLogLikelihood Gradient[132 x 1 x *]] [features Gradient[363 x *]] [labels Gradient[132 x *]] }
MPI Rank 1: 0x210f378: {[features Value[363 x *]] }
MPI Rank 1: 0x7f86e43477b8: {[MeanOfFeatures Value[363]] }
MPI Rank 1: 0x7f86e4347cf8: {[InvStdOfFeatures Value[363]] }
MPI Rank 1: 0x7f86e4348a98: {[W0 Value[512 x 363]] }
MPI Rank 1: 0x7f86e632ef98: {[LogOfPrior Value[132]] }
MPI Rank 1: 0x7f86e6330998: {[W0*features Value[512 x *]] }
MPI Rank 1: 0x7f86e6330ae8: {[MVNormalizedFeatures Value[363 x *]] }
MPI Rank 1: 0x7f86e6330ec8: {[W0 Gradient[512 x 363]] [W0*features+B0 Value[512 x 1 x *]] }
MPI Rank 1: 0x7f86e6331028: {[H1 Value[512 x 1 x *]] [W0*features Gradient[512 x *]] }
MPI Rank 1: 0x7f86e6331188: {[W0*features+B0 Gradient[512 x 1 x *]] [W1*H1 Value[512 x 1 x *]] }
MPI Rank 1: 0x7f86e63312e8: {[W1 Gradient[512 x 512]] [W1*H1+B1 Value[512 x 1 x *]] }
MPI Rank 1: 0x7f86e63314a8: {[H2 Value[512 x 1 x *]] [W1*H1 Gradient[512 x 1 x *]] }
MPI Rank 1: 0x7f86e6331668: {[B0 Gradient[512 x 1]] [H1 Gradient[512 x 1 x *]] [W1*H1+B1 Gradient[512 x 1 x *]] [W2*H1 Value[132 x 1 x *]] }
MPI Rank 1: 0x7f86e6331828: {[HLast Value[132 x 1 x *]] [W2 Gradient[132 x 512]] }
MPI Rank 1: 0x7f86e63323b8: {[CrossEntropyWithSoftmax Gradient[1]] }
MPI Rank 1: 0x7f86e6332578: {[B1 Gradient[512 x 1]] [H2 Gradient[512 x 1 x *]] [HLast Gradient[132 x 1 x *]] }
MPI Rank 1: 0x7f86e6332738: {[W2*H1 Gradient[132 x 1 x *]] }
MPI Rank 1: 0x7f86e63328f8: {[B2 Gradient[132 x 1]] }
MPI Rank 1: 0x7f86e693cd88: {[W1 Value[512 x 512]] }
MPI Rank 1: 0x7f86e693db68: {[B1 Value[512 x 1]] }
MPI Rank 1: 0x7f86e693ed28: {[W2 Value[132 x 512]] }
MPI Rank 1: 0x7f86e693fa28: {[B2 Value[132 x 1]] }
MPI Rank 1: 0x7f86e6940868: {[labels Value[132 x *]] }
MPI Rank 1: 0x7f86e6941ad8: {[Prior Value[132]] }
MPI Rank 1: 0x7f86e6947378: {[EvalErrorPrediction Value[1]] }
MPI Rank 1: 0x7f86e6947678: {[ScaledLogLikelihood Value[132 x 1 x *]] }
MPI Rank 1: 0x7f86e6947838: {[CrossEntropyWithSoftmax Value[1]] }
MPI Rank 1: 0x7f86e694d1b8: {[B0 Value[512 x 1]] }
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:23: Precomputing --> 3 PreCompute nodes found.
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:23: 	MeanOfFeatures = Mean()
MPI Rank 1: 08/04/2016 14:00:23: 	InvStdOfFeatures = InvStdDev()
MPI Rank 1: 08/04/2016 14:00:23: 	Prior = Mean()
MPI Rank 1: minibatchiterator: epoch 0: frames [0..252734] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 1: requiredata: determined feature kind as 33-dimensional 'USER' with frame shift 10.0 ms
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:25: Precomputing --> Completed.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:25: Starting Epoch 1: learning rate per sample = 0.015625  effective momentum = 0.900000  momentum as time constant = 607.4 samples
MPI Rank 1: minibatchiterator: epoch 0: frames [0..20480] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:25: Starting minibatch loop.
MPI Rank 1: 08/04/2016 14:00:25:  Epoch[ 1 of 5]-Minibatch[   1-   3, 0.94%]: CrossEntropyWithSoftmax = 4.75753123 * 192; EvalErrorPrediction = 0.95833333 * 192; time = 0.0177s; samplesPerSecond = 10824.2
MPI Rank 1: 08/04/2016 14:00:25:  Epoch[ 1 of 5]-Minibatch[   4-   6, 1.88%]: CrossEntropyWithSoftmax = 4.52346672 * 192; EvalErrorPrediction = 0.94270833 * 192; time = 0.0184s; samplesPerSecond = 10431.4
MPI Rank 1: 08/04/2016 14:00:25:  Epoch[ 1 of 5]-Minibatch[   7-   9, 2.81%]: CrossEntropyWithSoftmax = 4.53919276 * 192; EvalErrorPrediction = 0.94791667 * 192; time = 0.0184s; samplesPerSecond = 10430.8
MPI Rank 1: 08/04/2016 14:00:25:  Epoch[ 1 of 5]-Minibatch[  10-  12, 3.75%]: CrossEntropyWithSoftmax = 4.07985813 * 192; EvalErrorPrediction = 0.91145833 * 192; time = 0.0184s; samplesPerSecond = 10427.4
MPI Rank 1: 08/04/2016 14:00:25:  Epoch[ 1 of 5]-Minibatch[  13-  15, 4.69%]: CrossEntropyWithSoftmax = 4.36802377 * 192; EvalErrorPrediction = 0.89583333 * 192; time = 0.0184s; samplesPerSecond = 10429.7
MPI Rank 1: 08/04/2016 14:00:25:  Epoch[ 1 of 5]-Minibatch[  16-  18, 5.62%]: CrossEntropyWithSoftmax = 4.46618540 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.0184s; samplesPerSecond = 10426.8
MPI Rank 1: 08/04/2016 14:00:25:  Epoch[ 1 of 5]-Minibatch[  19-  21, 6.56%]: CrossEntropyWithSoftmax = 4.16931089 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.0184s; samplesPerSecond = 10433.6
MPI Rank 1: 08/04/2016 14:00:25:  Epoch[ 1 of 5]-Minibatch[  22-  24, 7.50%]: CrossEntropyWithSoftmax = 4.02382530 * 192; EvalErrorPrediction = 0.90104167 * 192; time = 0.0184s; samplesPerSecond = 10411.6
MPI Rank 1: 08/04/2016 14:00:25:  Epoch[ 1 of 5]-Minibatch[  25-  27, 8.44%]: CrossEntropyWithSoftmax = 4.05445487 * 192; EvalErrorPrediction = 0.88020833 * 192; time = 0.0184s; samplesPerSecond = 10422.3
MPI Rank 1: 08/04/2016 14:00:25:  Epoch[ 1 of 5]-Minibatch[  28-  30, 9.38%]: CrossEntropyWithSoftmax = 3.89305671 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 0.0184s; samplesPerSecond = 10415.5
MPI Rank 1: 08/04/2016 14:00:25:  Epoch[ 1 of 5]-Minibatch[  31-  33, 10.31%]: CrossEntropyWithSoftmax = 4.02209842 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.0184s; samplesPerSecond = 10420.1
MPI Rank 1: 08/04/2016 14:00:25:  Epoch[ 1 of 5]-Minibatch[  34-  36, 11.25%]: CrossEntropyWithSoftmax = 3.91036430 * 192; EvalErrorPrediction = 0.86979167 * 192; time = 0.0184s; samplesPerSecond = 10424.0
MPI Rank 1: 08/04/2016 14:00:25:  Epoch[ 1 of 5]-Minibatch[  37-  39, 12.19%]: CrossEntropyWithSoftmax = 3.84805452 * 192; EvalErrorPrediction = 0.85937500 * 192; time = 0.0184s; samplesPerSecond = 10425.7
MPI Rank 1: 08/04/2016 14:00:25:  Epoch[ 1 of 5]-Minibatch[  40-  42, 13.12%]: CrossEntropyWithSoftmax = 3.80726858 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.0184s; samplesPerSecond = 10422.3
MPI Rank 1: 08/04/2016 14:00:25:  Epoch[ 1 of 5]-Minibatch[  43-  45, 14.06%]: CrossEntropyWithSoftmax = 3.72193150 * 192; EvalErrorPrediction = 0.86979167 * 192; time = 0.0184s; samplesPerSecond = 10429.1
MPI Rank 1: 08/04/2016 14:00:25:  Epoch[ 1 of 5]-Minibatch[  46-  48, 15.00%]: CrossEntropyWithSoftmax = 3.71906777 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 0.0184s; samplesPerSecond = 10432.5
MPI Rank 1: 08/04/2016 14:00:25:  Epoch[ 1 of 5]-Minibatch[  49-  51, 15.94%]: CrossEntropyWithSoftmax = 3.79507786 * 192; EvalErrorPrediction = 0.85937500 * 192; time = 0.0184s; samplesPerSecond = 10424.0
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[  52-  54, 16.88%]: CrossEntropyWithSoftmax = 3.79610654 * 192; EvalErrorPrediction = 0.88020833 * 192; time = 0.0184s; samplesPerSecond = 10426.8
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[  55-  57, 17.81%]: CrossEntropyWithSoftmax = 3.89841042 * 192; EvalErrorPrediction = 0.86979167 * 192; time = 0.0184s; samplesPerSecond = 10425.2
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[  58-  60, 18.75%]: CrossEntropyWithSoftmax = 3.63159420 * 192; EvalErrorPrediction = 0.86979167 * 192; time = 0.0184s; samplesPerSecond = 10424.0
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[  61-  63, 19.69%]: CrossEntropyWithSoftmax = 3.60704590 * 192; EvalErrorPrediction = 0.81250000 * 192; time = 0.0184s; samplesPerSecond = 10426.3
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[  64-  66, 20.62%]: CrossEntropyWithSoftmax = 3.44549344 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 0.0184s; samplesPerSecond = 10417.2
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[  67-  69, 21.56%]: CrossEntropyWithSoftmax = 3.70529241 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.0184s; samplesPerSecond = 10428.5
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[  70-  72, 22.50%]: CrossEntropyWithSoftmax = 3.43741033 * 192; EvalErrorPrediction = 0.79166667 * 192; time = 0.0184s; samplesPerSecond = 10426.3
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[  73-  75, 23.44%]: CrossEntropyWithSoftmax = 3.37944332 * 192; EvalErrorPrediction = 0.81250000 * 192; time = 0.0184s; samplesPerSecond = 10433.6
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[  76-  78, 24.38%]: CrossEntropyWithSoftmax = 3.43534073 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.0184s; samplesPerSecond = 10420.6
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[  79-  81, 25.31%]: CrossEntropyWithSoftmax = 3.37121589 * 192; EvalErrorPrediction = 0.82291667 * 192; time = 0.0184s; samplesPerSecond = 10427.4
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[  82-  84, 26.25%]: CrossEntropyWithSoftmax = 3.55975850 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.0184s; samplesPerSecond = 10429.1
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[  85-  87, 27.19%]: CrossEntropyWithSoftmax = 3.56430173 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.0184s; samplesPerSecond = 10425.2
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[  88-  90, 28.12%]: CrossEntropyWithSoftmax = 3.24770444 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.0184s; samplesPerSecond = 10426.8
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[  91-  93, 29.06%]: CrossEntropyWithSoftmax = 3.52691776 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 0.0184s; samplesPerSecond = 10418.9
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[  94-  96, 30.00%]: CrossEntropyWithSoftmax = 3.30961054 * 192; EvalErrorPrediction = 0.79166667 * 192; time = 0.0184s; samplesPerSecond = 10424.6
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[  97-  99, 30.94%]: CrossEntropyWithSoftmax = 3.31256725 * 192; EvalErrorPrediction = 0.79166667 * 192; time = 0.0184s; samplesPerSecond = 10424.6
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 100- 102, 31.87%]: CrossEntropyWithSoftmax = 3.42063469 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.0184s; samplesPerSecond = 10424.0
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 103- 105, 32.81%]: CrossEntropyWithSoftmax = 3.50669976 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 0.0184s; samplesPerSecond = 10428.0
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 106- 108, 33.75%]: CrossEntropyWithSoftmax = 3.42987849 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.0184s; samplesPerSecond = 10421.8
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 109- 111, 34.69%]: CrossEntropyWithSoftmax = 3.19770439 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.0184s; samplesPerSecond = 10422.9
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 112- 114, 35.62%]: CrossEntropyWithSoftmax = 3.11421415 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.0184s; samplesPerSecond = 10418.9
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 115- 117, 36.56%]: CrossEntropyWithSoftmax = 2.91744742 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0184s; samplesPerSecond = 10424.0
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 118- 120, 37.50%]: CrossEntropyWithSoftmax = 3.18073355 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0184s; samplesPerSecond = 10424.6
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 121- 123, 38.44%]: CrossEntropyWithSoftmax = 3.20812063 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.0184s; samplesPerSecond = 10426.8
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 124- 126, 39.38%]: CrossEntropyWithSoftmax = 3.11795416 * 192; EvalErrorPrediction = 0.71354167 * 192; time = 0.0184s; samplesPerSecond = 10424.6
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 127- 129, 40.31%]: CrossEntropyWithSoftmax = 3.20472785 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 0.0184s; samplesPerSecond = 10426.3
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 130- 132, 41.25%]: CrossEntropyWithSoftmax = 3.02016452 * 192; EvalErrorPrediction = 0.72395833 * 192; time = 0.0184s; samplesPerSecond = 10428.5
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 133- 135, 42.19%]: CrossEntropyWithSoftmax = 3.32051194 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0184s; samplesPerSecond = 10428.5
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 136- 138, 43.12%]: CrossEntropyWithSoftmax = 3.04799826 * 192; EvalErrorPrediction = 0.74479167 * 192; time = 0.0184s; samplesPerSecond = 10424.6
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 139- 141, 44.06%]: CrossEntropyWithSoftmax = 2.86527306 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0184s; samplesPerSecond = 10418.9
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 142- 144, 45.00%]: CrossEntropyWithSoftmax = 3.10455502 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 0.0184s; samplesPerSecond = 10415.0
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 145- 147, 45.94%]: CrossEntropyWithSoftmax = 3.23688957 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0184s; samplesPerSecond = 10426.3
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 148- 150, 46.88%]: CrossEntropyWithSoftmax = 2.82572328 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0184s; samplesPerSecond = 10425.7
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 151- 153, 47.81%]: CrossEntropyWithSoftmax = 3.02639422 * 192; EvalErrorPrediction = 0.77083333 * 192; time = 0.0184s; samplesPerSecond = 10418.9
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 154- 156, 48.75%]: CrossEntropyWithSoftmax = 3.02072952 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0184s; samplesPerSecond = 10424.0
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 157- 159, 49.69%]: CrossEntropyWithSoftmax = 3.04646926 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0184s; samplesPerSecond = 10419.5
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 160- 162, 50.62%]: CrossEntropyWithSoftmax = 3.11199357 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.0184s; samplesPerSecond = 10425.2
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 163- 165, 51.56%]: CrossEntropyWithSoftmax = 3.06844023 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0184s; samplesPerSecond = 10421.8
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 166- 168, 52.50%]: CrossEntropyWithSoftmax = 2.79676651 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.0184s; samplesPerSecond = 10417.8
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 169- 171, 53.44%]: CrossEntropyWithSoftmax = 2.88325303 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 0.0184s; samplesPerSecond = 10414.4
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 172- 174, 54.37%]: CrossEntropyWithSoftmax = 2.95502023 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0184s; samplesPerSecond = 10426.8
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 175- 177, 55.31%]: CrossEntropyWithSoftmax = 2.72193165 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0184s; samplesPerSecond = 10410.5
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 178- 180, 56.25%]: CrossEntropyWithSoftmax = 2.73032177 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0184s; samplesPerSecond = 10422.3
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 181- 183, 57.19%]: CrossEntropyWithSoftmax = 2.78240341 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0184s; samplesPerSecond = 10420.6
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 184- 186, 58.13%]: CrossEntropyWithSoftmax = 2.85209658 * 192; EvalErrorPrediction = 0.71875000 * 192; time = 0.0184s; samplesPerSecond = 10416.1
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 187- 189, 59.06%]: CrossEntropyWithSoftmax = 2.85994717 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0185s; samplesPerSecond = 10394.1
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 190- 192, 60.00%]: CrossEntropyWithSoftmax = 2.87532953 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0184s; samplesPerSecond = 10425.2
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 193- 195, 60.94%]: CrossEntropyWithSoftmax = 2.65994146 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0184s; samplesPerSecond = 10415.5
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 196- 198, 61.88%]: CrossEntropyWithSoftmax = 2.61193397 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0205s; samplesPerSecond = 9370.4
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 199- 201, 62.81%]: CrossEntropyWithSoftmax = 2.65584290 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.0184s; samplesPerSecond = 10409.3
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 202- 204, 63.75%]: CrossEntropyWithSoftmax = 2.85889340 * 192; EvalErrorPrediction = 0.71875000 * 192; time = 0.0184s; samplesPerSecond = 10425.2
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 205- 207, 64.69%]: CrossEntropyWithSoftmax = 2.73678257 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.0184s; samplesPerSecond = 10421.2
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 208- 210, 65.62%]: CrossEntropyWithSoftmax = 2.79029130 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0184s; samplesPerSecond = 10430.2
MPI Rank 1: 08/04/2016 14:00:26:  Epoch[ 1 of 5]-Minibatch[ 211- 213, 66.56%]: CrossEntropyWithSoftmax = 2.79023222 * 192; EvalErrorPrediction = 0.75000000 * 192; time = 0.0184s; samplesPerSecond = 10421.8
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 214- 216, 67.50%]: CrossEntropyWithSoftmax = 2.71961189 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.0184s; samplesPerSecond = 10442.7
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 217- 219, 68.44%]: CrossEntropyWithSoftmax = 2.39883393 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0185s; samplesPerSecond = 10402.6
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 220- 222, 69.38%]: CrossEntropyWithSoftmax = 2.44922642 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0184s; samplesPerSecond = 10431.9
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 223- 225, 70.31%]: CrossEntropyWithSoftmax = 2.58579114 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.0184s; samplesPerSecond = 10421.2
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 226- 228, 71.25%]: CrossEntropyWithSoftmax = 2.59000443 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0184s; samplesPerSecond = 10426.3
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 229- 231, 72.19%]: CrossEntropyWithSoftmax = 2.51957284 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0184s; samplesPerSecond = 10423.5
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 232- 234, 73.12%]: CrossEntropyWithSoftmax = 2.44297254 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0184s; samplesPerSecond = 10417.8
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 235- 237, 74.06%]: CrossEntropyWithSoftmax = 2.55342763 * 192; EvalErrorPrediction = 0.67187500 * 192; time = 0.0184s; samplesPerSecond = 10420.6
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 238- 240, 75.00%]: CrossEntropyWithSoftmax = 2.23889842 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0184s; samplesPerSecond = 10419.5
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 241- 243, 75.94%]: CrossEntropyWithSoftmax = 2.57037103 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0184s; samplesPerSecond = 10415.5
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 244- 246, 76.88%]: CrossEntropyWithSoftmax = 2.48165344 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0184s; samplesPerSecond = 10416.1
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 247- 249, 77.81%]: CrossEntropyWithSoftmax = 2.33221339 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.0184s; samplesPerSecond = 10415.0
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 250- 252, 78.75%]: CrossEntropyWithSoftmax = 2.48291671 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0184s; samplesPerSecond = 10422.3
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 253- 255, 79.69%]: CrossEntropyWithSoftmax = 2.33755124 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0185s; samplesPerSecond = 10381.2
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 256- 258, 80.62%]: CrossEntropyWithSoftmax = 2.53305608 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.0184s; samplesPerSecond = 10413.8
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 259- 261, 81.56%]: CrossEntropyWithSoftmax = 2.32593640 * 192; EvalErrorPrediction = 0.67187500 * 192; time = 0.0184s; samplesPerSecond = 10418.4
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 262- 264, 82.50%]: CrossEntropyWithSoftmax = 2.39802742 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0184s; samplesPerSecond = 10411.0
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 265- 267, 83.44%]: CrossEntropyWithSoftmax = 2.09161261 * 192; EvalErrorPrediction = 0.56250000 * 192; time = 0.0184s; samplesPerSecond = 10417.2
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 268- 270, 84.38%]: CrossEntropyWithSoftmax = 2.37188248 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0184s; samplesPerSecond = 10421.2
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 271- 273, 85.31%]: CrossEntropyWithSoftmax = 2.42025573 * 192; EvalErrorPrediction = 0.60937500 * 192; time = 0.0184s; samplesPerSecond = 10415.5
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 274- 276, 86.25%]: CrossEntropyWithSoftmax = 2.69930022 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.0185s; samplesPerSecond = 10405.9
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 277- 279, 87.19%]: CrossEntropyWithSoftmax = 2.14700044 * 192; EvalErrorPrediction = 0.54687500 * 192; time = 0.0184s; samplesPerSecond = 10422.3
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 280- 282, 88.12%]: CrossEntropyWithSoftmax = 2.48209132 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0184s; samplesPerSecond = 10417.8
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 283- 285, 89.06%]: CrossEntropyWithSoftmax = 2.40099538 * 192; EvalErrorPrediction = 0.59375000 * 192; time = 0.0184s; samplesPerSecond = 10428.0
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 286- 288, 90.00%]: CrossEntropyWithSoftmax = 2.43650120 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0184s; samplesPerSecond = 10422.9
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 289- 291, 90.94%]: CrossEntropyWithSoftmax = 2.18969205 * 192; EvalErrorPrediction = 0.55208333 * 192; time = 0.0184s; samplesPerSecond = 10419.5
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 292- 294, 91.88%]: CrossEntropyWithSoftmax = 2.14137919 * 192; EvalErrorPrediction = 0.58854167 * 192; time = 0.0184s; samplesPerSecond = 10424.6
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 295- 297, 92.81%]: CrossEntropyWithSoftmax = 2.07609863 * 192; EvalErrorPrediction = 0.59375000 * 192; time = 0.0184s; samplesPerSecond = 10428.5
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 298- 300, 93.75%]: CrossEntropyWithSoftmax = 2.38633462 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.0184s; samplesPerSecond = 10426.3
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 301- 303, 94.69%]: CrossEntropyWithSoftmax = 2.25116819 * 192; EvalErrorPrediction = 0.57812500 * 192; time = 0.0184s; samplesPerSecond = 10420.1
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 304- 306, 95.62%]: CrossEntropyWithSoftmax = 2.39758335 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.0184s; samplesPerSecond = 10423.5
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 307- 309, 96.56%]: CrossEntropyWithSoftmax = 2.21459239 * 192; EvalErrorPrediction = 0.60937500 * 192; time = 0.0184s; samplesPerSecond = 10431.4
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 310- 312, 97.50%]: CrossEntropyWithSoftmax = 2.18911109 * 192; EvalErrorPrediction = 0.55729167 * 192; time = 0.0184s; samplesPerSecond = 10421.8
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 313- 315, 98.44%]: CrossEntropyWithSoftmax = 2.14740149 * 192; EvalErrorPrediction = 0.55208333 * 192; time = 0.0184s; samplesPerSecond = 10428.0
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 1 of 5]-Minibatch[ 316- 318, 99.38%]: CrossEntropyWithSoftmax = 2.24498948 * 192; EvalErrorPrediction = 0.59375000 * 192; time = 0.0184s; samplesPerSecond = 10416.7
MPI Rank 1: 08/04/2016 14:00:27: Finished Epoch[ 1 of 5]: [Training] CrossEntropyWithSoftmax = 3.03956016 * 20480; EvalErrorPrediction = 0.73344727 * 20480; totalSamplesSeen = 20480; learningRatePerSample = 0.015625; epochTime=1.97418s
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:27: Starting Epoch 2: learning rate per sample = 0.001953  effective momentum = 0.656119  momentum as time constant = 607.5 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 1: frames [20480..40960] (first utterance at frame 20480), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:27: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 2 of 5]-Minibatch[   1-   3, 3.75%]: CrossEntropyWithSoftmax = 2.05462901 * 271; EvalErrorPrediction = 0.56088561 * 271; time = 0.0323s; samplesPerSecond = 8381.0
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 2 of 5]-Minibatch[   4-   6, 7.50%]: CrossEntropyWithSoftmax = 2.25553552 * 255; EvalErrorPrediction = 0.61960784 * 255; time = 0.0156s; samplesPerSecond = 16361.9
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 2 of 5]-Minibatch[   7-   9, 11.25%]: CrossEntropyWithSoftmax = 2.12984410 * 280; EvalErrorPrediction = 0.57142857 * 280; time = 0.0300s; samplesPerSecond = 9342.1
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 2 of 5]-Minibatch[  10-  12, 15.00%]: CrossEntropyWithSoftmax = 2.06540169 * 282; EvalErrorPrediction = 0.56382979 * 282; time = 0.0247s; samplesPerSecond = 11414.2
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 2 of 5]-Minibatch[  13-  15, 18.75%]: CrossEntropyWithSoftmax = 2.04867360 * 290; EvalErrorPrediction = 0.58275862 * 290; time = 0.0155s; samplesPerSecond = 18710.9
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 2 of 5]-Minibatch[  16-  18, 22.50%]: CrossEntropyWithSoftmax = 2.09811282 * 271; EvalErrorPrediction = 0.54243542 * 271; time = 0.0105s; samplesPerSecond = 25819.4
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 2 of 5]-Minibatch[  19-  21, 26.25%]: CrossEntropyWithSoftmax = 1.93680667 * 280; EvalErrorPrediction = 0.56071429 * 280; time = 0.0106s; samplesPerSecond = 26455.0
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     0.16 seconds since last report (0.00 seconds on comm.); 4262 samples processed by 2 workers (2120 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 26.85k samplesPerSecond , throughputPerWorker = 13.43k samplesPerSecond
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 2 of 5]-Minibatch[  22-  24, 30.00%]: CrossEntropyWithSoftmax = 2.13155367 * 288; EvalErrorPrediction = 0.61805556 * 288; time = 0.0248s; samplesPerSecond = 11626.0
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 2 of 5]-Minibatch[  25-  27, 33.75%]: CrossEntropyWithSoftmax = 2.08410269 * 272; EvalErrorPrediction = 0.58088235 * 272; time = 0.0204s; samplesPerSecond = 13339.9
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 2 of 5]-Minibatch[  28-  30, 37.50%]: CrossEntropyWithSoftmax = 1.94721088 * 294; EvalErrorPrediction = 0.55442177 * 294; time = 0.0346s; samplesPerSecond = 8486.8
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 2 of 5]-Minibatch[  31-  33, 41.25%]: CrossEntropyWithSoftmax = 2.05777149 * 293; EvalErrorPrediction = 0.56996587 * 293; time = 0.0206s; samplesPerSecond = 14238.5
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 2 of 5]-Minibatch[  34-  36, 45.00%]: CrossEntropyWithSoftmax = 2.15823287 * 268; EvalErrorPrediction = 0.56343284 * 268; time = 0.0240s; samplesPerSecond = 11144.8
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 2 of 5]-Minibatch[  37-  39, 48.75%]: CrossEntropyWithSoftmax = 2.10474984 * 276; EvalErrorPrediction = 0.56159420 * 276; time = 0.0109s; samplesPerSecond = 25363.0
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 2 of 5]-Minibatch[  40-  42, 52.50%]: CrossEntropyWithSoftmax = 2.11003011 * 263; EvalErrorPrediction = 0.56273764 * 263; time = 0.0104s; samplesPerSecond = 25237.5
MPI Rank 1: 08/04/2016 14:00:27:  Epoch[ 2 of 5]-Minibatch[  43-  45, 56.25%]: CrossEntropyWithSoftmax = 1.96923933 * 273; EvalErrorPrediction = 0.50915751 * 273; time = 0.0105s; samplesPerSecond = 25980.2
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     0.15 seconds since last report (0.00 seconds on comm.); 4236 samples processed by 2 workers (2123 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 27.75k samplesPerSecond , throughputPerWorker = 13.88k samplesPerSecond
MPI Rank 1: 08/04/2016 14:00:28:  Epoch[ 2 of 5]-Minibatch[  46-  48, 60.00%]: CrossEntropyWithSoftmax = 2.05037807 * 258; EvalErrorPrediction = 0.56589147 * 258; time = 0.0245s; samplesPerSecond = 10522.5
MPI Rank 1: 08/04/2016 14:00:28:  Epoch[ 2 of 5]-Minibatch[  49-  51, 63.75%]: CrossEntropyWithSoftmax = 1.88009497 * 297; EvalErrorPrediction = 0.49158249 * 297; time = 0.0248s; samplesPerSecond = 11986.0
MPI Rank 1: 08/04/2016 14:00:28:  Epoch[ 2 of 5]-Minibatch[  52-  54, 67.50%]: CrossEntropyWithSoftmax = 2.01648484 * 288; EvalErrorPrediction = 0.56944444 * 288; time = 0.0202s; samplesPerSecond = 14274.4
MPI Rank 1: 08/04/2016 14:00:28:  Epoch[ 2 of 5]-Minibatch[  55-  57, 71.25%]: CrossEntropyWithSoftmax = 1.99464539 * 285; EvalErrorPrediction = 0.55789474 * 285; time = 0.0243s; samplesPerSecond = 11741.9
MPI Rank 1: 08/04/2016 14:00:28:  Epoch[ 2 of 5]-Minibatch[  58-  60, 75.00%]: CrossEntropyWithSoftmax = 2.01199850 * 267; EvalErrorPrediction = 0.49438202 * 267; time = 0.0206s; samplesPerSecond = 12953.0
MPI Rank 1: 08/04/2016 14:00:28:  Epoch[ 2 of 5]-Minibatch[  61-  63, 78.75%]: CrossEntropyWithSoftmax = 1.89896741 * 277; EvalErrorPrediction = 0.53068592 * 277; time = 0.0197s; samplesPerSecond = 14050.2
MPI Rank 1: 08/04/2016 14:00:28:  Epoch[ 2 of 5]-Minibatch[  64-  66, 82.50%]: CrossEntropyWithSoftmax = 1.97463430 * 292; EvalErrorPrediction = 0.54109589 * 292; time = 0.0107s; samplesPerSecond = 27198.2
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     0.15 seconds since last report (0.00 seconds on comm.); 4175 samples processed by 2 workers (2066 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 28.03k samplesPerSecond , throughputPerWorker = 14.01k samplesPerSecond
MPI Rank 1: 08/04/2016 14:00:28:  Epoch[ 2 of 5]-Minibatch[  67-  69, 86.25%]: CrossEntropyWithSoftmax = 1.84423437 * 284; EvalErrorPrediction = 0.54225352 * 284; time = 0.0227s; samplesPerSecond = 12537.5
MPI Rank 1: 08/04/2016 14:00:28:  Epoch[ 2 of 5]-Minibatch[  70-  72, 90.00%]: CrossEntropyWithSoftmax = 1.77253886 * 298; EvalErrorPrediction = 0.50000000 * 298; time = 0.0223s; samplesPerSecond = 13352.5
MPI Rank 1: 08/04/2016 14:00:28:  Epoch[ 2 of 5]-Minibatch[  73-  75, 93.75%]: CrossEntropyWithSoftmax = 2.11522779 * 291; EvalErrorPrediction = 0.57388316 * 291; time = 0.0204s; samplesPerSecond = 14284.3
MPI Rank 1: 08/04/2016 14:00:28:  Epoch[ 2 of 5]-Minibatch[  76-  78, 97.50%]: CrossEntropyWithSoftmax = 2.01997539 * 284; EvalErrorPrediction = 0.53521127 * 284; time = 0.0244s; samplesPerSecond = 11655.1
MPI Rank 1: 08/04/2016 14:00:28:  Epoch[ 2 of 5]-Minibatch[  79-  81, 101.25%]: CrossEntropyWithSoftmax = 1.96619952 * 172; EvalErrorPrediction = 0.51744186 * 172; time = 0.0133s; samplesPerSecond = 12915.8
MPI Rank 1: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.01-seconds latency this time; accumulated time on sync point = 0.01 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 4-th sync:     0.25 seconds since last report (0.15 seconds on comm.); 7807 samples processed by 2 workers (1140 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 30.79k samplesPerSecond , throughputPerWorker = 15.39k samplesPerSecond
MPI Rank 1: 08/04/2016 14:00:28: Finished Epoch[ 2 of 5]: [Training] CrossEntropyWithSoftmax = 2.00205464 * 20480; EvalErrorPrediction = 0.54848633 * 20480; totalSamplesSeen = 40960; learningRatePerSample = 0.001953125; epochTime=0.714061s
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:28: Starting Epoch 3: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 2: frames [40960..61440] (first utterance at frame 40960), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:28: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 08/04/2016 14:00:28:  Epoch[ 3 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.89318819 * 1150; EvalErrorPrediction = 0.51739130 * 1150; time = 0.0436s; samplesPerSecond = 26370.7
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.04-seconds latency this time; accumulated time on sync point = 0.04 seconds , average latency = 0.04 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     0.13 seconds since last report (0.01 seconds on comm.); 4878 samples processed by 2 workers (2294 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 36.66k samplesPerSecond , throughputPerWorker = 18.33k samplesPerSecond
MPI Rank 1: 08/04/2016 14:00:28:  Epoch[ 3 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.88461916 * 1144; EvalErrorPrediction = 0.51923077 * 1144; time = 0.0865s; samplesPerSecond = 13218.7
MPI Rank 1: 08/04/2016 14:00:28:  Epoch[ 3 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.89233660 * 1158; EvalErrorPrediction = 0.53281520 * 1158; time = 0.0715s; samplesPerSecond = 16186.3
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.04 seconds , average latency = 0.02 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     0.12 seconds since last report (0.00 seconds on comm.); 4878 samples processed by 2 workers (2313 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 41.99k samplesPerSecond , throughputPerWorker = 20.99k samplesPerSecond
MPI Rank 1: 08/04/2016 14:00:28:  Epoch[ 3 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.88410888 * 1155; EvalErrorPrediction = 0.53073593 * 1155; time = 0.0444s; samplesPerSecond = 26022.9
MPI Rank 1: 08/04/2016 14:00:28:  Epoch[ 3 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.95866881 * 1134; EvalErrorPrediction = 0.55555556 * 1134; time = 0.0526s; samplesPerSecond = 21547.5
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.04 seconds , average latency = 0.01 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     0.11 seconds since last report (0.00 seconds on comm.); 4809 samples processed by 2 workers (2277 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 42.51k samplesPerSecond , throughputPerWorker = 21.25k samplesPerSecond
MPI Rank 1: 08/04/2016 14:00:28:  Epoch[ 3 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.90512038 * 1143; EvalErrorPrediction = 0.53543307 * 1143; time = 0.0603s; samplesPerSecond = 18945.8
MPI Rank 1: 08/04/2016 14:00:28:  Epoch[ 3 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.83433865 * 770; EvalErrorPrediction = 0.53506494 * 770; time = 0.0362s; samplesPerSecond = 21268.4
MPI Rank 1: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.03-seconds latency this time; accumulated time on sync point = 0.06 seconds , average latency = 0.02 seconds
MPI Rank 1: 		(model aggregation stats) 4-th sync:     0.14 seconds since last report (0.07 seconds on comm.); 5915 samples processed by 2 workers (770 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 42.63k samplesPerSecond , throughputPerWorker = 21.31k samplesPerSecond
MPI Rank 1: 08/04/2016 14:00:29: Finished Epoch[ 3 of 5]: [Training] CrossEntropyWithSoftmax = 1.90143984 * 20480; EvalErrorPrediction = 0.53535156 * 20480; totalSamplesSeen = 61440; learningRatePerSample = 9.7656251e-05; epochTime=0.50138s
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:29: Starting Epoch 4: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 3: frames [61440..81920] (first utterance at frame 61440), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:29: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 08/04/2016 14:00:29:  Epoch[ 4 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.81516673 * 1193; EvalErrorPrediction = 0.49203688 * 1193; time = 0.0734s; samplesPerSecond = 16255.2
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     0.12 seconds since last report (0.00 seconds on comm.); 4812 samples processed by 2 workers (2306 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 40.61k samplesPerSecond , throughputPerWorker = 20.31k samplesPerSecond
MPI Rank 1: 08/04/2016 14:00:29:  Epoch[ 4 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.84474827 * 1113; EvalErrorPrediction = 0.51123091 * 1113; time = 0.0419s; samplesPerSecond = 26541.7
MPI Rank 1: 08/04/2016 14:00:29:  Epoch[ 4 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.83913319 * 1170; EvalErrorPrediction = 0.52991453 * 1170; time = 0.0434s; samplesPerSecond = 26985.3
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     0.12 seconds since last report (0.00 seconds on comm.); 4977 samples processed by 2 workers (2382 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 42.06k samplesPerSecond , throughputPerWorker = 21.03k samplesPerSecond
MPI Rank 1: 08/04/2016 14:00:29:  Epoch[ 4 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.78922411 * 1212; EvalErrorPrediction = 0.49174917 * 1212; time = 0.0748s; samplesPerSecond = 16207.3
MPI Rank 1: 08/04/2016 14:00:29:  Epoch[ 4 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.79197872 * 1191; EvalErrorPrediction = 0.47439127 * 1191; time = 0.0590s; samplesPerSecond = 20189.5
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     0.12 seconds since last report (0.00 seconds on comm.); 4887 samples processed by 2 workers (2388 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 42.26k samplesPerSecond , throughputPerWorker = 21.13k samplesPerSecond
MPI Rank 1: 08/04/2016 14:00:29:  Epoch[ 4 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.89534839 * 1197; EvalErrorPrediction = 0.54135338 * 1197; time = 0.0565s; samplesPerSecond = 21190.7
MPI Rank 1: 08/04/2016 14:00:29:  Epoch[ 4 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.95578719 * 816; EvalErrorPrediction = 0.54656863 * 816; time = 0.0389s; samplesPerSecond = 20994.7
MPI Rank 1: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.02-seconds latency this time; accumulated time on sync point = 0.02 seconds , average latency = 0.01 seconds
MPI Rank 1: 		(model aggregation stats) 4-th sync:     0.14 seconds since last report (0.07 seconds on comm.); 5804 samples processed by 2 workers (816 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 42.66k samplesPerSecond , throughputPerWorker = 21.33k samplesPerSecond
MPI Rank 1: 08/04/2016 14:00:29: Finished Epoch[ 4 of 5]: [Training] CrossEntropyWithSoftmax = 1.86556236 * 20480; EvalErrorPrediction = 0.51552734 * 20480; totalSamplesSeen = 81920; learningRatePerSample = 9.7656251e-05; epochTime=0.488768s
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:29: Starting Epoch 5: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 4: frames [81920..102400] (first utterance at frame 81920), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:29: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 08/04/2016 14:00:29:  Epoch[ 5 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.84116883 * 1216; EvalErrorPrediction = 0.53782895 * 1216; time = 0.0673s; samplesPerSecond = 18069.7
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     0.12 seconds since last report (0.00 seconds on comm.); 4910 samples processed by 2 workers (2408 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 40.83k samplesPerSecond , throughputPerWorker = 20.42k samplesPerSecond
MPI Rank 1: 08/04/2016 14:00:29:  Epoch[ 5 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.77757309 * 1192; EvalErrorPrediction = 0.51677852 * 1192; time = 0.0498s; samplesPerSecond = 23913.7
MPI Rank 1: 08/04/2016 14:00:29:  Epoch[ 5 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.80944806 * 1216; EvalErrorPrediction = 0.50904605 * 1216; time = 0.0581s; samplesPerSecond = 20939.9
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     0.11 seconds since last report (0.00 seconds on comm.); 4540 samples processed by 2 workers (2059 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 41.57k samplesPerSecond , throughputPerWorker = 20.78k samplesPerSecond
MPI Rank 1: 08/04/2016 14:00:29:  Epoch[ 5 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.91017757 * 1227; EvalErrorPrediction = 0.51589242 * 1227; time = 0.0724s; samplesPerSecond = 16939.8
MPI Rank 1: 08/04/2016 14:00:30:  Epoch[ 5 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.78819337 * 1231; EvalErrorPrediction = 0.51665313 * 1231; time = 0.0597s; samplesPerSecond = 20607.3
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     0.12 seconds since last report (0.00 seconds on comm.); 4881 samples processed by 2 workers (2427 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 42.38k samplesPerSecond , throughputPerWorker = 21.19k samplesPerSecond
MPI Rank 1: 08/04/2016 14:00:30:  Epoch[ 5 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.90359413 * 1175; EvalErrorPrediction = 0.53531915 * 1175; time = 0.0556s; samplesPerSecond = 21151.0
MPI Rank 1: 08/04/2016 14:00:30:  Epoch[ 5 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.85321364 * 836; EvalErrorPrediction = 0.52990431 * 836; time = 0.0577s; samplesPerSecond = 14498.8
MPI Rank 1: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 4-th sync:     0.15 seconds since last report (0.06 seconds on comm.); 6149 samples processed by 2 workers (1199 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 41.40k samplesPerSecond , throughputPerWorker = 20.70k samplesPerSecond
MPI Rank 1: 08/04/2016 14:00:30: Finished Epoch[ 5 of 5]: [Training] CrossEntropyWithSoftmax = 1.82398510 * 20480; EvalErrorPrediction = 0.51347656 * 20480; totalSamplesSeen = 102400; learningRatePerSample = 9.7656251e-05; epochTime=0.493392s
MPI Rank 1: 08/04/2016 14:00:30: CNTKCommandTrainEnd: speechTrain
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:30: Action "train" complete.
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:30: __COMPLETED__
MPI Rank 1: ~MPIWrapper