CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU W3530 @ 2.80GHz
    Hardware threads: 4
    Total Memory: 12580404 kB
-------------------------------------------------------------------
=== Running C:\Program Files\Microsoft MPI\Bin\/mpiexec.exe -n 2 C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\release\cntk.exe configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN/ParallelBM/cntk.cntk currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu DeviceId=-1 timestamping=true numCPUThreads=2 precision=double speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]] stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu/stderr
-------------------------------------------------------------------
Build info: 

		Built time: Aug  4 2016 06:18:32
		Last modified date: Thu Aug  4 03:38:59 2016
		Build type: Release
		Build target: GPU
		With 1bit-SGD: yes
		Math lib: mkl
		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
		CUB_PATH: c:\src\cub-1.4.1
		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
		Build Branch: HEAD
		Build SHA1: 0f61695dfc335f2406284d335678f57c215e6e9c
		Built by svcphil on Philly-Pool1
		Build Path: c:\jenkins\workspace\CNTK-Build-Windows@2\Source\CNTK\
-------------------------------------------------------------------
Changed current directory to C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPIWrapper: initializing MPI
-------------------------------------------------------------------
Build info: 

		Built time: Aug  4 2016 06:18:32
		Last modified date: Thu Aug  4 03:38:59 2016
		Build type: Release
		Build target: GPU
		With 1bit-SGD: yes
		Math lib: mkl
		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
		CUB_PATH: c:\src\cub-1.4.1
		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
		Build Branch: HEAD
		Build SHA1: 0f61695dfc335f2406284d335678f57c215e6e9c
		Built by svcphil on Philly-Pool1
		Build Path: c:\jenkins\workspace\CNTK-Build-Windows@2\Source\CNTK\
-------------------------------------------------------------------
Changed current directory to C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPIWrapper: initializing MPI
ping [requestnodes (before change)]: 2 nodes pinging each other
ping [requestnodes (before change)]: 2 nodes pinging each other
ping [requestnodes (before change)]: all 2 nodes responded
ping [requestnodes (before change)]: all 2 nodes responded
requestnodes [MPIWrapper]: using 2 out of 2 MPI nodes (2 requested); we (1) are in (participating)
requestnodes [MPIWrapper]: using 2 out of 2 MPI nodes (2 requested); we (0) are in (participating)
ping [requestnodes (after change)]: 2 nodes pinging each other
ping [requestnodes (after change)]: 2 nodes pinging each other
ping [requestnodes (after change)]: all 2 nodes responded
ping [requestnodes (after change)]: all 2 nodes responded
mpihelper: we are cog 1 in a gearbox of 2
ping [mpihelper]: 2 nodes pinging each other
mpihelper: we are cog 0 in a gearbox of 2
ping [mpihelper]: 2 nodes pinging each other
ping [mpihelper]: all 2 nodes responded
ping [mpihelper]: all 2 nodes responded
MPI Rank 0: 08/04/2016 09:19:23: Redirecting stderr to file C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu/stderr_speechTrain.logrank0
MPI Rank 0: 08/04/2016 09:19:23: -------------------------------------------------------------------
MPI Rank 0: 08/04/2016 09:19:23: Build info: 
MPI Rank 0: 
MPI Rank 0: 08/04/2016 09:19:23: 		Built time: Aug  4 2016 06:18:32
MPI Rank 0: 08/04/2016 09:19:23: 		Last modified date: Thu Aug  4 03:38:59 2016
MPI Rank 0: 08/04/2016 09:19:23: 		Build type: Release
MPI Rank 0: 08/04/2016 09:19:23: 		Build target: GPU
MPI Rank 0: 08/04/2016 09:19:23: 		With 1bit-SGD: yes
MPI Rank 0: 08/04/2016 09:19:23: 		Math lib: mkl
MPI Rank 0: 08/04/2016 09:19:23: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
MPI Rank 0: 08/04/2016 09:19:23: 		CUB_PATH: c:\src\cub-1.4.1
MPI Rank 0: 08/04/2016 09:19:23: 		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
MPI Rank 0: 08/04/2016 09:19:23: 		Build Branch: HEAD
MPI Rank 0: 08/04/2016 09:19:23: 		Build SHA1: 0f61695dfc335f2406284d335678f57c215e6e9c
MPI Rank 0: 08/04/2016 09:19:23: 		Built by svcphil on Philly-Pool1
MPI Rank 0: 08/04/2016 09:19:23: 		Build Path: c:\jenkins\workspace\CNTK-Build-Windows@2\Source\CNTK\
MPI Rank 0: 08/04/2016 09:19:23: -------------------------------------------------------------------
MPI Rank 0: 08/04/2016 09:19:23: -------------------------------------------------------------------
MPI Rank 0: 08/04/2016 09:19:23: GPU info:
MPI Rank 0: 
MPI Rank 0: 08/04/2016 09:19:23: 		Device[0]: cores = 2496; computeCapability = 5.2; type = "Quadro M4000"; memory = 8090 MB
MPI Rank 0: 08/04/2016 09:19:23: -------------------------------------------------------------------
MPI Rank 0: 
MPI Rank 0: 08/04/2016 09:19:23: Running on cntk-muc00 at 2016/08/04 09:19:23
MPI Rank 0: 08/04/2016 09:19:23: Command line: 
MPI Rank 0: C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\release\cntk.exe  configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN/ParallelBM/cntk.cntk  currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data  RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu  DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data  ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN  OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu  DeviceId=-1  timestamping=true  numCPUThreads=2  precision=double  speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]  stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu/stderr
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 08/04/2016 09:19:23: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: 08/04/2016 09:19:23: precision = "float"
MPI Rank 0: command = speechTrain
MPI Rank 0: deviceId = $DeviceId$
MPI Rank 0: parallelTrain = true
MPI Rank 0: speechTrain = [
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "$RunDir$/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = $DeviceId$
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 blockSizePerWorker=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "$DataDir$/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "$DataDir$/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ]
MPI Rank 0: currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu
MPI Rank 0: DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 0: OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu
MPI Rank 0: DeviceId=-1
MPI Rank 0: timestamping=true
MPI Rank 0: numCPUThreads=2
MPI Rank 0: precision=double
MPI Rank 0: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu/stderr
MPI Rank 0: 
MPI Rank 0: 08/04/2016 09:19:23: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 
MPI Rank 0: 08/04/2016 09:19:23: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: 08/04/2016 09:19:23: precision = "float"
MPI Rank 0: command = speechTrain
MPI Rank 0: deviceId = -1
MPI Rank 0: parallelTrain = true
MPI Rank 0: speechTrain = [
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = -1
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 blockSizePerWorker=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ]
MPI Rank 0: currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu
MPI Rank 0: DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 0: OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu
MPI Rank 0: DeviceId=-1
MPI Rank 0: timestamping=true
MPI Rank 0: numCPUThreads=2
MPI Rank 0: precision=double
MPI Rank 0: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu/stderr
MPI Rank 0: 
MPI Rank 0: 08/04/2016 09:19:23: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 
MPI Rank 0: 08/04/2016 09:19:23: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: configparameters: cntk.cntk:command=speechTrain
MPI Rank 0: configparameters: cntk.cntk:ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 0: configparameters: cntk.cntk:currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: configparameters: cntk.cntk:DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: configparameters: cntk.cntk:deviceId=-1
MPI Rank 0: configparameters: cntk.cntk:numCPUThreads=2
MPI Rank 0: configparameters: cntk.cntk:OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu
MPI Rank 0: configparameters: cntk.cntk:parallelTrain=true
MPI Rank 0: configparameters: cntk.cntk:precision=double
MPI Rank 0: configparameters: cntk.cntk:RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu
MPI Rank 0: configparameters: cntk.cntk:speechTrain=[
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = -1
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 blockSizePerWorker=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ] [SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: 
MPI Rank 0: configparameters: cntk.cntk:stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu/stderr
MPI Rank 0: configparameters: cntk.cntk:timestamping=true
MPI Rank 0: 08/04/2016 09:19:23: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 08/04/2016 09:19:23: Commands: speechTrain
MPI Rank 0: 08/04/2016 09:19:23: Precision = "double"
MPI Rank 0: 08/04/2016 09:19:23: Using 2 CPU threads.
MPI Rank 0: 08/04/2016 09:19:23: CNTKModelPath: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn
MPI Rank 0: 08/04/2016 09:19:23: CNTKCommandTrainInfo: speechTrain : 5
MPI Rank 0: 08/04/2016 09:19:23: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 5
MPI Rank 0: 
MPI Rank 0: 08/04/2016 09:19:23: ##############################################################################
MPI Rank 0: 08/04/2016 09:19:23: #                                                                            #
MPI Rank 0: 08/04/2016 09:19:23: # Action "train"                                                             #
MPI Rank 0: 08/04/2016 09:19:23: #                                                                            #
MPI Rank 0: 08/04/2016 09:19:23: ##############################################################################
MPI Rank 0: 
MPI Rank 0: 08/04/2016 09:19:23: CNTKCommandTrainBegin: speechTrain
MPI Rank 0: SimpleNetworkBuilder Using CPU
MPI Rank 0: reading script file glob_0000.scp ... 948 entries
MPI Rank 0: total 132 state names in state list C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list
MPI Rank 0: htkmlfreader: reading MLF file C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf ... total 948 entries
MPI Rank 0: ...............................................................................................feature set 0: 252734 frames in 948 out of 948 utterances
MPI Rank 0: label set 0: 129 classes
MPI Rank 0: minibatchutterancesource: 948 utterances grouped into 3 chunks, av. chunk size: 316.0 utterances, 84244.7 frames
MPI Rank 0: 
MPI Rank 0: 08/04/2016 09:19:24: Creating virgin network.
MPI Rank 0: 
MPI Rank 0: Post-processing network...
MPI Rank 0: 
MPI Rank 0: 7 roots:
MPI Rank 0: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
MPI Rank 0: 	EvalErrorPrediction = ErrorPrediction()
MPI Rank 0: 	InvStdOfFeatures = InvStdDev()
MPI Rank 0: 	MeanOfFeatures = Mean()
MPI Rank 0: 	PosteriorProb = Softmax()
MPI Rank 0: 	Prior = Mean()
MPI Rank 0: 	ScaledLogLikelihood = Minus()
MPI Rank 0: 
MPI Rank 0: Validating network. 25 nodes to process in pass 1.
MPI Rank 0: 
MPI Rank 0: Validating --> labels = InputValue() :  -> [132 x *]
MPI Rank 0: Validating --> W2 = LearnableParameter() :  -> [132 x 512]
MPI Rank 0: Validating --> W1 = LearnableParameter() :  -> [512 x 512]
MPI Rank 0: Validating --> W0 = LearnableParameter() :  -> [512 x 363]
MPI Rank 0: Validating --> features = InputValue() :  -> [363 x *]
MPI Rank 0: Validating --> MeanOfFeatures = Mean (features) : [363 x *] -> [363]
MPI Rank 0: Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *] -> [363]
MPI Rank 0: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *], [363], [363] -> [363 x *]
MPI Rank 0: Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [512 x 363], [363 x *] -> [512 x *]
MPI Rank 0: Validating --> B0 = LearnableParameter() :  -> [512 x 1]
MPI Rank 0: Validating --> W0*features+B0 = Plus (W0*features, B0) : [512 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 0: Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> W1*H1 = Times (W1, H1) : [512 x 512], [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> B1 = LearnableParameter() :  -> [512 x 1]
MPI Rank 0: Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [512 x 1 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 0: Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> W2*H1 = Times (W2, H2) : [132 x 512], [512 x 1 x *] -> [132 x 1 x *]
MPI Rank 0: Validating --> B2 = LearnableParameter() :  -> [132 x 1]
MPI Rank 0: Validating --> HLast = Plus (W2*H1, B2) : [132 x 1 x *], [132 x 1] -> [132 x 1 x *]
MPI Rank 0: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 0: Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 0: Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *] -> [132 x 1 x *]
MPI Rank 0: Validating --> Prior = Mean (labels) : [132 x *] -> [132]
MPI Rank 0: Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
MPI Rank 0: Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *], [132] -> [132 x 1 x *]
MPI Rank 0: 
MPI Rank 0: Validating network. 17 nodes to process in pass 2.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: Validating network, final pass.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 12 out of 25 nodes do not share the minibatch layout with the input data.
MPI Rank 0: 
MPI Rank 0: Post-processing network complete.
MPI Rank 0: 
MPI Rank 0: 08/04/2016 09:19:24: Created model with 25 nodes on CPU.
MPI Rank 0: 
MPI Rank 0: 08/04/2016 09:19:24: Training criterion node(s):
MPI Rank 0: 08/04/2016 09:19:24: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax
MPI Rank 0: 
MPI Rank 0: 08/04/2016 09:19:24: Evaluation criterion node(s):
MPI Rank 0: 
MPI Rank 0: 08/04/2016 09:19:24: 	EvalErrorPrediction = ErrorPrediction
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: Allocating matrices for forward and/or backward propagation.
MPI Rank 0: 
MPI Rank 0: Memory Sharing Structure:
MPI Rank 0: 
MPI Rank 0: 0000000000000000: {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[363]] [LogOfPrior Gradient[132]] [MVNormalizedFeatures Gradient[363 x *]] [MeanOfFeatures Gradient[363]] [PosteriorProb Gradient[132 x 1 x *]] [PosteriorProb Value[132 x 1 x *]] [Prior Gradient[132]] [ScaledLogLikelihood Gradient[132 x 1 x *]] [features Gradient[363 x *]] [labels Gradient[132 x *]] }
MPI Rank 0: 000000B2C9EC0CC0: {[W1 Value[512 x 512]] }
MPI Rank 0: 000000B2C9EC0D60: {[MeanOfFeatures Value[363]] }
MPI Rank 0: 000000B2C9EC0E00: {[InvStdOfFeatures Value[363]] }
MPI Rank 0: 000000B2C9EC0F40: {[features Value[363 x *]] }
MPI Rank 0: 000000B2C9EC1580: {[W0 Value[512 x 363]] }
MPI Rank 0: 000000B2C9EC18A0: {[B0 Value[512 x 1]] }
MPI Rank 0: 000000B2E484BDE0: {[B1 Value[512 x 1]] }
MPI Rank 0: 000000B2E484C380: {[EvalErrorPrediction Value[1]] }
MPI Rank 0: 000000B2E484C4C0: {[ScaledLogLikelihood Value[132 x 1 x *]] }
MPI Rank 0: 000000B2E484C560: {[CrossEntropyWithSoftmax Value[1]] }
MPI Rank 0: 000000B2E484C740: {[LogOfPrior Value[132]] }
MPI Rank 0: 000000B2E484C7E0: {[labels Value[132 x *]] }
MPI Rank 0: 000000B2E484C920: {[W0*features Value[512 x *]] }
MPI Rank 0: 000000B2E484C9C0: {[W0 Gradient[512 x 363]] [W0*features+B0 Value[512 x 1 x *]] }
MPI Rank 0: 000000B2E484CB00: {[W0*features+B0 Gradient[512 x 1 x *]] [W1*H1 Value[512 x 1 x *]] }
MPI Rank 0: 000000B2E484CBA0: {[W1 Gradient[512 x 512]] [W1*H1+B1 Value[512 x 1 x *]] }
MPI Rank 0: 000000B2E484CCE0: {[H1 Value[512 x 1 x *]] [W0*features Gradient[512 x *]] }
MPI Rank 0: 000000B2E484D140: {[Prior Value[132]] }
MPI Rank 0: 000000B2E484D280: {[B0 Gradient[512 x 1]] [H1 Gradient[512 x 1 x *]] [W1*H1+B1 Gradient[512 x 1 x *]] [W2*H1 Value[132 x 1 x *]] }
MPI Rank 0: 000000B2E484D500: {[HLast Value[132 x 1 x *]] [W2 Gradient[132 x 512]] }
MPI Rank 0: 000000B2E484D5A0: {[CrossEntropyWithSoftmax Gradient[1]] }
MPI Rank 0: 000000B2E484D640: {[B1 Gradient[512 x 1]] [H2 Gradient[512 x 1 x *]] [HLast Gradient[132 x 1 x *]] }
MPI Rank 0: 000000B2E484D6E0: {[W2*H1 Gradient[132 x 1 x *]] }
MPI Rank 0: 000000B2E484D780: {[H2 Value[512 x 1 x *]] [W1*H1 Gradient[512 x 1 x *]] }
MPI Rank 0: 000000B2E484D820: {[B2 Gradient[132 x 1]] }
MPI Rank 0: 000000B2E484D960: {[MVNormalizedFeatures Value[363 x *]] }
MPI Rank 0: 000000B2E484DAA0: {[B2 Value[132 x 1]] }
MPI Rank 0: 000000B2E484DB40: {[W2 Value[132 x 512]] }
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 08/04/2016 09:19:24: Precomputing --> 3 PreCompute nodes found.
MPI Rank 0: 
MPI Rank 0: 08/04/2016 09:19:24: 	MeanOfFeatures = Mean()
MPI Rank 0: 08/04/2016 09:19:24: 	InvStdOfFeatures = InvStdDev()
MPI Rank 0: 08/04/2016 09:19:24: 	Prior = Mean()
MPI Rank 0: minibatchiterator: epoch 0: frames [0..252734] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 0: requiredata: determined feature kind as 33-dimensional 'USER' with frame shift 10.0 ms
MPI Rank 0: 
MPI Rank 0: 08/04/2016 09:19:26: Precomputing --> Completed.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 08/04/2016 09:19:27: Starting Epoch 1: learning rate per sample = 0.015625  effective momentum = 0.900000  momentum as time constant = 607.4 samples
MPI Rank 0: minibatchiterator: epoch 0: frames [0..20480] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 08/04/2016 09:19:27: Starting minibatch loop.
MPI Rank 0: 08/04/2016 09:19:27:  Epoch[ 1 of 5]-Minibatch[   1-   3, 0.94%]: CrossEntropyWithSoftmax = 4.74042719 * 192; EvalErrorPrediction = 0.95833333 * 192; time = 0.0523s; samplesPerSecond = 3670.1
MPI Rank 0: 08/04/2016 09:19:27:  Epoch[ 1 of 5]-Minibatch[   4-   6, 1.88%]: CrossEntropyWithSoftmax = 4.53912258 * 192; EvalErrorPrediction = 0.94270833 * 192; time = 0.0562s; samplesPerSecond = 3418.2
MPI Rank 0: 08/04/2016 09:19:27:  Epoch[ 1 of 5]-Minibatch[   7-   9, 2.81%]: CrossEntropyWithSoftmax = 4.54672524 * 192; EvalErrorPrediction = 0.94791667 * 192; time = 0.0531s; samplesPerSecond = 3614.5
MPI Rank 0: 08/04/2016 09:19:27:  Epoch[ 1 of 5]-Minibatch[  10-  12, 3.75%]: CrossEntropyWithSoftmax = 4.03095911 * 192; EvalErrorPrediction = 0.91145833 * 192; time = 0.0540s; samplesPerSecond = 3555.3
MPI Rank 0: 08/04/2016 09:19:27:  Epoch[ 1 of 5]-Minibatch[  13-  15, 4.69%]: CrossEntropyWithSoftmax = 4.38138374 * 192; EvalErrorPrediction = 0.89583333 * 192; time = 0.0585s; samplesPerSecond = 3284.2
MPI Rank 0: 08/04/2016 09:19:27:  Epoch[ 1 of 5]-Minibatch[  16-  18, 5.63%]: CrossEntropyWithSoftmax = 4.49453128 * 192; EvalErrorPrediction = 0.92187500 * 192; time = 0.0590s; samplesPerSecond = 3256.3
MPI Rank 0: 08/04/2016 09:19:27:  Epoch[ 1 of 5]-Minibatch[  19-  21, 6.56%]: CrossEntropyWithSoftmax = 4.14436970 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.0561s; samplesPerSecond = 3423.6
MPI Rank 0: 08/04/2016 09:19:27:  Epoch[ 1 of 5]-Minibatch[  22-  24, 7.50%]: CrossEntropyWithSoftmax = 4.01187156 * 192; EvalErrorPrediction = 0.92708333 * 192; time = 0.0771s; samplesPerSecond = 2491.0
MPI Rank 0: 08/04/2016 09:19:28:  Epoch[ 1 of 5]-Minibatch[  25-  27, 8.44%]: CrossEntropyWithSoftmax = 4.05946673 * 192; EvalErrorPrediction = 0.88020833 * 192; time = 0.0710s; samplesPerSecond = 2704.9
MPI Rank 0: 08/04/2016 09:19:28:  Epoch[ 1 of 5]-Minibatch[  28-  30, 9.38%]: CrossEntropyWithSoftmax = 3.88908076 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 0.0850s; samplesPerSecond = 2258.5
MPI Rank 0: 08/04/2016 09:19:28:  Epoch[ 1 of 5]-Minibatch[  31-  33, 10.31%]: CrossEntropyWithSoftmax = 4.01537572 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.0718s; samplesPerSecond = 2674.1
MPI Rank 0: 08/04/2016 09:19:28:  Epoch[ 1 of 5]-Minibatch[  34-  36, 11.25%]: CrossEntropyWithSoftmax = 3.90593862 * 192; EvalErrorPrediction = 0.86979167 * 192; time = 0.0775s; samplesPerSecond = 2478.2
MPI Rank 0: 08/04/2016 09:19:28:  Epoch[ 1 of 5]-Minibatch[  37-  39, 12.19%]: CrossEntropyWithSoftmax = 3.84827452 * 192; EvalErrorPrediction = 0.85937500 * 192; time = 0.0713s; samplesPerSecond = 2692.4
MPI Rank 0: 08/04/2016 09:19:28:  Epoch[ 1 of 5]-Minibatch[  40-  42, 13.13%]: CrossEntropyWithSoftmax = 3.80377693 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.0773s; samplesPerSecond = 2482.7
MPI Rank 0: 08/04/2016 09:19:28:  Epoch[ 1 of 5]-Minibatch[  43-  45, 14.06%]: CrossEntropyWithSoftmax = 3.71660392 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.0722s; samplesPerSecond = 2658.7
MPI Rank 0: 08/04/2016 09:19:28:  Epoch[ 1 of 5]-Minibatch[  46-  48, 15.00%]: CrossEntropyWithSoftmax = 3.72442155 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.0765s; samplesPerSecond = 2511.3
MPI Rank 0: 08/04/2016 09:19:28:  Epoch[ 1 of 5]-Minibatch[  49-  51, 15.94%]: CrossEntropyWithSoftmax = 3.78746175 * 192; EvalErrorPrediction = 0.85937500 * 192; time = 0.0721s; samplesPerSecond = 2664.0
MPI Rank 0: 08/04/2016 09:19:28:  Epoch[ 1 of 5]-Minibatch[  52-  54, 16.88%]: CrossEntropyWithSoftmax = 3.79681669 * 192; EvalErrorPrediction = 0.88020833 * 192; time = 0.0775s; samplesPerSecond = 2476.1
MPI Rank 0: 08/04/2016 09:19:28:  Epoch[ 1 of 5]-Minibatch[  55-  57, 17.81%]: CrossEntropyWithSoftmax = 3.90406721 * 192; EvalErrorPrediction = 0.88541667 * 192; time = 0.0690s; samplesPerSecond = 2784.1
MPI Rank 0: 08/04/2016 09:19:28:  Epoch[ 1 of 5]-Minibatch[  58-  60, 18.75%]: CrossEntropyWithSoftmax = 3.62873369 * 192; EvalErrorPrediction = 0.86979167 * 192; time = 0.0708s; samplesPerSecond = 2712.3
MPI Rank 0: 08/04/2016 09:19:28:  Epoch[ 1 of 5]-Minibatch[  61-  63, 19.69%]: CrossEntropyWithSoftmax = 3.61056500 * 192; EvalErrorPrediction = 0.82291667 * 192; time = 0.0809s; samplesPerSecond = 2372.7
MPI Rank 0: 08/04/2016 09:19:29:  Epoch[ 1 of 5]-Minibatch[  64-  66, 20.63%]: CrossEntropyWithSoftmax = 3.45450749 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.0711s; samplesPerSecond = 2702.3
MPI Rank 0: 08/04/2016 09:19:29:  Epoch[ 1 of 5]-Minibatch[  67-  69, 21.56%]: CrossEntropyWithSoftmax = 3.72121317 * 192; EvalErrorPrediction = 0.87500000 * 192; time = 0.0873s; samplesPerSecond = 2198.2
MPI Rank 0: 08/04/2016 09:19:29:  Epoch[ 1 of 5]-Minibatch[  70-  72, 22.50%]: CrossEntropyWithSoftmax = 3.45620801 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.0721s; samplesPerSecond = 2664.3
MPI Rank 0: 08/04/2016 09:19:29:  Epoch[ 1 of 5]-Minibatch[  73-  75, 23.44%]: CrossEntropyWithSoftmax = 3.39268385 * 192; EvalErrorPrediction = 0.81250000 * 192; time = 0.0765s; samplesPerSecond = 2509.9
MPI Rank 0: 08/04/2016 09:19:29:  Epoch[ 1 of 5]-Minibatch[  76-  78, 24.38%]: CrossEntropyWithSoftmax = 3.45699679 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.0721s; samplesPerSecond = 2664.4
MPI Rank 0: 08/04/2016 09:19:29:  Epoch[ 1 of 5]-Minibatch[  79-  81, 25.31%]: CrossEntropyWithSoftmax = 3.39117328 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.0774s; samplesPerSecond = 2479.6
MPI Rank 0: 08/04/2016 09:19:29:  Epoch[ 1 of 5]-Minibatch[  82-  84, 26.25%]: CrossEntropyWithSoftmax = 3.57793178 * 192; EvalErrorPrediction = 0.84375000 * 192; time = 0.0716s; samplesPerSecond = 2680.1
MPI Rank 0: 08/04/2016 09:19:29:  Epoch[ 1 of 5]-Minibatch[  85-  87, 27.19%]: CrossEntropyWithSoftmax = 3.58213558 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.0774s; samplesPerSecond = 2481.9
MPI Rank 0: 08/04/2016 09:19:29:  Epoch[ 1 of 5]-Minibatch[  88-  90, 28.13%]: CrossEntropyWithSoftmax = 3.28315659 * 192; EvalErrorPrediction = 0.77083333 * 192; time = 0.0688s; samplesPerSecond = 2792.7
MPI Rank 0: 08/04/2016 09:19:29:  Epoch[ 1 of 5]-Minibatch[  91-  93, 29.06%]: CrossEntropyWithSoftmax = 3.54659310 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 0.0802s; samplesPerSecond = 2393.5
MPI Rank 0: 08/04/2016 09:19:29:  Epoch[ 1 of 5]-Minibatch[  94-  96, 30.00%]: CrossEntropyWithSoftmax = 3.35283923 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.0693s; samplesPerSecond = 2769.1
MPI Rank 0: 08/04/2016 09:19:29:  Epoch[ 1 of 5]-Minibatch[  97-  99, 30.94%]: CrossEntropyWithSoftmax = 3.33313289 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 0.0712s; samplesPerSecond = 2696.9
MPI Rank 0: 08/04/2016 09:19:29:  Epoch[ 1 of 5]-Minibatch[ 100- 102, 31.87%]: CrossEntropyWithSoftmax = 3.43465777 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.0787s; samplesPerSecond = 2439.5
MPI Rank 0: 08/04/2016 09:19:30:  Epoch[ 1 of 5]-Minibatch[ 103- 105, 32.81%]: CrossEntropyWithSoftmax = 3.53064241 * 192; EvalErrorPrediction = 0.83333333 * 192; time = 0.0719s; samplesPerSecond = 2669.9
MPI Rank 0: 08/04/2016 09:19:30:  Epoch[ 1 of 5]-Minibatch[ 106- 108, 33.75%]: CrossEntropyWithSoftmax = 3.44674207 * 192; EvalErrorPrediction = 0.84375000 * 192; time = 0.0876s; samplesPerSecond = 2192.0
MPI Rank 0: 08/04/2016 09:19:30:  Epoch[ 1 of 5]-Minibatch[ 109- 111, 34.69%]: CrossEntropyWithSoftmax = 3.22940992 * 192; EvalErrorPrediction = 0.79166667 * 192; time = 0.0692s; samplesPerSecond = 2773.8
MPI Rank 0: 08/04/2016 09:19:30:  Epoch[ 1 of 5]-Minibatch[ 112- 114, 35.63%]: CrossEntropyWithSoftmax = 3.14237732 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.0722s; samplesPerSecond = 2659.4
MPI Rank 0: 08/04/2016 09:19:30:  Epoch[ 1 of 5]-Minibatch[ 115- 117, 36.56%]: CrossEntropyWithSoftmax = 2.93598611 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0767s; samplesPerSecond = 2503.2
MPI Rank 0: 08/04/2016 09:19:30:  Epoch[ 1 of 5]-Minibatch[ 118- 120, 37.50%]: CrossEntropyWithSoftmax = 3.21140851 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.0704s; samplesPerSecond = 2729.2
MPI Rank 0: 08/04/2016 09:19:30:  Epoch[ 1 of 5]-Minibatch[ 121- 123, 38.44%]: CrossEntropyWithSoftmax = 3.23264806 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0768s; samplesPerSecond = 2500.8
MPI Rank 0: 08/04/2016 09:19:30:  Epoch[ 1 of 5]-Minibatch[ 124- 126, 39.38%]: CrossEntropyWithSoftmax = 3.13765393 * 192; EvalErrorPrediction = 0.74479167 * 192; time = 0.0715s; samplesPerSecond = 2686.7
MPI Rank 0: 08/04/2016 09:19:30:  Epoch[ 1 of 5]-Minibatch[ 127- 129, 40.31%]: CrossEntropyWithSoftmax = 3.21728730 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 0.0772s; samplesPerSecond = 2487.5
MPI Rank 0: 08/04/2016 09:19:30:  Epoch[ 1 of 5]-Minibatch[ 130- 132, 41.25%]: CrossEntropyWithSoftmax = 3.03692199 * 192; EvalErrorPrediction = 0.70833333 * 192; time = 0.0698s; samplesPerSecond = 2752.5
MPI Rank 0: 08/04/2016 09:19:30:  Epoch[ 1 of 5]-Minibatch[ 133- 135, 42.19%]: CrossEntropyWithSoftmax = 3.33921871 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.0711s; samplesPerSecond = 2702.2
MPI Rank 0: 08/04/2016 09:19:30:  Epoch[ 1 of 5]-Minibatch[ 136- 138, 43.13%]: CrossEntropyWithSoftmax = 3.06263327 * 192; EvalErrorPrediction = 0.75000000 * 192; time = 0.0777s; samplesPerSecond = 2470.1
MPI Rank 0: 08/04/2016 09:19:30:  Epoch[ 1 of 5]-Minibatch[ 139- 141, 44.06%]: CrossEntropyWithSoftmax = 2.87309932 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 0.0737s; samplesPerSecond = 2604.5
MPI Rank 0: 08/04/2016 09:19:31:  Epoch[ 1 of 5]-Minibatch[ 142- 144, 45.00%]: CrossEntropyWithSoftmax = 3.10510584 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 0.0780s; samplesPerSecond = 2463.1
MPI Rank 0: 08/04/2016 09:19:31:  Epoch[ 1 of 5]-Minibatch[ 145- 147, 45.94%]: CrossEntropyWithSoftmax = 3.24540871 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.0710s; samplesPerSecond = 2705.6
MPI Rank 0: 08/04/2016 09:19:31:  Epoch[ 1 of 5]-Minibatch[ 148- 150, 46.88%]: CrossEntropyWithSoftmax = 2.84330161 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0851s; samplesPerSecond = 2256.3
MPI Rank 0: 08/04/2016 09:19:31:  Epoch[ 1 of 5]-Minibatch[ 151- 153, 47.81%]: CrossEntropyWithSoftmax = 3.03978642 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.0835s; samplesPerSecond = 2298.1
MPI Rank 0: 08/04/2016 09:19:31:  Epoch[ 1 of 5]-Minibatch[ 154- 156, 48.75%]: CrossEntropyWithSoftmax = 3.03659073 * 192; EvalErrorPrediction = 0.74479167 * 192; time = 0.0644s; samplesPerSecond = 2983.2
MPI Rank 0: 08/04/2016 09:19:31:  Epoch[ 1 of 5]-Minibatch[ 157- 159, 49.69%]: CrossEntropyWithSoftmax = 3.05541411 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0716s; samplesPerSecond = 2683.2
MPI Rank 0: 08/04/2016 09:19:31:  Epoch[ 1 of 5]-Minibatch[ 160- 162, 50.63%]: CrossEntropyWithSoftmax = 3.13826192 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 0.0777s; samplesPerSecond = 2470.8
MPI Rank 0: 08/04/2016 09:19:31:  Epoch[ 1 of 5]-Minibatch[ 163- 165, 51.56%]: CrossEntropyWithSoftmax = 3.07379223 * 192; EvalErrorPrediction = 0.71354167 * 192; time = 0.0688s; samplesPerSecond = 2789.6
MPI Rank 0: 08/04/2016 09:19:31:  Epoch[ 1 of 5]-Minibatch[ 166- 168, 52.50%]: CrossEntropyWithSoftmax = 2.79868077 * 192; EvalErrorPrediction = 0.71354167 * 192; time = 0.0796s; samplesPerSecond = 2412.7
MPI Rank 0: 08/04/2016 09:19:31:  Epoch[ 1 of 5]-Minibatch[ 169- 171, 53.44%]: CrossEntropyWithSoftmax = 2.89220872 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 0.0696s; samplesPerSecond = 2756.7
MPI Rank 0: 08/04/2016 09:19:31:  Epoch[ 1 of 5]-Minibatch[ 172- 174, 54.37%]: CrossEntropyWithSoftmax = 2.95810848 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.0799s; samplesPerSecond = 2404.1
MPI Rank 0: 08/04/2016 09:19:31:  Epoch[ 1 of 5]-Minibatch[ 175- 177, 55.31%]: CrossEntropyWithSoftmax = 2.73556584 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0691s; samplesPerSecond = 2777.7
MPI Rank 0: 08/04/2016 09:19:31:  Epoch[ 1 of 5]-Minibatch[ 178- 180, 56.25%]: CrossEntropyWithSoftmax = 2.74817467 * 192; EvalErrorPrediction = 0.70833333 * 192; time = 0.0802s; samplesPerSecond = 2392.8
MPI Rank 0: 08/04/2016 09:19:31:  Epoch[ 1 of 5]-Minibatch[ 181- 183, 57.19%]: CrossEntropyWithSoftmax = 2.79482789 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0709s; samplesPerSecond = 2706.6
MPI Rank 0: 08/04/2016 09:19:32:  Epoch[ 1 of 5]-Minibatch[ 184- 186, 58.13%]: CrossEntropyWithSoftmax = 2.85199307 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0708s; samplesPerSecond = 2711.9
MPI Rank 0: 08/04/2016 09:19:32:  Epoch[ 1 of 5]-Minibatch[ 187- 189, 59.06%]: CrossEntropyWithSoftmax = 2.87310517 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.0861s; samplesPerSecond = 2229.5
MPI Rank 0: 08/04/2016 09:19:32:  Epoch[ 1 of 5]-Minibatch[ 190- 192, 60.00%]: CrossEntropyWithSoftmax = 2.87558692 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0725s; samplesPerSecond = 2649.6
MPI Rank 0: 08/04/2016 09:19:32:  Epoch[ 1 of 5]-Minibatch[ 193- 195, 60.94%]: CrossEntropyWithSoftmax = 2.65301666 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0765s; samplesPerSecond = 2509.4
MPI Rank 0: 08/04/2016 09:19:32:  Epoch[ 1 of 5]-Minibatch[ 196- 198, 61.88%]: CrossEntropyWithSoftmax = 2.63485298 * 192; EvalErrorPrediction = 0.70833333 * 192; time = 0.0712s; samplesPerSecond = 2697.4
MPI Rank 0: 08/04/2016 09:19:32:  Epoch[ 1 of 5]-Minibatch[ 199- 201, 62.81%]: CrossEntropyWithSoftmax = 2.65106093 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.0790s; samplesPerSecond = 2431.2
MPI Rank 0: 08/04/2016 09:19:32:  Epoch[ 1 of 5]-Minibatch[ 202- 204, 63.75%]: CrossEntropyWithSoftmax = 2.87337772 * 192; EvalErrorPrediction = 0.72395833 * 192; time = 0.0795s; samplesPerSecond = 2416.6
MPI Rank 0: 08/04/2016 09:19:32:  Epoch[ 1 of 5]-Minibatch[ 205- 207, 64.69%]: CrossEntropyWithSoftmax = 2.72824661 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.0692s; samplesPerSecond = 2773.0
MPI Rank 0: 08/04/2016 09:19:32:  Epoch[ 1 of 5]-Minibatch[ 208- 210, 65.63%]: CrossEntropyWithSoftmax = 2.76818891 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.0762s; samplesPerSecond = 2518.9
MPI Rank 0: 08/04/2016 09:19:32:  Epoch[ 1 of 5]-Minibatch[ 211- 213, 66.56%]: CrossEntropyWithSoftmax = 2.76831539 * 192; EvalErrorPrediction = 0.71875000 * 192; time = 0.0732s; samplesPerSecond = 2622.0
MPI Rank 0: 08/04/2016 09:19:32:  Epoch[ 1 of 5]-Minibatch[ 214- 216, 67.50%]: CrossEntropyWithSoftmax = 2.71706337 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.0704s; samplesPerSecond = 2726.4
MPI Rank 0: 08/04/2016 09:19:32:  Epoch[ 1 of 5]-Minibatch[ 217- 219, 68.44%]: CrossEntropyWithSoftmax = 2.38480503 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0782s; samplesPerSecond = 2455.6
MPI Rank 0: 08/04/2016 09:19:32:  Epoch[ 1 of 5]-Minibatch[ 220- 222, 69.38%]: CrossEntropyWithSoftmax = 2.45476385 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0732s; samplesPerSecond = 2623.6
MPI Rank 0: 08/04/2016 09:19:33:  Epoch[ 1 of 5]-Minibatch[ 223- 225, 70.31%]: CrossEntropyWithSoftmax = 2.58926823 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0764s; samplesPerSecond = 2514.4
MPI Rank 0: 08/04/2016 09:19:33:  Epoch[ 1 of 5]-Minibatch[ 226- 228, 71.25%]: CrossEntropyWithSoftmax = 2.57842236 * 192; EvalErrorPrediction = 0.67187500 * 192; time = 0.0815s; samplesPerSecond = 2355.5
MPI Rank 0: 08/04/2016 09:19:33:  Epoch[ 1 of 5]-Minibatch[ 229- 231, 72.19%]: CrossEntropyWithSoftmax = 2.51164168 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0766s; samplesPerSecond = 2505.3
MPI Rank 0: 08/04/2016 09:19:33:  Epoch[ 1 of 5]-Minibatch[ 232- 234, 73.13%]: CrossEntropyWithSoftmax = 2.44826795 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0718s; samplesPerSecond = 2673.6
MPI Rank 0: 08/04/2016 09:19:33:  Epoch[ 1 of 5]-Minibatch[ 235- 237, 74.06%]: CrossEntropyWithSoftmax = 2.55687652 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0769s; samplesPerSecond = 2495.3
MPI Rank 0: 08/04/2016 09:19:33:  Epoch[ 1 of 5]-Minibatch[ 238- 240, 75.00%]: CrossEntropyWithSoftmax = 2.23395297 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.0780s; samplesPerSecond = 2461.5
MPI Rank 0: 08/04/2016 09:19:33:  Epoch[ 1 of 5]-Minibatch[ 241- 243, 75.94%]: CrossEntropyWithSoftmax = 2.58668461 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0730s; samplesPerSecond = 2631.3
MPI Rank 0: 08/04/2016 09:19:33:  Epoch[ 1 of 5]-Minibatch[ 244- 246, 76.88%]: CrossEntropyWithSoftmax = 2.48284812 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0708s; samplesPerSecond = 2711.2
MPI Rank 0: 08/04/2016 09:19:33:  Epoch[ 1 of 5]-Minibatch[ 247- 249, 77.81%]: CrossEntropyWithSoftmax = 2.32588676 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0778s; samplesPerSecond = 2468.9
MPI Rank 0: 08/04/2016 09:19:33:  Epoch[ 1 of 5]-Minibatch[ 250- 252, 78.75%]: CrossEntropyWithSoftmax = 2.48009103 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0711s; samplesPerSecond = 2698.9
MPI Rank 0: 08/04/2016 09:19:33:  Epoch[ 1 of 5]-Minibatch[ 253- 255, 79.69%]: CrossEntropyWithSoftmax = 2.33580686 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.0766s; samplesPerSecond = 2507.2
MPI Rank 0: 08/04/2016 09:19:33:  Epoch[ 1 of 5]-Minibatch[ 256- 258, 80.63%]: CrossEntropyWithSoftmax = 2.53104201 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0715s; samplesPerSecond = 2684.3
MPI Rank 0: 08/04/2016 09:19:33:  Epoch[ 1 of 5]-Minibatch[ 259- 261, 81.56%]: CrossEntropyWithSoftmax = 2.32475572 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0795s; samplesPerSecond = 2415.9
MPI Rank 0: 08/04/2016 09:19:34:  Epoch[ 1 of 5]-Minibatch[ 262- 264, 82.50%]: CrossEntropyWithSoftmax = 2.38613842 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.0693s; samplesPerSecond = 2771.6
MPI Rank 0: 08/04/2016 09:19:34:  Epoch[ 1 of 5]-Minibatch[ 265- 267, 83.44%]: CrossEntropyWithSoftmax = 2.08545370 * 192; EvalErrorPrediction = 0.57812500 * 192; time = 0.0799s; samplesPerSecond = 2401.7
MPI Rank 0: 08/04/2016 09:19:34:  Epoch[ 1 of 5]-Minibatch[ 268- 270, 84.38%]: CrossEntropyWithSoftmax = 2.37400496 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0765s; samplesPerSecond = 2511.1
MPI Rank 0: 08/04/2016 09:19:34:  Epoch[ 1 of 5]-Minibatch[ 271- 273, 85.31%]: CrossEntropyWithSoftmax = 2.42194794 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0724s; samplesPerSecond = 2651.6
MPI Rank 0: 08/04/2016 09:19:34:  Epoch[ 1 of 5]-Minibatch[ 274- 276, 86.25%]: CrossEntropyWithSoftmax = 2.68159100 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0783s; samplesPerSecond = 2453.3
MPI Rank 0: 08/04/2016 09:19:34:  Epoch[ 1 of 5]-Minibatch[ 277- 279, 87.19%]: CrossEntropyWithSoftmax = 2.15447777 * 192; EvalErrorPrediction = 0.57291667 * 192; time = 0.0711s; samplesPerSecond = 2700.3
MPI Rank 0: 08/04/2016 09:19:34:  Epoch[ 1 of 5]-Minibatch[ 280- 282, 88.13%]: CrossEntropyWithSoftmax = 2.48106869 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0806s; samplesPerSecond = 2382.3
MPI Rank 0: 08/04/2016 09:19:34:  Epoch[ 1 of 5]-Minibatch[ 283- 285, 89.06%]: CrossEntropyWithSoftmax = 2.41161805 * 192; EvalErrorPrediction = 0.60937500 * 192; time = 0.0775s; samplesPerSecond = 2478.3
MPI Rank 0: 08/04/2016 09:19:34:  Epoch[ 1 of 5]-Minibatch[ 286- 288, 90.00%]: CrossEntropyWithSoftmax = 2.44875573 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0709s; samplesPerSecond = 2707.5
MPI Rank 0: 08/04/2016 09:19:34:  Epoch[ 1 of 5]-Minibatch[ 289- 291, 90.94%]: CrossEntropyWithSoftmax = 2.21308330 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.0779s; samplesPerSecond = 2463.9
MPI Rank 0: 08/04/2016 09:19:34:  Epoch[ 1 of 5]-Minibatch[ 292- 294, 91.88%]: CrossEntropyWithSoftmax = 2.15114589 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.0692s; samplesPerSecond = 2773.1
MPI Rank 0: 08/04/2016 09:19:34:  Epoch[ 1 of 5]-Minibatch[ 295- 297, 92.81%]: CrossEntropyWithSoftmax = 2.09077091 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.0709s; samplesPerSecond = 2708.3
MPI Rank 0: 08/04/2016 09:19:34:  Epoch[ 1 of 5]-Minibatch[ 298- 300, 93.75%]: CrossEntropyWithSoftmax = 2.40274878 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0766s; samplesPerSecond = 2506.2
MPI Rank 0: 08/04/2016 09:19:34:  Epoch[ 1 of 5]-Minibatch[ 301- 303, 94.69%]: CrossEntropyWithSoftmax = 2.28118136 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.0743s; samplesPerSecond = 2584.4
MPI Rank 0: 08/04/2016 09:19:35:  Epoch[ 1 of 5]-Minibatch[ 304- 306, 95.63%]: CrossEntropyWithSoftmax = 2.39608074 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0766s; samplesPerSecond = 2505.1
MPI Rank 0: 08/04/2016 09:19:35:  Epoch[ 1 of 5]-Minibatch[ 307- 309, 96.56%]: CrossEntropyWithSoftmax = 2.22785988 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0809s; samplesPerSecond = 2372.3
MPI Rank 0: 08/04/2016 09:19:35:  Epoch[ 1 of 5]-Minibatch[ 310- 312, 97.50%]: CrossEntropyWithSoftmax = 2.19433076 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.0772s; samplesPerSecond = 2487.0
MPI Rank 0: 08/04/2016 09:19:35:  Epoch[ 1 of 5]-Minibatch[ 313- 315, 98.44%]: CrossEntropyWithSoftmax = 2.16074313 * 192; EvalErrorPrediction = 0.55729167 * 192; time = 0.0692s; samplesPerSecond = 2774.8
MPI Rank 0: 08/04/2016 09:19:35:  Epoch[ 1 of 5]-Minibatch[ 316- 318, 99.38%]: CrossEntropyWithSoftmax = 2.25700487 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.0720s; samplesPerSecond = 2667.9
MPI Rank 0: 08/04/2016 09:19:35: Finished Epoch[ 1 of 5]: [Training] CrossEntropyWithSoftmax = 3.04659963 * 20480; EvalErrorPrediction = 0.73706055 * 20480; totalSamplesSeen = 20480; learningRatePerSample = 0.015625; epochTime=7.9049s
MPI Rank 0: 08/04/2016 09:19:36: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn.1'
MPI Rank 0: 
MPI Rank 0: 08/04/2016 09:19:36: Starting Epoch 2: learning rate per sample = 0.001953  effective momentum = 0.656119  momentum as time constant = 607.5 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 1: frames [20480..40960] (first utterance at frame 20480), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 08/04/2016 09:19:36: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 08/04/2016 09:19:36:  Epoch[ 2 of 5]-Minibatch[   1-   3, 3.75%]: CrossEntropyWithSoftmax = 2.12570535 * 497; EvalErrorPrediction = 0.58350101 * 497; time = 0.2034s; samplesPerSecond = 2443.5
MPI Rank 0: 08/04/2016 09:19:36:  Epoch[ 2 of 5]-Minibatch[   4-   6, 7.50%]: CrossEntropyWithSoftmax = 2.11734466 * 513; EvalErrorPrediction = 0.57504873 * 513; time = 0.1867s; samplesPerSecond = 2747.9
MPI Rank 0: 08/04/2016 09:19:36:  Epoch[ 2 of 5]-Minibatch[   7-   9, 11.25%]: CrossEntropyWithSoftmax = 2.22397933 * 488; EvalErrorPrediction = 0.60450820 * 488; time = 0.1815s; samplesPerSecond = 2688.7
MPI Rank 0: 08/04/2016 09:19:36:  Epoch[ 2 of 5]-Minibatch[  10-  12, 15.00%]: CrossEntropyWithSoftmax = 2.05802937 * 486; EvalErrorPrediction = 0.57613169 * 486; time = 0.1846s; samplesPerSecond = 2632.6
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     0.85 seconds since last report (0.01 seconds on comm.); 4262 samples processed by 2 workers (2142 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 5.02k samplesPerSecond , throughputPerWorker = 2.51k samplesPerSecond
MPI Rank 0: 08/04/2016 09:19:37:  Epoch[ 2 of 5]-Minibatch[  13-  15, 18.75%]: CrossEntropyWithSoftmax = 2.18587669 * 478; EvalErrorPrediction = 0.60669456 * 478; time = 0.2237s; samplesPerSecond = 2136.7
MPI Rank 0: 08/04/2016 09:19:37:  Epoch[ 2 of 5]-Minibatch[  16-  18, 22.50%]: CrossEntropyWithSoftmax = 2.15157522 * 497; EvalErrorPrediction = 0.60563380 * 497; time = 0.2160s; samplesPerSecond = 2301.0
MPI Rank 0: 08/04/2016 09:19:37:  Epoch[ 2 of 5]-Minibatch[  19-  21, 26.25%]: CrossEntropyWithSoftmax = 2.22824887 * 488; EvalErrorPrediction = 0.61065574 * 488; time = 0.2179s; samplesPerSecond = 2239.3
MPI Rank 0: 08/04/2016 09:19:37:  Epoch[ 2 of 5]-Minibatch[  22-  24, 30.00%]: CrossEntropyWithSoftmax = 1.93754017 * 480; EvalErrorPrediction = 0.54375000 * 480; time = 0.1950s; samplesPerSecond = 2461.8
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     0.89 seconds since last report (0.04 seconds on comm.); 4236 samples processed by 2 workers (2113 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 4.77k samplesPerSecond , throughputPerWorker = 2.39k samplesPerSecond
MPI Rank 0: 08/04/2016 09:19:38:  Epoch[ 2 of 5]-Minibatch[  25-  27, 33.75%]: CrossEntropyWithSoftmax = 1.90672040 * 496; EvalErrorPrediction = 0.50604839 * 496; time = 0.1883s; samplesPerSecond = 2633.9
MPI Rank 0: 08/04/2016 09:19:38:  Epoch[ 2 of 5]-Minibatch[  28-  30, 37.50%]: CrossEntropyWithSoftmax = 2.02072635 * 474; EvalErrorPrediction = 0.55063291 * 474; time = 0.2115s; samplesPerSecond = 2241.1
MPI Rank 0: 08/04/2016 09:19:38:  Epoch[ 2 of 5]-Minibatch[  31-  33, 41.25%]: CrossEntropyWithSoftmax = 2.07974243 * 475; EvalErrorPrediction = 0.56210526 * 475; time = 0.2127s; samplesPerSecond = 2233.2
MPI Rank 0: 08/04/2016 09:19:38:  Epoch[ 2 of 5]-Minibatch[  34-  36, 45.00%]: CrossEntropyWithSoftmax = 1.97467735 * 500; EvalErrorPrediction = 0.53200000 * 500; time = 0.2161s; samplesPerSecond = 2314.1
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     0.88 seconds since last report (0.04 seconds on comm.); 4175 samples processed by 2 workers (2109 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 4.76k samplesPerSecond , throughputPerWorker = 2.38k samplesPerSecond
MPI Rank 0: 08/04/2016 09:19:38:  Epoch[ 2 of 5]-Minibatch[  37-  39, 48.75%]: CrossEntropyWithSoftmax = 2.01365647 * 492; EvalErrorPrediction = 0.55894309 * 492; time = 0.1663s; samplesPerSecond = 2958.4
MPI Rank 0: 08/04/2016 09:19:39:  Epoch[ 2 of 5]-Minibatch[  40-  42, 52.50%]: CrossEntropyWithSoftmax = 1.94512588 * 505; EvalErrorPrediction = 0.52871287 * 505; time = 0.2200s; samplesPerSecond = 2295.2
MPI Rank 0: 08/04/2016 09:19:39:  Epoch[ 2 of 5]-Minibatch[  43-  45, 56.25%]: CrossEntropyWithSoftmax = 1.91893499 * 495; EvalErrorPrediction = 0.53737374 * 495; time = 0.2024s; samplesPerSecond = 2445.3
MPI Rank 0: 08/04/2016 09:19:39:  Epoch[ 2 of 5]-Minibatch[  46-  48, 60.00%]: CrossEntropyWithSoftmax = 1.96315207 * 510; EvalErrorPrediction = 0.55882353 * 510; time = 0.0940s; samplesPerSecond = 5426.1
MPI Rank 0: 08/04/2016 09:19:39:  Epoch[ 2 of 5]-Minibatch[  49-  51, 63.75%]: CrossEntropyWithSoftmax = 1.94725099 * 471; EvalErrorPrediction = 0.52866242 * 471; time = 0.0901s; samplesPerSecond = 5228.8
MPI Rank 0: 08/04/2016 09:19:39:  Epoch[ 2 of 5]-Minibatch[  52-  54, 67.50%]: CrossEntropyWithSoftmax = 1.94845304 * 480; EvalErrorPrediction = 0.55000000 * 480; time = 0.0859s; samplesPerSecond = 5585.2
MPI Rank 0: 08/04/2016 09:19:39:  Epoch[ 2 of 5]-Minibatch[  55-  57, 71.25%]: CrossEntropyWithSoftmax = 1.92920042 * 483; EvalErrorPrediction = 0.52380952 * 483; time = 0.0849s; samplesPerSecond = 5690.8
MPI Rank 0: 08/04/2016 09:19:39:  Epoch[ 2 of 5]-Minibatch[  58-  60, 75.00%]: CrossEntropyWithSoftmax = 1.78876152 * 501; EvalErrorPrediction = 0.46706587 * 501; time = 0.0889s; samplesPerSecond = 5636.4
MPI Rank 0: 08/04/2016 09:19:39:  Epoch[ 2 of 5]-Minibatch[  61-  63, 78.75%]: CrossEntropyWithSoftmax = 1.94663509 * 491; EvalErrorPrediction = 0.52342159 * 491; time = 0.0870s; samplesPerSecond = 5642.8
MPI Rank 0: 08/04/2016 09:19:39:  Epoch[ 2 of 5]-Minibatch[  64-  66, 82.50%]: CrossEntropyWithSoftmax = 1.94537409 * 476; EvalErrorPrediction = 0.54621849 * 476; time = 0.0835s; samplesPerSecond = 5699.6
MPI Rank 0: 08/04/2016 09:19:39:  Epoch[ 2 of 5]-Minibatch[  67-  69, 86.25%]: CrossEntropyWithSoftmax = 1.97954031 * 484; EvalErrorPrediction = 0.56404959 * 484; time = 0.0844s; samplesPerSecond = 5733.3
MPI Rank 0: 08/04/2016 09:19:40:  Epoch[ 2 of 5]-Minibatch[  70-  72, 90.00%]: CrossEntropyWithSoftmax = 1.91543074 * 470; EvalErrorPrediction = 0.52978723 * 470; time = 0.0822s; samplesPerSecond = 5720.9
MPI Rank 0: 08/04/2016 09:19:40:  Epoch[ 2 of 5]-Minibatch[  73-  75, 93.75%]: CrossEntropyWithSoftmax = 1.90191185 * 477; EvalErrorPrediction = 0.51991614 * 477; time = 0.0849s; samplesPerSecond = 5619.4
MPI Rank 0: 08/04/2016 09:19:40:  Epoch[ 2 of 5]-Minibatch[  76-  78, 97.50%]: CrossEntropyWithSoftmax = 1.92109600 * 484; EvalErrorPrediction = 0.52066116 * 484; time = 0.0849s; samplesPerSecond = 5699.1
MPI Rank 0: 08/04/2016 09:19:40:  Epoch[ 2 of 5]-Minibatch[  79-  81, 101.25%]: CrossEntropyWithSoftmax = 1.92878376 * 340; EvalErrorPrediction = 0.50000000 * 340; time = 0.0587s; samplesPerSecond = 5797.0
MPI Rank 0: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 4-th sync:     1.45 seconds since last report (0.00 seconds on comm.); 7807 samples processed by 2 workers (6667 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 5.37k samplesPerSecond , throughputPerWorker = 2.68k samplesPerSecond
MPI Rank 0: 08/04/2016 09:19:40: Finished Epoch[ 2 of 5]: [Training] CrossEntropyWithSoftmax = 2.01364869 * 20480; EvalErrorPrediction = 0.55122070 * 20480; totalSamplesSeen = 40960; learningRatePerSample = 0.001953125; epochTime=4.07015s
MPI Rank 0: 08/04/2016 09:19:40: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn.2'
MPI Rank 0: 
MPI Rank 0: 08/04/2016 09:19:40: Starting Epoch 3: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 2: frames [40960..61440] (first utterance at frame 40960), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 08/04/2016 09:19:40: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 08/04/2016 09:19:40:  Epoch[ 3 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.92542205 * 1922; EvalErrorPrediction = 0.54786681 * 1922; time = 0.4013s; samplesPerSecond = 4789.2
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     0.61 seconds since last report (0.04 seconds on comm.); 4878 samples processed by 2 workers (2584 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 8.02k samplesPerSecond , throughputPerWorker = 4.01k samplesPerSecond
MPI Rank 0: 08/04/2016 09:19:41:  Epoch[ 3 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.94325452 * 1928; EvalErrorPrediction = 0.53112033 * 1928; time = 0.6526s; samplesPerSecond = 2954.2
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     0.96 seconds since last report (0.05 seconds on comm.); 4878 samples processed by 2 workers (2565 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 5.09k samplesPerSecond , throughputPerWorker = 2.54k samplesPerSecond
MPI Rank 0: 08/04/2016 09:19:42:  Epoch[ 3 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.90578612 * 1914; EvalErrorPrediction = 0.53761755 * 1914; time = 0.6925s; samplesPerSecond = 2763.9
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     0.90 seconds since last report (0.04 seconds on comm.); 4809 samples processed by 2 workers (2532 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 5.35k samplesPerSecond , throughputPerWorker = 2.68k samplesPerSecond
MPI Rank 0: 08/04/2016 09:19:42:  Epoch[ 3 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.93278995 * 1917; EvalErrorPrediction = 0.54355764 * 1917; time = 0.7124s; samplesPerSecond = 2691.0
MPI Rank 0: 08/04/2016 09:19:43:  Epoch[ 3 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.91386146 * 1938; EvalErrorPrediction = 0.53250774 * 1938; time = 0.4596s; samplesPerSecond = 4216.8
MPI Rank 0: 08/04/2016 09:19:43:  Epoch[ 3 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.93403090 * 1929; EvalErrorPrediction = 0.53654743 * 1929; time = 0.3280s; samplesPerSecond = 5880.2
MPI Rank 0: 08/04/2016 09:19:43:  Epoch[ 3 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.86222104 * 1278; EvalErrorPrediction = 0.51643192 * 1278; time = 0.2116s; samplesPerSecond = 6039.3
MPI Rank 0: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 4-th sync:     1.02 seconds since last report (0.00 seconds on comm.); 5915 samples processed by 2 workers (5145 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 5.81k samplesPerSecond , throughputPerWorker = 2.91k samplesPerSecond
MPI Rank 0: 08/04/2016 09:19:43: Finished Epoch[ 3 of 5]: [Training] CrossEntropyWithSoftmax = 1.91669950 * 20480; EvalErrorPrediction = 0.53505859 * 20480; totalSamplesSeen = 61440; learningRatePerSample = 9.7656251e-005; epochTime=3.48442s
MPI Rank 0: 08/04/2016 09:19:44: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn.3'
MPI Rank 0: 
MPI Rank 0: 08/04/2016 09:19:44: Starting Epoch 4: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 3: frames [61440..81920] (first utterance at frame 61440), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 08/04/2016 09:19:44: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 08/04/2016 09:19:44:  Epoch[ 4 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.90452258 * 1879; EvalErrorPrediction = 0.52102182 * 1879; time = 0.3577s; samplesPerSecond = 5253.1
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     0.55 seconds since last report (0.04 seconds on comm.); 4812 samples processed by 2 workers (2506 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 8.79k samplesPerSecond , throughputPerWorker = 4.39k samplesPerSecond
MPI Rank 0: 08/04/2016 09:19:45:  Epoch[ 4 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.89399913 * 1959; EvalErrorPrediction = 0.51454824 * 1959; time = 0.7209s; samplesPerSecond = 2717.4
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     0.97 seconds since last report (0.05 seconds on comm.); 4977 samples processed by 2 workers (2595 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 5.15k samplesPerSecond , throughputPerWorker = 2.57k samplesPerSecond
MPI Rank 0: 08/04/2016 09:19:45:  Epoch[ 4 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.82332165 * 1902; EvalErrorPrediction = 0.50157729 * 1902; time = 0.6244s; samplesPerSecond = 3046.0
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     0.90 seconds since last report (0.04 seconds on comm.); 4887 samples processed by 2 workers (2499 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 5.42k samplesPerSecond , throughputPerWorker = 2.71k samplesPerSecond
MPI Rank 0: 08/04/2016 09:19:46:  Epoch[ 4 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.95748356 * 1860; EvalErrorPrediction = 0.53655914 * 1860; time = 0.7064s; samplesPerSecond = 2633.2
MPI Rank 0: 08/04/2016 09:19:46:  Epoch[ 4 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.85496228 * 1881; EvalErrorPrediction = 0.51355662 * 1881; time = 0.4546s; samplesPerSecond = 4137.7
MPI Rank 0: 08/04/2016 09:19:47:  Epoch[ 4 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.93081866 * 1875; EvalErrorPrediction = 0.52960000 * 1875; time = 0.3277s; samplesPerSecond = 5721.2
MPI Rank 0: 08/04/2016 09:19:47:  Epoch[ 4 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.90359155 * 1232; EvalErrorPrediction = 0.52191558 * 1232; time = 0.2023s; samplesPerSecond = 6090.6
MPI Rank 0: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 4-th sync:     1.00 seconds since last report (0.00 seconds on comm.); 5804 samples processed by 2 workers (4988 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 5.79k samplesPerSecond , throughputPerWorker = 2.89k samplesPerSecond
MPI Rank 0: 08/04/2016 09:19:47: Finished Epoch[ 4 of 5]: [Training] CrossEntropyWithSoftmax = 1.88068115 * 20480; EvalErrorPrediction = 0.51713867 * 20480; totalSamplesSeen = 81920; learningRatePerSample = 9.7656251e-005; epochTime=3.42082s
MPI Rank 0: 08/04/2016 09:19:47: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn.4'
MPI Rank 0: 
MPI Rank 0: 08/04/2016 09:19:47: Starting Epoch 5: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 4: frames [81920..102400] (first utterance at frame 81920), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 08/04/2016 09:19:47: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 08/04/2016 09:19:48:  Epoch[ 5 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.83509280 * 1856; EvalErrorPrediction = 0.50161638 * 1856; time = 0.3542s; samplesPerSecond = 5240.3
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     0.57 seconds since last report (0.05 seconds on comm.); 4910 samples processed by 2 workers (2502 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 8.64k samplesPerSecond , throughputPerWorker = 4.32k samplesPerSecond
MPI Rank 0: 08/04/2016 09:19:48:  Epoch[ 5 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.79209206 * 1880; EvalErrorPrediction = 0.50585106 * 1880; time = 0.6400s; samplesPerSecond = 2937.4
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     0.87 seconds since last report (0.05 seconds on comm.); 4540 samples processed by 2 workers (2481 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 5.19k samplesPerSecond , throughputPerWorker = 2.60k samplesPerSecond
MPI Rank 0: 08/04/2016 09:19:49:  Epoch[ 5 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.88316937 * 1856; EvalErrorPrediction = 0.53609914 * 1856; time = 0.6224s; samplesPerSecond = 2981.9
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     0.89 seconds since last report (0.05 seconds on comm.); 4881 samples processed by 2 workers (2454 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 5.46k samplesPerSecond , throughputPerWorker = 2.73k samplesPerSecond
MPI Rank 0: 08/04/2016 09:19:49:  Epoch[ 5 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.83830415 * 1845; EvalErrorPrediction = 0.51002710 * 1845; time = 0.7131s; samplesPerSecond = 2587.2
MPI Rank 0: 08/04/2016 09:19:50:  Epoch[ 5 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.81066424 * 1841; EvalErrorPrediction = 0.48995111 * 1841; time = 0.5174s; samplesPerSecond = 3558.5
MPI Rank 0: 08/04/2016 09:19:50:  Epoch[ 5 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.81170022 * 1897; EvalErrorPrediction = 0.50079072 * 1897; time = 0.3442s; samplesPerSecond = 5511.2
MPI Rank 0: 08/04/2016 09:19:51:  Epoch[ 5 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.82238230 * 1212; EvalErrorPrediction = 0.49092409 * 1212; time = 0.2003s; samplesPerSecond = 6052.4
MPI Rank 0: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 4-th sync:     1.08 seconds since last report (0.00 seconds on comm.); 6149 samples processed by 2 workers (4950 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 5.69k samplesPerSecond , throughputPerWorker = 2.85k samplesPerSecond
MPI Rank 0: 08/04/2016 09:19:51: Finished Epoch[ 5 of 5]: [Training] CrossEntropyWithSoftmax = 1.83994868 * 20480; EvalErrorPrediction = 0.51313477 * 20480; totalSamplesSeen = 102400; learningRatePerSample = 9.7656251e-005; epochTime=3.41806s
MPI Rank 0: 08/04/2016 09:19:51: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn'
MPI Rank 0: 08/04/2016 09:19:51: CNTKCommandTrainEnd: speechTrain
MPI Rank 0: 
MPI Rank 0: 08/04/2016 09:19:51: Action "train" complete.
MPI Rank 0: 
MPI Rank 0: 08/04/2016 09:19:51: __COMPLETED__
MPI Rank 0: ~MPIWrapper
MPI Rank 1: 08/04/2016 09:19:23: Redirecting stderr to file C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu/stderr_speechTrain.logrank1
MPI Rank 1: 08/04/2016 09:19:23: -------------------------------------------------------------------
MPI Rank 1: 08/04/2016 09:19:23: Build info: 
MPI Rank 1: 
MPI Rank 1: 08/04/2016 09:19:23: 		Built time: Aug  4 2016 06:18:32
MPI Rank 1: 08/04/2016 09:19:23: 		Last modified date: Thu Aug  4 03:38:59 2016
MPI Rank 1: 08/04/2016 09:19:23: 		Build type: Release
MPI Rank 1: 08/04/2016 09:19:23: 		Build target: GPU
MPI Rank 1: 08/04/2016 09:19:23: 		With 1bit-SGD: yes
MPI Rank 1: 08/04/2016 09:19:23: 		Math lib: mkl
MPI Rank 1: 08/04/2016 09:19:23: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
MPI Rank 1: 08/04/2016 09:19:23: 		CUB_PATH: c:\src\cub-1.4.1
MPI Rank 1: 08/04/2016 09:19:23: 		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
MPI Rank 1: 08/04/2016 09:19:23: 		Build Branch: HEAD
MPI Rank 1: 08/04/2016 09:19:23: 		Build SHA1: 0f61695dfc335f2406284d335678f57c215e6e9c
MPI Rank 1: 08/04/2016 09:19:23: 		Built by svcphil on Philly-Pool1
MPI Rank 1: 08/04/2016 09:19:23: 		Build Path: c:\jenkins\workspace\CNTK-Build-Windows@2\Source\CNTK\
MPI Rank 1: 08/04/2016 09:19:23: -------------------------------------------------------------------
MPI Rank 1: 08/04/2016 09:19:24: -------------------------------------------------------------------
MPI Rank 1: 08/04/2016 09:19:24: GPU info:
MPI Rank 1: 
MPI Rank 1: 08/04/2016 09:19:24: 		Device[0]: cores = 2496; computeCapability = 5.2; type = "Quadro M4000"; memory = 8090 MB
MPI Rank 1: 08/04/2016 09:19:24: -------------------------------------------------------------------
MPI Rank 1: 
MPI Rank 1: 08/04/2016 09:19:24: Running on cntk-muc00 at 2016/08/04 09:19:24
MPI Rank 1: 08/04/2016 09:19:24: Command line: 
MPI Rank 1: C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\release\cntk.exe  configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN/ParallelBM/cntk.cntk  currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data  RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu  DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data  ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN  OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu  DeviceId=-1  timestamping=true  numCPUThreads=2  precision=double  speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]  stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu/stderr
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 08/04/2016 09:19:24: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: 08/04/2016 09:19:24: precision = "float"
MPI Rank 1: command = speechTrain
MPI Rank 1: deviceId = $DeviceId$
MPI Rank 1: parallelTrain = true
MPI Rank 1: speechTrain = [
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "$RunDir$/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = $DeviceId$
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 blockSizePerWorker=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "$DataDir$/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "$DataDir$/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ]
MPI Rank 1: currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu
MPI Rank 1: DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 1: OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu
MPI Rank 1: DeviceId=-1
MPI Rank 1: timestamping=true
MPI Rank 1: numCPUThreads=2
MPI Rank 1: precision=double
MPI Rank 1: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu/stderr
MPI Rank 1: 
MPI Rank 1: 08/04/2016 09:19:24: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 
MPI Rank 1: 08/04/2016 09:19:24: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: 08/04/2016 09:19:24: precision = "float"
MPI Rank 1: command = speechTrain
MPI Rank 1: deviceId = -1
MPI Rank 1: parallelTrain = true
MPI Rank 1: speechTrain = [
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = -1
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 blockSizePerWorker=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ]
MPI Rank 1: currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu
MPI Rank 1: DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 1: OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu
MPI Rank 1: DeviceId=-1
MPI Rank 1: timestamping=true
MPI Rank 1: numCPUThreads=2
MPI Rank 1: precision=double
MPI Rank 1: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu/stderr
MPI Rank 1: 
MPI Rank 1: 08/04/2016 09:19:24: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 
MPI Rank 1: 08/04/2016 09:19:24: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: configparameters: cntk.cntk:command=speechTrain
MPI Rank 1: configparameters: cntk.cntk:ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 1: configparameters: cntk.cntk:currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: configparameters: cntk.cntk:DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: configparameters: cntk.cntk:deviceId=-1
MPI Rank 1: configparameters: cntk.cntk:numCPUThreads=2
MPI Rank 1: configparameters: cntk.cntk:OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu
MPI Rank 1: configparameters: cntk.cntk:parallelTrain=true
MPI Rank 1: configparameters: cntk.cntk:precision=double
MPI Rank 1: configparameters: cntk.cntk:RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu
MPI Rank 1: configparameters: cntk.cntk:speechTrain=[
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = -1
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 blockSizePerWorker=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ] [SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: 
MPI Rank 1: configparameters: cntk.cntk:stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu/stderr
MPI Rank 1: configparameters: cntk.cntk:timestamping=true
MPI Rank 1: 08/04/2016 09:19:24: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 08/04/2016 09:19:24: Commands: speechTrain
MPI Rank 1: 08/04/2016 09:19:24: Precision = "double"
MPI Rank 1: 08/04/2016 09:19:24: Using 2 CPU threads.
MPI Rank 1: 08/04/2016 09:19:24: CNTKModelPath: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160804091828.255366\Speech\DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn
MPI Rank 1: 08/04/2016 09:19:24: CNTKCommandTrainInfo: speechTrain : 5
MPI Rank 1: 08/04/2016 09:19:24: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 5
MPI Rank 1: 
MPI Rank 1: 08/04/2016 09:19:24: ##############################################################################
MPI Rank 1: 08/04/2016 09:19:24: #                                                                            #
MPI Rank 1: 08/04/2016 09:19:24: # Action "train"                                                             #
MPI Rank 1: 08/04/2016 09:19:24: #                                                                            #
MPI Rank 1: 08/04/2016 09:19:24: ##############################################################################
MPI Rank 1: 
MPI Rank 1: 08/04/2016 09:19:24: CNTKCommandTrainBegin: speechTrain
MPI Rank 1: SimpleNetworkBuilder Using CPU
MPI Rank 1: reading script file glob_0000.scp ... 948 entries
MPI Rank 1: total 132 state names in state list C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list
MPI Rank 1: htkmlfreader: reading MLF file C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf ... total 948 entries
MPI Rank 1: ...............................................................................................feature set 0: 252734 frames in 948 out of 948 utterances
MPI Rank 1: label set 0: 129 classes
MPI Rank 1: minibatchutterancesource: 948 utterances grouped into 3 chunks, av. chunk size: 316.0 utterances, 84244.7 frames
MPI Rank 1: 
MPI Rank 1: 08/04/2016 09:19:24: Creating virgin network.
MPI Rank 1: 
MPI Rank 1: Post-processing network...
MPI Rank 1: 
MPI Rank 1: 7 roots:
MPI Rank 1: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
MPI Rank 1: 	EvalErrorPrediction = ErrorPrediction()
MPI Rank 1: 	InvStdOfFeatures = InvStdDev()
MPI Rank 1: 	MeanOfFeatures = Mean()
MPI Rank 1: 	PosteriorProb = Softmax()
MPI Rank 1: 	Prior = Mean()
MPI Rank 1: 	ScaledLogLikelihood = Minus()
MPI Rank 1: 
MPI Rank 1: Validating network. 25 nodes to process in pass 1.
MPI Rank 1: 
MPI Rank 1: Validating --> labels = InputValue() :  -> [132 x *]
MPI Rank 1: Validating --> W2 = LearnableParameter() :  -> [132 x 512]
MPI Rank 1: Validating --> W1 = LearnableParameter() :  -> [512 x 512]
MPI Rank 1: Validating --> W0 = LearnableParameter() :  -> [512 x 363]
MPI Rank 1: Validating --> features = InputValue() :  -> [363 x *]
MPI Rank 1: Validating --> MeanOfFeatures = Mean (features) : [363 x *] -> [363]
MPI Rank 1: Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *] -> [363]
MPI Rank 1: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *], [363], [363] -> [363 x *]
MPI Rank 1: Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [512 x 363], [363 x *] -> [512 x *]
MPI Rank 1: Validating --> B0 = LearnableParameter() :  -> [512 x 1]
MPI Rank 1: Validating --> W0*features+B0 = Plus (W0*features, B0) : [512 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 1: Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> W1*H1 = Times (W1, H1) : [512 x 512], [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> B1 = LearnableParameter() :  -> [512 x 1]
MPI Rank 1: Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [512 x 1 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 1: Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> W2*H1 = Times (W2, H2) : [132 x 512], [512 x 1 x *] -> [132 x 1 x *]
MPI Rank 1: Validating --> B2 = LearnableParameter() :  -> [132 x 1]
MPI Rank 1: Validating --> HLast = Plus (W2*H1, B2) : [132 x 1 x *], [132 x 1] -> [132 x 1 x *]
MPI Rank 1: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 1: Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 1: Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *] -> [132 x 1 x *]
MPI Rank 1: Validating --> Prior = Mean (labels) : [132 x *] -> [132]
MPI Rank 1: Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
MPI Rank 1: Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *], [132] -> [132 x 1 x *]
MPI Rank 1: 
MPI Rank 1: Validating network. 17 nodes to process in pass 2.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: Validating network, final pass.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 12 out of 25 nodes do not share the minibatch layout with the input data.
MPI Rank 1: 
MPI Rank 1: Post-processing network complete.
MPI Rank 1: 
MPI Rank 1: 08/04/2016 09:19:24: Created model with 25 nodes on CPU.
MPI Rank 1: 
MPI Rank 1: 08/04/2016 09:19:24: Training criterion node(s):
MPI Rank 1: 08/04/2016 09:19:24: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax
MPI Rank 1: 
MPI Rank 1: 08/04/2016 09:19:24: Evaluation criterion node(s):
MPI Rank 1: 
MPI Rank 1: 08/04/2016 09:19:24: 	EvalErrorPrediction = ErrorPrediction
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: Allocating matrices for forward and/or backward propagation.
MPI Rank 1: 
MPI Rank 1: Memory Sharing Structure:
MPI Rank 1: 
MPI Rank 1: 0000000000000000: {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[363]] [LogOfPrior Gradient[132]] [MVNormalizedFeatures Gradient[363 x *]] [MeanOfFeatures Gradient[363]] [PosteriorProb Gradient[132 x 1 x *]] [PosteriorProb Value[132 x 1 x *]] [Prior Gradient[132]] [ScaledLogLikelihood Gradient[132 x 1 x *]] [features Gradient[363 x *]] [labels Gradient[132 x *]] }
MPI Rank 1: 000000BCDCB8ECA0: {[W1 Value[512 x 512]] }
MPI Rank 1: 000000BCDCB8EF20: {[MeanOfFeatures Value[363]] }
MPI Rank 1: 000000BCDCB8F060: {[W0 Value[512 x 363]] }
MPI Rank 1: 000000BCDCB8F1A0: {[features Value[363 x *]] }
MPI Rank 1: 000000BCDCB8F380: {[InvStdOfFeatures Value[363]] }
MPI Rank 1: 000000BCDCB8F4C0: {[B0 Value[512 x 1]] }
MPI Rank 1: 000000BCF75D4CF0: {[labels Value[132 x *]] }
MPI Rank 1: 000000BCF75D4E30: {[W2 Value[132 x 512]] }
MPI Rank 1: 000000BCF75D51F0: {[ScaledLogLikelihood Value[132 x 1 x *]] }
MPI Rank 1: 000000BCF75D5290: {[H2 Value[512 x 1 x *]] [W1*H1 Gradient[512 x 1 x *]] }
MPI Rank 1: 000000BCF75D5330: {[H1 Value[512 x 1 x *]] [W0*features Gradient[512 x *]] }
MPI Rank 1: 000000BCF75D5470: {[W0*features Value[512 x *]] }
MPI Rank 1: 000000BCF75D5650: {[EvalErrorPrediction Value[1]] }
MPI Rank 1: 000000BCF75D5830: {[CrossEntropyWithSoftmax Gradient[1]] }
MPI Rank 1: 000000BCF75D58D0: {[Prior Value[132]] }
MPI Rank 1: 000000BCF75D5AB0: {[HLast Value[132 x 1 x *]] [W2 Gradient[132 x 512]] }
MPI Rank 1: 000000BCF75D5C90: {[W1 Gradient[512 x 512]] [W1*H1+B1 Value[512 x 1 x *]] }
MPI Rank 1: 000000BCF75D5DD0: {[B1 Gradient[512 x 1]] [H2 Gradient[512 x 1 x *]] [HLast Gradient[132 x 1 x *]] }
MPI Rank 1: 000000BCF75D5E70: {[W2*H1 Gradient[132 x 1 x *]] }
MPI Rank 1: 000000BCF75D5FB0: {[MVNormalizedFeatures Value[363 x *]] }
MPI Rank 1: 000000BCF75D6050: {[B0 Gradient[512 x 1]] [H1 Gradient[512 x 1 x *]] [W1*H1+B1 Gradient[512 x 1 x *]] [W2*H1 Value[132 x 1 x *]] }
MPI Rank 1: 000000BCF75D60F0: {[B2 Gradient[132 x 1]] }
MPI Rank 1: 000000BCF75D6230: {[B1 Value[512 x 1]] }
MPI Rank 1: 000000BCF75D6410: {[B2 Value[132 x 1]] }
MPI Rank 1: 000000BCF75D6550: {[LogOfPrior Value[132]] }
MPI Rank 1: 000000BCF75D65F0: {[W0*features+B0 Gradient[512 x 1 x *]] [W1*H1 Value[512 x 1 x *]] }
MPI Rank 1: 000000BCF75D6730: {[CrossEntropyWithSoftmax Value[1]] }
MPI Rank 1: 000000BCF75D6870: {[W0 Gradient[512 x 363]] [W0*features+B0 Value[512 x 1 x *]] }
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 08/04/2016 09:19:24: Precomputing --> 3 PreCompute nodes found.
MPI Rank 1: 
MPI Rank 1: 08/04/2016 09:19:24: 	MeanOfFeatures = Mean()
MPI Rank 1: 08/04/2016 09:19:24: 	InvStdOfFeatures = InvStdDev()
MPI Rank 1: 08/04/2016 09:19:24: 	Prior = Mean()
MPI Rank 1: minibatchiterator: epoch 0: frames [0..252734] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 1: requiredata: determined feature kind as 33-dimensional 'USER' with frame shift 10.0 ms
MPI Rank 1: 
MPI Rank 1: 08/04/2016 09:19:27: Precomputing --> Completed.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 08/04/2016 09:19:27: Starting Epoch 1: learning rate per sample = 0.015625  effective momentum = 0.900000  momentum as time constant = 607.4 samples
MPI Rank 1: minibatchiterator: epoch 0: frames [0..20480] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 08/04/2016 09:19:27: Starting minibatch loop.
MPI Rank 1: 08/04/2016 09:19:27:  Epoch[ 1 of 5]-Minibatch[   1-   3, 0.94%]: CrossEntropyWithSoftmax = 4.74042719 * 192; EvalErrorPrediction = 0.95833333 * 192; time = 0.0523s; samplesPerSecond = 3669.9
MPI Rank 1: 08/04/2016 09:19:27:  Epoch[ 1 of 5]-Minibatch[   4-   6, 1.88%]: CrossEntropyWithSoftmax = 4.53912258 * 192; EvalErrorPrediction = 0.94270833 * 192; time = 0.0528s; samplesPerSecond = 3635.2
MPI Rank 1: 08/04/2016 09:19:27:  Epoch[ 1 of 5]-Minibatch[   7-   9, 2.81%]: CrossEntropyWithSoftmax = 4.54672524 * 192; EvalErrorPrediction = 0.94791667 * 192; time = 0.0567s; samplesPerSecond = 3384.2
MPI Rank 1: 08/04/2016 09:19:27:  Epoch[ 1 of 5]-Minibatch[  10-  12, 3.75%]: CrossEntropyWithSoftmax = 4.03095911 * 192; EvalErrorPrediction = 0.91145833 * 192; time = 0.0572s; samplesPerSecond = 3359.3
MPI Rank 1: 08/04/2016 09:19:27:  Epoch[ 1 of 5]-Minibatch[  13-  15, 4.69%]: CrossEntropyWithSoftmax = 4.38138374 * 192; EvalErrorPrediction = 0.89583333 * 192; time = 0.0585s; samplesPerSecond = 3283.8
MPI Rank 1: 08/04/2016 09:19:27:  Epoch[ 1 of 5]-Minibatch[  16-  18, 5.63%]: CrossEntropyWithSoftmax = 4.49453128 * 192; EvalErrorPrediction = 0.92187500 * 192; time = 0.0590s; samplesPerSecond = 3255.3
MPI Rank 1: 08/04/2016 09:19:27:  Epoch[ 1 of 5]-Minibatch[  19-  21, 6.56%]: CrossEntropyWithSoftmax = 4.14436970 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.0621s; samplesPerSecond = 3093.7
MPI Rank 1: 08/04/2016 09:19:28:  Epoch[ 1 of 5]-Minibatch[  22-  24, 7.50%]: CrossEntropyWithSoftmax = 4.01187156 * 192; EvalErrorPrediction = 0.92708333 * 192; time = 0.0860s; samplesPerSecond = 2232.1
MPI Rank 1: 08/04/2016 09:19:28:  Epoch[ 1 of 5]-Minibatch[  25-  27, 8.44%]: CrossEntropyWithSoftmax = 4.05946673 * 192; EvalErrorPrediction = 0.88020833 * 192; time = 0.0993s; samplesPerSecond = 1933.6
MPI Rank 1: 08/04/2016 09:19:28:  Epoch[ 1 of 5]-Minibatch[  28-  30, 9.38%]: CrossEntropyWithSoftmax = 3.88908076 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 0.0943s; samplesPerSecond = 2035.8
MPI Rank 1: 08/04/2016 09:19:28:  Epoch[ 1 of 5]-Minibatch[  31-  33, 10.31%]: CrossEntropyWithSoftmax = 4.01537572 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.0857s; samplesPerSecond = 2239.6
MPI Rank 1: 08/04/2016 09:19:28:  Epoch[ 1 of 5]-Minibatch[  34-  36, 11.25%]: CrossEntropyWithSoftmax = 3.90593862 * 192; EvalErrorPrediction = 0.86979167 * 192; time = 0.0923s; samplesPerSecond = 2081.0
MPI Rank 1: 08/04/2016 09:19:28:  Epoch[ 1 of 5]-Minibatch[  37-  39, 12.19%]: CrossEntropyWithSoftmax = 3.84827452 * 192; EvalErrorPrediction = 0.85937500 * 192; time = 0.0841s; samplesPerSecond = 2281.9
MPI Rank 1: 08/04/2016 09:19:28:  Epoch[ 1 of 5]-Minibatch[  40-  42, 13.13%]: CrossEntropyWithSoftmax = 3.80377693 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.0915s; samplesPerSecond = 2098.8
MPI Rank 1: 08/04/2016 09:19:28:  Epoch[ 1 of 5]-Minibatch[  43-  45, 14.06%]: CrossEntropyWithSoftmax = 3.71660392 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.0932s; samplesPerSecond = 2059.5
MPI Rank 1: 08/04/2016 09:19:28:  Epoch[ 1 of 5]-Minibatch[  46-  48, 15.00%]: CrossEntropyWithSoftmax = 3.72442155 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.0943s; samplesPerSecond = 2035.3
MPI Rank 1: 08/04/2016 09:19:28:  Epoch[ 1 of 5]-Minibatch[  49-  51, 15.94%]: CrossEntropyWithSoftmax = 3.78746175 * 192; EvalErrorPrediction = 0.85937500 * 192; time = 0.0863s; samplesPerSecond = 2224.7
MPI Rank 1: 08/04/2016 09:19:28:  Epoch[ 1 of 5]-Minibatch[  52-  54, 16.88%]: CrossEntropyWithSoftmax = 3.79681669 * 192; EvalErrorPrediction = 0.88020833 * 192; time = 0.0940s; samplesPerSecond = 2042.4
MPI Rank 1: 08/04/2016 09:19:29:  Epoch[ 1 of 5]-Minibatch[  55-  57, 17.81%]: CrossEntropyWithSoftmax = 3.90406721 * 192; EvalErrorPrediction = 0.88541667 * 192; time = 0.0940s; samplesPerSecond = 2042.4
MPI Rank 1: 08/04/2016 09:19:29:  Epoch[ 1 of 5]-Minibatch[  58-  60, 18.75%]: CrossEntropyWithSoftmax = 3.62873369 * 192; EvalErrorPrediction = 0.86979167 * 192; time = 0.0963s; samplesPerSecond = 1993.1
MPI Rank 1: 08/04/2016 09:19:29:  Epoch[ 1 of 5]-Minibatch[  61-  63, 19.69%]: CrossEntropyWithSoftmax = 3.61056500 * 192; EvalErrorPrediction = 0.82291667 * 192; time = 0.0916s; samplesPerSecond = 2097.1
MPI Rank 1: 08/04/2016 09:19:29:  Epoch[ 1 of 5]-Minibatch[  64-  66, 20.63%]: CrossEntropyWithSoftmax = 3.45450749 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.0871s; samplesPerSecond = 2203.8
MPI Rank 1: 08/04/2016 09:19:29:  Epoch[ 1 of 5]-Minibatch[  67-  69, 21.56%]: CrossEntropyWithSoftmax = 3.72121317 * 192; EvalErrorPrediction = 0.87500000 * 192; time = 0.0928s; samplesPerSecond = 2068.3
MPI Rank 1: 08/04/2016 09:19:29:  Epoch[ 1 of 5]-Minibatch[  70-  72, 22.50%]: CrossEntropyWithSoftmax = 3.45620801 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.0912s; samplesPerSecond = 2106.0
MPI Rank 1: 08/04/2016 09:19:29:  Epoch[ 1 of 5]-Minibatch[  73-  75, 23.44%]: CrossEntropyWithSoftmax = 3.39268385 * 192; EvalErrorPrediction = 0.81250000 * 192; time = 0.0857s; samplesPerSecond = 2240.6
MPI Rank 1: 08/04/2016 09:19:29:  Epoch[ 1 of 5]-Minibatch[  76-  78, 24.38%]: CrossEntropyWithSoftmax = 3.45699679 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.0946s; samplesPerSecond = 2029.0
MPI Rank 1: 08/04/2016 09:19:29:  Epoch[ 1 of 5]-Minibatch[  79-  81, 25.31%]: CrossEntropyWithSoftmax = 3.39117328 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.0911s; samplesPerSecond = 2108.0
MPI Rank 1: 08/04/2016 09:19:29:  Epoch[ 1 of 5]-Minibatch[  82-  84, 26.25%]: CrossEntropyWithSoftmax = 3.57793178 * 192; EvalErrorPrediction = 0.84375000 * 192; time = 0.0864s; samplesPerSecond = 2223.2
MPI Rank 1: 08/04/2016 09:19:29:  Epoch[ 1 of 5]-Minibatch[  85-  87, 27.19%]: CrossEntropyWithSoftmax = 3.58213558 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.0957s; samplesPerSecond = 2007.0
MPI Rank 1: 08/04/2016 09:19:30:  Epoch[ 1 of 5]-Minibatch[  88-  90, 28.13%]: CrossEntropyWithSoftmax = 3.28315659 * 192; EvalErrorPrediction = 0.77083333 * 192; time = 0.0915s; samplesPerSecond = 2099.2
MPI Rank 1: 08/04/2016 09:19:30:  Epoch[ 1 of 5]-Minibatch[  91-  93, 29.06%]: CrossEntropyWithSoftmax = 3.54659310 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 0.1056s; samplesPerSecond = 1817.7
MPI Rank 1: 08/04/2016 09:19:30:  Epoch[ 1 of 5]-Minibatch[  94-  96, 30.00%]: CrossEntropyWithSoftmax = 3.35283923 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.0855s; samplesPerSecond = 2244.7
MPI Rank 1: 08/04/2016 09:19:30:  Epoch[ 1 of 5]-Minibatch[  97-  99, 30.94%]: CrossEntropyWithSoftmax = 3.33313289 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 0.0917s; samplesPerSecond = 2093.8
MPI Rank 1: 08/04/2016 09:19:30:  Epoch[ 1 of 5]-Minibatch[ 100- 102, 31.87%]: CrossEntropyWithSoftmax = 3.43465777 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.0936s; samplesPerSecond = 2051.7
MPI Rank 1: 08/04/2016 09:19:30:  Epoch[ 1 of 5]-Minibatch[ 103- 105, 32.81%]: CrossEntropyWithSoftmax = 3.53064241 * 192; EvalErrorPrediction = 0.83333333 * 192; time = 0.0858s; samplesPerSecond = 2236.9
MPI Rank 1: 08/04/2016 09:19:30:  Epoch[ 1 of 5]-Minibatch[ 106- 108, 33.75%]: CrossEntropyWithSoftmax = 3.44674207 * 192; EvalErrorPrediction = 0.84375000 * 192; time = 0.0937s; samplesPerSecond = 2049.0
MPI Rank 1: 08/04/2016 09:19:30:  Epoch[ 1 of 5]-Minibatch[ 109- 111, 34.69%]: CrossEntropyWithSoftmax = 3.22940992 * 192; EvalErrorPrediction = 0.79166667 * 192; time = 0.0929s; samplesPerSecond = 2066.3
MPI Rank 1: 08/04/2016 09:19:30:  Epoch[ 1 of 5]-Minibatch[ 112- 114, 35.63%]: CrossEntropyWithSoftmax = 3.14237732 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.0939s; samplesPerSecond = 2045.5
MPI Rank 1: 08/04/2016 09:19:30:  Epoch[ 1 of 5]-Minibatch[ 115- 117, 36.56%]: CrossEntropyWithSoftmax = 2.93598611 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0850s; samplesPerSecond = 2259.6
MPI Rank 1: 08/04/2016 09:19:30:  Epoch[ 1 of 5]-Minibatch[ 118- 120, 37.50%]: CrossEntropyWithSoftmax = 3.21140851 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.0939s; samplesPerSecond = 2045.1
MPI Rank 1: 08/04/2016 09:19:31:  Epoch[ 1 of 5]-Minibatch[ 121- 123, 38.44%]: CrossEntropyWithSoftmax = 3.23264806 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0931s; samplesPerSecond = 2062.7
MPI Rank 1: 08/04/2016 09:19:31:  Epoch[ 1 of 5]-Minibatch[ 124- 126, 39.38%]: CrossEntropyWithSoftmax = 3.13765393 * 192; EvalErrorPrediction = 0.74479167 * 192; time = 0.0949s; samplesPerSecond = 2023.6
MPI Rank 1: 08/04/2016 09:19:31:  Epoch[ 1 of 5]-Minibatch[ 127- 129, 40.31%]: CrossEntropyWithSoftmax = 3.21728730 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 0.1214s; samplesPerSecond = 1581.2
MPI Rank 1: 08/04/2016 09:19:31:  Epoch[ 1 of 5]-Minibatch[ 130- 132, 41.25%]: CrossEntropyWithSoftmax = 3.03692199 * 192; EvalErrorPrediction = 0.70833333 * 192; time = 0.0910s; samplesPerSecond = 2109.5
MPI Rank 1: 08/04/2016 09:19:31:  Epoch[ 1 of 5]-Minibatch[ 133- 135, 42.19%]: CrossEntropyWithSoftmax = 3.33921871 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.0932s; samplesPerSecond = 2060.0
MPI Rank 1: 08/04/2016 09:19:31:  Epoch[ 1 of 5]-Minibatch[ 136- 138, 43.13%]: CrossEntropyWithSoftmax = 3.06263327 * 192; EvalErrorPrediction = 0.75000000 * 192; time = 0.0869s; samplesPerSecond = 2208.5
MPI Rank 1: 08/04/2016 09:19:31:  Epoch[ 1 of 5]-Minibatch[ 139- 141, 44.06%]: CrossEntropyWithSoftmax = 2.87309932 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 0.0908s; samplesPerSecond = 2113.5
MPI Rank 1: 08/04/2016 09:19:31:  Epoch[ 1 of 5]-Minibatch[ 142- 144, 45.00%]: CrossEntropyWithSoftmax = 3.10510584 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 0.0861s; samplesPerSecond = 2229.3
MPI Rank 1: 08/04/2016 09:19:31:  Epoch[ 1 of 5]-Minibatch[ 145- 147, 45.94%]: CrossEntropyWithSoftmax = 3.24540871 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.0904s; samplesPerSecond = 2124.7
MPI Rank 1: 08/04/2016 09:19:31:  Epoch[ 1 of 5]-Minibatch[ 148- 150, 46.88%]: CrossEntropyWithSoftmax = 2.84330161 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0946s; samplesPerSecond = 2029.7
MPI Rank 1: 08/04/2016 09:19:31:  Epoch[ 1 of 5]-Minibatch[ 151- 153, 47.81%]: CrossEntropyWithSoftmax = 3.03978642 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.0880s; samplesPerSecond = 2181.5
MPI Rank 1: 08/04/2016 09:19:32:  Epoch[ 1 of 5]-Minibatch[ 154- 156, 48.75%]: CrossEntropyWithSoftmax = 3.03659073 * 192; EvalErrorPrediction = 0.74479167 * 192; time = 0.1018s; samplesPerSecond = 1886.6
MPI Rank 1: 08/04/2016 09:19:32:  Epoch[ 1 of 5]-Minibatch[ 157- 159, 49.69%]: CrossEntropyWithSoftmax = 3.05541411 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0934s; samplesPerSecond = 2056.0
MPI Rank 1: 08/04/2016 09:19:32:  Epoch[ 1 of 5]-Minibatch[ 160- 162, 50.63%]: CrossEntropyWithSoftmax = 3.13826192 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 0.0856s; samplesPerSecond = 2242.2
MPI Rank 1: 08/04/2016 09:19:32:  Epoch[ 1 of 5]-Minibatch[ 163- 165, 51.56%]: CrossEntropyWithSoftmax = 3.07379223 * 192; EvalErrorPrediction = 0.71354167 * 192; time = 0.0921s; samplesPerSecond = 2084.4
MPI Rank 1: 08/04/2016 09:19:32:  Epoch[ 1 of 5]-Minibatch[ 166- 168, 52.50%]: CrossEntropyWithSoftmax = 2.79868077 * 192; EvalErrorPrediction = 0.71354167 * 192; time = 0.0813s; samplesPerSecond = 2362.9
MPI Rank 1: 08/04/2016 09:19:32:  Epoch[ 1 of 5]-Minibatch[ 169- 171, 53.44%]: CrossEntropyWithSoftmax = 2.89220872 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 0.0930s; samplesPerSecond = 2063.8
MPI Rank 1: 08/04/2016 09:19:32:  Epoch[ 1 of 5]-Minibatch[ 172- 174, 54.37%]: CrossEntropyWithSoftmax = 2.95810848 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.0857s; samplesPerSecond = 2240.8
MPI Rank 1: 08/04/2016 09:19:32:  Epoch[ 1 of 5]-Minibatch[ 175- 177, 55.31%]: CrossEntropyWithSoftmax = 2.73556584 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0922s; samplesPerSecond = 2082.9
MPI Rank 1: 08/04/2016 09:19:32:  Epoch[ 1 of 5]-Minibatch[ 178- 180, 56.25%]: CrossEntropyWithSoftmax = 2.74817467 * 192; EvalErrorPrediction = 0.70833333 * 192; time = 0.0936s; samplesPerSecond = 2050.9
MPI Rank 1: 08/04/2016 09:19:32:  Epoch[ 1 of 5]-Minibatch[ 181- 183, 57.19%]: CrossEntropyWithSoftmax = 2.79482789 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0850s; samplesPerSecond = 2259.7
MPI Rank 1: 08/04/2016 09:19:32:  Epoch[ 1 of 5]-Minibatch[ 184- 186, 58.13%]: CrossEntropyWithSoftmax = 2.85199307 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0933s; samplesPerSecond = 2057.2
MPI Rank 1: 08/04/2016 09:19:33:  Epoch[ 1 of 5]-Minibatch[ 187- 189, 59.06%]: CrossEntropyWithSoftmax = 2.87310517 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.0891s; samplesPerSecond = 2155.0
MPI Rank 1: 08/04/2016 09:19:33:  Epoch[ 1 of 5]-Minibatch[ 190- 192, 60.00%]: CrossEntropyWithSoftmax = 2.87558692 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0995s; samplesPerSecond = 1930.6
MPI Rank 1: 08/04/2016 09:19:33:  Epoch[ 1 of 5]-Minibatch[ 193- 195, 60.94%]: CrossEntropyWithSoftmax = 2.65301666 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0914s; samplesPerSecond = 2099.9
MPI Rank 1: 08/04/2016 09:19:33:  Epoch[ 1 of 5]-Minibatch[ 196- 198, 61.88%]: CrossEntropyWithSoftmax = 2.63485298 * 192; EvalErrorPrediction = 0.70833333 * 192; time = 0.0948s; samplesPerSecond = 2026.0
MPI Rank 1: 08/04/2016 09:19:33:  Epoch[ 1 of 5]-Minibatch[ 199- 201, 62.81%]: CrossEntropyWithSoftmax = 2.65106093 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.0816s; samplesPerSecond = 2354.2
MPI Rank 1: 08/04/2016 09:19:33:  Epoch[ 1 of 5]-Minibatch[ 202- 204, 63.75%]: CrossEntropyWithSoftmax = 2.87337772 * 192; EvalErrorPrediction = 0.72395833 * 192; time = 0.0860s; samplesPerSecond = 2231.8
MPI Rank 1: 08/04/2016 09:19:33:  Epoch[ 1 of 5]-Minibatch[ 205- 207, 64.69%]: CrossEntropyWithSoftmax = 2.72824661 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.0914s; samplesPerSecond = 2100.1
MPI Rank 1: 08/04/2016 09:19:33:  Epoch[ 1 of 5]-Minibatch[ 208- 210, 65.63%]: CrossEntropyWithSoftmax = 2.76818891 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.0942s; samplesPerSecond = 2038.3
MPI Rank 1: 08/04/2016 09:19:33:  Epoch[ 1 of 5]-Minibatch[ 211- 213, 66.56%]: CrossEntropyWithSoftmax = 2.76831539 * 192; EvalErrorPrediction = 0.71875000 * 192; time = 0.0936s; samplesPerSecond = 2050.5
MPI Rank 1: 08/04/2016 09:19:33:  Epoch[ 1 of 5]-Minibatch[ 214- 216, 67.50%]: CrossEntropyWithSoftmax = 2.71706337 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.0859s; samplesPerSecond = 2235.6
MPI Rank 1: 08/04/2016 09:19:34:  Epoch[ 1 of 5]-Minibatch[ 217- 219, 68.44%]: CrossEntropyWithSoftmax = 2.38480503 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0945s; samplesPerSecond = 2031.2
MPI Rank 1: 08/04/2016 09:19:34:  Epoch[ 1 of 5]-Minibatch[ 220- 222, 69.38%]: CrossEntropyWithSoftmax = 2.45476385 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.1031s; samplesPerSecond = 1861.6
MPI Rank 1: 08/04/2016 09:19:34:  Epoch[ 1 of 5]-Minibatch[ 223- 225, 70.31%]: CrossEntropyWithSoftmax = 2.58926823 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0855s; samplesPerSecond = 2244.8
MPI Rank 1: 08/04/2016 09:19:34:  Epoch[ 1 of 5]-Minibatch[ 226- 228, 71.25%]: CrossEntropyWithSoftmax = 2.57842236 * 192; EvalErrorPrediction = 0.67187500 * 192; time = 0.0917s; samplesPerSecond = 2093.4
MPI Rank 1: 08/04/2016 09:19:34:  Epoch[ 1 of 5]-Minibatch[ 229- 231, 72.19%]: CrossEntropyWithSoftmax = 2.51164168 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0848s; samplesPerSecond = 2264.7
MPI Rank 1: 08/04/2016 09:19:34:  Epoch[ 1 of 5]-Minibatch[ 232- 234, 73.13%]: CrossEntropyWithSoftmax = 2.44826795 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0904s; samplesPerSecond = 2124.9
MPI Rank 1: 08/04/2016 09:19:34:  Epoch[ 1 of 5]-Minibatch[ 235- 237, 74.06%]: CrossEntropyWithSoftmax = 2.55687652 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0858s; samplesPerSecond = 2239.1
MPI Rank 1: 08/04/2016 09:19:34:  Epoch[ 1 of 5]-Minibatch[ 238- 240, 75.00%]: CrossEntropyWithSoftmax = 2.23395297 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.0918s; samplesPerSecond = 2090.9
MPI Rank 1: 08/04/2016 09:19:34:  Epoch[ 1 of 5]-Minibatch[ 241- 243, 75.94%]: CrossEntropyWithSoftmax = 2.58668461 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0938s; samplesPerSecond = 2047.8
MPI Rank 1: 08/04/2016 09:19:34:  Epoch[ 1 of 5]-Minibatch[ 244- 246, 76.88%]: CrossEntropyWithSoftmax = 2.48284812 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0932s; samplesPerSecond = 2059.8
MPI Rank 1: 08/04/2016 09:19:34:  Epoch[ 1 of 5]-Minibatch[ 247- 249, 77.81%]: CrossEntropyWithSoftmax = 2.32588676 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0863s; samplesPerSecond = 2223.7
MPI Rank 1: 08/04/2016 09:19:35:  Epoch[ 1 of 5]-Minibatch[ 250- 252, 78.75%]: CrossEntropyWithSoftmax = 2.48009103 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0939s; samplesPerSecond = 2045.1
MPI Rank 1: 08/04/2016 09:19:35:  Epoch[ 1 of 5]-Minibatch[ 253- 255, 79.69%]: CrossEntropyWithSoftmax = 2.33580686 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.1041s; samplesPerSecond = 1844.0
MPI Rank 1: 08/04/2016 09:19:35:  Epoch[ 1 of 5]-Minibatch[ 256- 258, 80.63%]: CrossEntropyWithSoftmax = 2.53104201 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0855s; samplesPerSecond = 2244.5
MPI Rank 1: 08/04/2016 09:19:35:  Epoch[ 1 of 5]-Minibatch[ 259- 261, 81.56%]: CrossEntropyWithSoftmax = 2.32475572 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0901s; samplesPerSecond = 2130.5
MPI Rank 1: 08/04/2016 09:19:35:  Epoch[ 1 of 5]-Minibatch[ 262- 264, 82.50%]: CrossEntropyWithSoftmax = 2.38613842 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.0948s; samplesPerSecond = 2024.6
MPI Rank 1: 08/04/2016 09:19:35:  Epoch[ 1 of 5]-Minibatch[ 265- 267, 83.44%]: CrossEntropyWithSoftmax = 2.08545370 * 192; EvalErrorPrediction = 0.57812500 * 192; time = 0.0675s; samplesPerSecond = 2843.9
MPI Rank 1: 08/04/2016 09:19:35:  Epoch[ 1 of 5]-Minibatch[ 268- 270, 84.38%]: CrossEntropyWithSoftmax = 2.37400496 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0402s; samplesPerSecond = 4774.2
MPI Rank 1: 08/04/2016 09:19:35:  Epoch[ 1 of 5]-Minibatch[ 271- 273, 85.31%]: CrossEntropyWithSoftmax = 2.42194794 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0402s; samplesPerSecond = 4779.7
MPI Rank 1: 08/04/2016 09:19:35:  Epoch[ 1 of 5]-Minibatch[ 274- 276, 86.25%]: CrossEntropyWithSoftmax = 2.68159100 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0391s; samplesPerSecond = 4911.4
MPI Rank 1: 08/04/2016 09:19:35:  Epoch[ 1 of 5]-Minibatch[ 277- 279, 87.19%]: CrossEntropyWithSoftmax = 2.15447777 * 192; EvalErrorPrediction = 0.57291667 * 192; time = 0.0389s; samplesPerSecond = 4934.6
MPI Rank 1: 08/04/2016 09:19:35:  Epoch[ 1 of 5]-Minibatch[ 280- 282, 88.13%]: CrossEntropyWithSoftmax = 2.48106869 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0389s; samplesPerSecond = 4933.4
MPI Rank 1: 08/04/2016 09:19:35:  Epoch[ 1 of 5]-Minibatch[ 283- 285, 89.06%]: CrossEntropyWithSoftmax = 2.41161805 * 192; EvalErrorPrediction = 0.60937500 * 192; time = 0.0397s; samplesPerSecond = 4838.5
MPI Rank 1: 08/04/2016 09:19:35:  Epoch[ 1 of 5]-Minibatch[ 286- 288, 90.00%]: CrossEntropyWithSoftmax = 2.44875573 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0390s; samplesPerSecond = 4928.8
MPI Rank 1: 08/04/2016 09:19:35:  Epoch[ 1 of 5]-Minibatch[ 289- 291, 90.94%]: CrossEntropyWithSoftmax = 2.21308330 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.0390s; samplesPerSecond = 4922.7
MPI Rank 1: 08/04/2016 09:19:35:  Epoch[ 1 of 5]-Minibatch[ 292- 294, 91.88%]: CrossEntropyWithSoftmax = 2.15114589 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.0396s; samplesPerSecond = 4852.4
MPI Rank 1: 08/04/2016 09:19:35:  Epoch[ 1 of 5]-Minibatch[ 295- 297, 92.81%]: CrossEntropyWithSoftmax = 2.09077091 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.0400s; samplesPerSecond = 4800.8
MPI Rank 1: 08/04/2016 09:19:35:  Epoch[ 1 of 5]-Minibatch[ 298- 300, 93.75%]: CrossEntropyWithSoftmax = 2.40274878 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0392s; samplesPerSecond = 4902.8
MPI Rank 1: 08/04/2016 09:19:35:  Epoch[ 1 of 5]-Minibatch[ 301- 303, 94.69%]: CrossEntropyWithSoftmax = 2.28118136 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.0393s; samplesPerSecond = 4891.7
MPI Rank 1: 08/04/2016 09:19:35:  Epoch[ 1 of 5]-Minibatch[ 304- 306, 95.63%]: CrossEntropyWithSoftmax = 2.39608074 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0392s; samplesPerSecond = 4894.5
MPI Rank 1: 08/04/2016 09:19:36:  Epoch[ 1 of 5]-Minibatch[ 307- 309, 96.56%]: CrossEntropyWithSoftmax = 2.22785988 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0391s; samplesPerSecond = 4904.3
MPI Rank 1: 08/04/2016 09:19:36:  Epoch[ 1 of 5]-Minibatch[ 310- 312, 97.50%]: CrossEntropyWithSoftmax = 2.19433076 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.0396s; samplesPerSecond = 4854.1
MPI Rank 1: 08/04/2016 09:19:36:  Epoch[ 1 of 5]-Minibatch[ 313- 315, 98.44%]: CrossEntropyWithSoftmax = 2.16074313 * 192; EvalErrorPrediction = 0.55729167 * 192; time = 0.0423s; samplesPerSecond = 4539.4
MPI Rank 1: 08/04/2016 09:19:36:  Epoch[ 1 of 5]-Minibatch[ 316- 318, 99.38%]: CrossEntropyWithSoftmax = 2.25700487 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.0400s; samplesPerSecond = 4805.4
MPI Rank 1: 08/04/2016 09:19:36: Finished Epoch[ 1 of 5]: [Training] CrossEntropyWithSoftmax = 3.04659963 * 20480; EvalErrorPrediction = 0.73706055 * 20480; totalSamplesSeen = 20480; learningRatePerSample = 0.015625; epochTime=8.63349s
MPI Rank 1: 
MPI Rank 1: 08/04/2016 09:19:36: Starting Epoch 2: learning rate per sample = 0.001953  effective momentum = 0.656119  momentum as time constant = 607.5 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 1: frames [20480..40960] (first utterance at frame 20480), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 08/04/2016 09:19:36: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 08/04/2016 09:19:36:  Epoch[ 2 of 5]-Minibatch[   1-   3, 3.75%]: CrossEntropyWithSoftmax = 2.07115873 * 271; EvalErrorPrediction = 0.56826568 * 271; time = 0.0937s; samplesPerSecond = 2892.3
MPI Rank 1: 08/04/2016 09:19:36:  Epoch[ 2 of 5]-Minibatch[   4-   6, 7.50%]: CrossEntropyWithSoftmax = 2.25067219 * 255; EvalErrorPrediction = 0.61176471 * 255; time = 0.0930s; samplesPerSecond = 2741.5
MPI Rank 1: 08/04/2016 09:19:36:  Epoch[ 2 of 5]-Minibatch[   7-   9, 11.25%]: CrossEntropyWithSoftmax = 2.14496373 * 280; EvalErrorPrediction = 0.57500000 * 280; time = 0.1146s; samplesPerSecond = 2443.3
MPI Rank 1: 08/04/2016 09:19:36:  Epoch[ 2 of 5]-Minibatch[  10-  12, 15.00%]: CrossEntropyWithSoftmax = 2.08035281 * 282; EvalErrorPrediction = 0.57092199 * 282; time = 0.1061s; samplesPerSecond = 2657.1
MPI Rank 1: 08/04/2016 09:19:36:  Epoch[ 2 of 5]-Minibatch[  13-  15, 18.75%]: CrossEntropyWithSoftmax = 2.06371895 * 290; EvalErrorPrediction = 0.60000000 * 290; time = 0.1157s; samplesPerSecond = 2506.4
MPI Rank 1: 08/04/2016 09:19:36:  Epoch[ 2 of 5]-Minibatch[  16-  18, 22.50%]: CrossEntropyWithSoftmax = 2.11032244 * 271; EvalErrorPrediction = 0.55350554 * 271; time = 0.0931s; samplesPerSecond = 2911.7
MPI Rank 1: 08/04/2016 09:19:36:  Epoch[ 2 of 5]-Minibatch[  19-  21, 26.25%]: CrossEntropyWithSoftmax = 1.94088006 * 280; EvalErrorPrediction = 0.53928571 * 280; time = 0.1138s; samplesPerSecond = 2461.5
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.02-seconds latency this time; accumulated time on sync point = 0.02 seconds , average latency = 0.02 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     0.85 seconds since last report (0.01 seconds on comm.); 4262 samples processed by 2 workers (2120 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 5.03k samplesPerSecond , throughputPerWorker = 2.52k samplesPerSecond
MPI Rank 1: 08/04/2016 09:19:37:  Epoch[ 2 of 5]-Minibatch[  22-  24, 30.00%]: CrossEntropyWithSoftmax = 2.14885587 * 288; EvalErrorPrediction = 0.61111111 * 288; time = 0.1343s; samplesPerSecond = 2144.7
MPI Rank 1: 08/04/2016 09:19:37:  Epoch[ 2 of 5]-Minibatch[  25-  27, 33.75%]: CrossEntropyWithSoftmax = 2.11213061 * 272; EvalErrorPrediction = 0.58823529 * 272; time = 0.0932s; samplesPerSecond = 2919.6
MPI Rank 1: 08/04/2016 09:19:37:  Epoch[ 2 of 5]-Minibatch[  28-  30, 37.50%]: CrossEntropyWithSoftmax = 1.95695279 * 294; EvalErrorPrediction = 0.54421769 * 294; time = 0.1090s; samplesPerSecond = 2696.3
MPI Rank 1: 08/04/2016 09:19:37:  Epoch[ 2 of 5]-Minibatch[  31-  33, 41.25%]: CrossEntropyWithSoftmax = 2.06546820 * 293; EvalErrorPrediction = 0.56655290 * 293; time = 0.0934s; samplesPerSecond = 3137.9
MPI Rank 1: 08/04/2016 09:19:37:  Epoch[ 2 of 5]-Minibatch[  34-  36, 45.00%]: CrossEntropyWithSoftmax = 2.16821852 * 268; EvalErrorPrediction = 0.57089552 * 268; time = 0.0936s; samplesPerSecond = 2863.6
MPI Rank 1: 08/04/2016 09:19:37:  Epoch[ 2 of 5]-Minibatch[  37-  39, 48.75%]: CrossEntropyWithSoftmax = 2.12460387 * 276; EvalErrorPrediction = 0.58333333 * 276; time = 0.1055s; samplesPerSecond = 2616.8
MPI Rank 1: 08/04/2016 09:19:37:  Epoch[ 2 of 5]-Minibatch[  40-  42, 52.50%]: CrossEntropyWithSoftmax = 2.12061564 * 263; EvalErrorPrediction = 0.56273764 * 263; time = 0.0933s; samplesPerSecond = 2819.4
MPI Rank 1: 08/04/2016 09:19:37:  Epoch[ 2 of 5]-Minibatch[  43-  45, 56.25%]: CrossEntropyWithSoftmax = 1.97616151 * 273; EvalErrorPrediction = 0.52380952 * 273; time = 0.0891s; samplesPerSecond = 3064.2
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.09-seconds latency this time; accumulated time on sync point = 0.11 seconds , average latency = 0.05 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     0.89 seconds since last report (0.04 seconds on comm.); 4236 samples processed by 2 workers (2123 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 4.77k samplesPerSecond , throughputPerWorker = 2.39k samplesPerSecond
MPI Rank 1: 08/04/2016 09:19:38:  Epoch[ 2 of 5]-Minibatch[  46-  48, 60.00%]: CrossEntropyWithSoftmax = 2.06002066 * 258; EvalErrorPrediction = 0.56201550 * 258; time = 0.2314s; samplesPerSecond = 1115.0
MPI Rank 1: 08/04/2016 09:19:38:  Epoch[ 2 of 5]-Minibatch[  49-  51, 63.75%]: CrossEntropyWithSoftmax = 1.89071033 * 297; EvalErrorPrediction = 0.48821549 * 297; time = 0.1084s; samplesPerSecond = 2740.3
MPI Rank 1: 08/04/2016 09:19:38:  Epoch[ 2 of 5]-Minibatch[  52-  54, 67.50%]: CrossEntropyWithSoftmax = 2.03598584 * 288; EvalErrorPrediction = 0.56944444 * 288; time = 0.0980s; samplesPerSecond = 2938.6
MPI Rank 1: 08/04/2016 09:19:38:  Epoch[ 2 of 5]-Minibatch[  55-  57, 71.25%]: CrossEntropyWithSoftmax = 2.00016720 * 285; EvalErrorPrediction = 0.56140351 * 285; time = 0.1064s; samplesPerSecond = 2678.1
MPI Rank 1: 08/04/2016 09:19:38:  Epoch[ 2 of 5]-Minibatch[  58-  60, 75.00%]: CrossEntropyWithSoftmax = 2.02411505 * 267; EvalErrorPrediction = 0.50187266 * 267; time = 0.0875s; samplesPerSecond = 3052.5
MPI Rank 1: 08/04/2016 09:19:38:  Epoch[ 2 of 5]-Minibatch[  61-  63, 78.75%]: CrossEntropyWithSoftmax = 1.90241519 * 277; EvalErrorPrediction = 0.53068592 * 277; time = 0.0946s; samplesPerSecond = 2927.0
MPI Rank 1: 08/04/2016 09:19:38:  Epoch[ 2 of 5]-Minibatch[  64-  66, 82.50%]: CrossEntropyWithSoftmax = 1.98598600 * 292; EvalErrorPrediction = 0.54109589 * 292; time = 0.1094s; samplesPerSecond = 2670.2
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.09-seconds latency this time; accumulated time on sync point = 0.20 seconds , average latency = 0.07 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     0.88 seconds since last report (0.04 seconds on comm.); 4175 samples processed by 2 workers (2066 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 4.73k samplesPerSecond , throughputPerWorker = 2.37k samplesPerSecond
MPI Rank 1: 08/04/2016 09:19:38:  Epoch[ 2 of 5]-Minibatch[  67-  69, 86.25%]: CrossEntropyWithSoftmax = 1.85488952 * 284; EvalErrorPrediction = 0.53873239 * 284; time = 0.2482s; samplesPerSecond = 1144.0
MPI Rank 1: 08/04/2016 09:19:38:  Epoch[ 2 of 5]-Minibatch[  70-  72, 90.00%]: CrossEntropyWithSoftmax = 1.78231633 * 298; EvalErrorPrediction = 0.50671141 * 298; time = 0.1009s; samplesPerSecond = 2953.3
MPI Rank 1: 08/04/2016 09:19:39:  Epoch[ 2 of 5]-Minibatch[  73-  75, 93.75%]: CrossEntropyWithSoftmax = 2.11352843 * 291; EvalErrorPrediction = 0.57044674 * 291; time = 0.1099s; samplesPerSecond = 2647.4
MPI Rank 1: 08/04/2016 09:19:39:  Epoch[ 2 of 5]-Minibatch[  76-  78, 97.50%]: CrossEntropyWithSoftmax = 2.04207024 * 284; EvalErrorPrediction = 0.52464789 * 284; time = 0.0886s; samplesPerSecond = 3206.8
MPI Rank 1: 08/04/2016 09:19:39:  Epoch[ 2 of 5]-Minibatch[  79-  81, 101.25%]: CrossEntropyWithSoftmax = 1.97116609 * 172; EvalErrorPrediction = 0.50000000 * 172; time = 0.0659s; samplesPerSecond = 2610.5
MPI Rank 1: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.25-seconds latency this time; accumulated time on sync point = 0.45 seconds , average latency = 0.11 seconds
MPI Rank 1: 		(model aggregation stats) 4-th sync:     1.45 seconds since last report (0.80 seconds on comm.); 7807 samples processed by 2 workers (1140 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 5.37k samplesPerSecond , throughputPerWorker = 2.69k samplesPerSecond
MPI Rank 1: 08/04/2016 09:19:40: Finished Epoch[ 2 of 5]: [Training] CrossEntropyWithSoftmax = 2.01364869 * 20480; EvalErrorPrediction = 0.55122070 * 20480; totalSamplesSeen = 40960; learningRatePerSample = 0.001953125; epochTime=4.07014s
MPI Rank 1: 
MPI Rank 1: 08/04/2016 09:19:40: Starting Epoch 3: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 2: frames [40960..61440] (first utterance at frame 40960), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 08/04/2016 09:19:40: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 08/04/2016 09:19:40:  Epoch[ 3 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.91120443 * 1150; EvalErrorPrediction = 0.52695652 * 1150; time = 0.2278s; samplesPerSecond = 5049.1
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.09-seconds latency this time; accumulated time on sync point = 0.09 seconds , average latency = 0.09 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     0.60 seconds since last report (0.04 seconds on comm.); 4878 samples processed by 2 workers (2294 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 8.09k samplesPerSecond , throughputPerWorker = 4.04k samplesPerSecond
MPI Rank 1: 08/04/2016 09:19:41:  Epoch[ 3 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.90022680 * 1144; EvalErrorPrediction = 0.53409091 * 1144; time = 0.3706s; samplesPerSecond = 3086.6
MPI Rank 1: 08/04/2016 09:19:41:  Epoch[ 3 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.91550235 * 1158; EvalErrorPrediction = 0.53195164 * 1158; time = 0.3867s; samplesPerSecond = 2994.6
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.11-seconds latency this time; accumulated time on sync point = 0.20 seconds , average latency = 0.10 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     0.96 seconds since last report (0.04 seconds on comm.); 4878 samples processed by 2 workers (2313 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 5.08k samplesPerSecond , throughputPerWorker = 2.54k samplesPerSecond
MPI Rank 1: 08/04/2016 09:19:42:  Epoch[ 3 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.90826298 * 1155; EvalErrorPrediction = 0.53419913 * 1155; time = 0.5731s; samplesPerSecond = 2015.5
MPI Rank 1: 08/04/2016 09:19:42:  Epoch[ 3 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.97099621 * 1134; EvalErrorPrediction = 0.55555556 * 1134; time = 0.3397s; samplesPerSecond = 3338.5
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.10-seconds latency this time; accumulated time on sync point = 0.30 seconds , average latency = 0.10 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     0.90 seconds since last report (0.04 seconds on comm.); 4809 samples processed by 2 workers (2277 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 5.35k samplesPerSecond , throughputPerWorker = 2.67k samplesPerSecond
MPI Rank 1: 08/04/2016 09:19:42:  Epoch[ 3 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.90900130 * 1143; EvalErrorPrediction = 0.52493438 * 1143; time = 0.5585s; samplesPerSecond = 2046.6
MPI Rank 1: 08/04/2016 09:19:43:  Epoch[ 3 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.84824823 * 770; EvalErrorPrediction = 0.52337662 * 770; time = 0.2483s; samplesPerSecond = 3100.7
MPI Rank 1: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.32-seconds latency this time; accumulated time on sync point = 0.62 seconds , average latency = 0.16 seconds
MPI Rank 1: 		(model aggregation stats) 4-th sync:     1.02 seconds since last report (0.43 seconds on comm.); 5915 samples processed by 2 workers (770 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 5.79k samplesPerSecond , throughputPerWorker = 2.90k samplesPerSecond
MPI Rank 1: 08/04/2016 09:19:43: Finished Epoch[ 3 of 5]: [Training] CrossEntropyWithSoftmax = 1.91669950 * 20480; EvalErrorPrediction = 0.53505859 * 20480; totalSamplesSeen = 61440; learningRatePerSample = 9.7656251e-005; epochTime=3.48441s
MPI Rank 1: 
MPI Rank 1: 08/04/2016 09:19:44: Starting Epoch 4: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 3: frames [61440..81920] (first utterance at frame 61440), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 08/04/2016 09:19:44: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 08/04/2016 09:19:44:  Epoch[ 4 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.83047406 * 1193; EvalErrorPrediction = 0.49538977 * 1193; time = 0.2283s; samplesPerSecond = 5224.6
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.04-seconds latency this time; accumulated time on sync point = 0.04 seconds , average latency = 0.04 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     0.55 seconds since last report (0.05 seconds on comm.); 4812 samples processed by 2 workers (2306 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 8.68k samplesPerSecond , throughputPerWorker = 4.34k samplesPerSecond
MPI Rank 1: 08/04/2016 09:19:44:  Epoch[ 4 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.85961148 * 1113; EvalErrorPrediction = 0.51033243 * 1113; time = 0.3209s; samplesPerSecond = 3468.9
MPI Rank 1: 08/04/2016 09:19:44:  Epoch[ 4 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.85315433 * 1170; EvalErrorPrediction = 0.53589744 * 1170; time = 0.3363s; samplesPerSecond = 3479.1
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.11-seconds latency this time; accumulated time on sync point = 0.15 seconds , average latency = 0.08 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     0.96 seconds since last report (0.04 seconds on comm.); 4977 samples processed by 2 workers (2382 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 5.20k samplesPerSecond , throughputPerWorker = 2.60k samplesPerSecond
MPI Rank 1: 08/04/2016 09:19:45:  Epoch[ 4 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.80357659 * 1212; EvalErrorPrediction = 0.49504950 * 1212; time = 0.6193s; samplesPerSecond = 1957.0
MPI Rank 1: 08/04/2016 09:19:45:  Epoch[ 4 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.80330697 * 1191; EvalErrorPrediction = 0.47691016 * 1191; time = 0.3510s; samplesPerSecond = 3393.5
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.15 seconds , average latency = 0.05 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     0.91 seconds since last report (0.05 seconds on comm.); 4887 samples processed by 2 workers (2388 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 5.36k samplesPerSecond , throughputPerWorker = 2.68k samplesPerSecond
MPI Rank 1: 08/04/2016 09:19:46:  Epoch[ 4 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.91949230 * 1197; EvalErrorPrediction = 0.54218881 * 1197; time = 0.5598s; samplesPerSecond = 2138.3
MPI Rank 1: 08/04/2016 09:19:46:  Epoch[ 4 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.97406523 * 816; EvalErrorPrediction = 0.54779412 * 816; time = 0.2421s; samplesPerSecond = 3370.6
MPI Rank 1: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.31-seconds latency this time; accumulated time on sync point = 0.47 seconds , average latency = 0.12 seconds
MPI Rank 1: 		(model aggregation stats) 4-th sync:     1.00 seconds since last report (0.43 seconds on comm.); 5804 samples processed by 2 workers (816 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 5.82k samplesPerSecond , throughputPerWorker = 2.91k samplesPerSecond
MPI Rank 1: 08/04/2016 09:19:47: Finished Epoch[ 4 of 5]: [Training] CrossEntropyWithSoftmax = 1.88068115 * 20480; EvalErrorPrediction = 0.51713867 * 20480; totalSamplesSeen = 81920; learningRatePerSample = 9.7656251e-005; epochTime=3.42082s
MPI Rank 1: 
MPI Rank 1: 08/04/2016 09:19:47: Starting Epoch 5: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 4: frames [81920..102400] (first utterance at frame 81920), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 08/04/2016 09:19:47: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 08/04/2016 09:19:47:  Epoch[ 5 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.86464284 * 1216; EvalErrorPrediction = 0.53782895 * 1216; time = 0.2290s; samplesPerSecond = 5311.0
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.04-seconds latency this time; accumulated time on sync point = 0.04 seconds , average latency = 0.04 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     0.56 seconds since last report (0.05 seconds on comm.); 4910 samples processed by 2 workers (2408 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 8.70k samplesPerSecond , throughputPerWorker = 4.35k samplesPerSecond
MPI Rank 1: 08/04/2016 09:19:48:  Epoch[ 5 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.79099650 * 1192; EvalErrorPrediction = 0.51090604 * 1192; time = 0.3306s; samplesPerSecond = 3605.6
MPI Rank 1: 08/04/2016 09:19:48:  Epoch[ 5 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.82283590 * 1216; EvalErrorPrediction = 0.51233553 * 1216; time = 0.3661s; samplesPerSecond = 3321.6
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.11-seconds latency this time; accumulated time on sync point = 0.16 seconds , average latency = 0.08 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     0.88 seconds since last report (0.05 seconds on comm.); 4540 samples processed by 2 workers (2059 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 5.14k samplesPerSecond , throughputPerWorker = 2.57k samplesPerSecond
MPI Rank 1: 08/04/2016 09:19:49:  Epoch[ 5 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.93101102 * 1227; EvalErrorPrediction = 0.52078240 * 1227; time = 0.6119s; samplesPerSecond = 2005.1
MPI Rank 1: 08/04/2016 09:19:49:  Epoch[ 5 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.81244719 * 1231; EvalErrorPrediction = 0.51909017 * 1231; time = 0.4110s; samplesPerSecond = 2994.9
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.07-seconds latency this time; accumulated time on sync point = 0.22 seconds , average latency = 0.07 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     0.88 seconds since last report (0.05 seconds on comm.); 4881 samples processed by 2 workers (2427 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 5.52k samplesPerSecond , throughputPerWorker = 2.76k samplesPerSecond
MPI Rank 1: 08/04/2016 09:19:50:  Epoch[ 5 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.92351059 * 1175; EvalErrorPrediction = 0.54127660 * 1175; time = 0.4576s; samplesPerSecond = 2567.5
MPI Rank 1: 08/04/2016 09:19:50:  Epoch[ 5 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.86824728 * 836; EvalErrorPrediction = 0.53110048 * 836; time = 0.2766s; samplesPerSecond = 3022.7
MPI Rank 1: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.28-seconds latency this time; accumulated time on sync point = 0.50 seconds , average latency = 0.12 seconds
MPI Rank 1: 		(model aggregation stats) 4-th sync:     1.08 seconds since last report (0.44 seconds on comm.); 6149 samples processed by 2 workers (1199 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 5.67k samplesPerSecond , throughputPerWorker = 2.84k samplesPerSecond
MPI Rank 1: 08/04/2016 09:19:51: Finished Epoch[ 5 of 5]: [Training] CrossEntropyWithSoftmax = 1.83994868 * 20480; EvalErrorPrediction = 0.51313477 * 20480; totalSamplesSeen = 102400; learningRatePerSample = 9.7656251e-005; epochTime=3.418s
MPI Rank 1: 08/04/2016 09:19:51: CNTKCommandTrainEnd: speechTrain
MPI Rank 1: 
MPI Rank 1: 08/04/2016 09:19:51: Action "train" complete.
MPI Rank 1: 
MPI Rank 1: 08/04/2016 09:19:51: __COMPLETED__
MPI Rank 1: ~MPIWrapper