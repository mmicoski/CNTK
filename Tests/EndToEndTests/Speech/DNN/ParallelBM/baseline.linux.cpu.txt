CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU E5-2630 v2 @ 2.60GHz
    Hardware threads: 24
    Total Memory: 264172964 kB
-------------------------------------------------------------------
=== Running mpiexec -n 2 /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/1bitsgd/release/bin/cntk configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/../ParallelBM/cntk.cntk currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data RunDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/.. OutputDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu DeviceId=-1 timestamping=true numCPUThreads=12 precision=double speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]] stderr=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu/stderr
-------------------------------------------------------------------
Build info: 

		Built time: Aug  4 2016 13:07:13
		Last modified date: Thu Aug  4 10:38:25 2016
		Build type: release
		Build target: GPU
		With 1bit-SGD: yes
		Math lib: mkl
		CUDA_PATH: /usr/local/cuda-7.5
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local/cudnn-4.0
		Build Branch: HEAD
		Build SHA1: 0f61695dfc335f2406284d335678f57c215e6e9c
		Built by philly on ee6c20c358b8
		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
-------------------------------------------------------------------
-------------------------------------------------------------------
Build info: 

		Built time: Aug  4 2016 13:07:13
		Last modified date: Thu Aug  4 10:38:25 2016
		Build type: release
		Build target: GPU
		With 1bit-SGD: yes
		Math lib: mkl
		CUDA_PATH: /usr/local/cuda-7.5
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local/cudnn-4.0
		Build Branch: HEAD
		Build SHA1: 0f61695dfc335f2406284d335678f57c215e6e9c
		Built by philly on ee6c20c358b8
		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
-------------------------------------------------------------------
Changed current directory to /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
Changed current directory to /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPIWrapper: initializing MPI
MPIWrapper: initializing MPI
ping [requestnodes (before change)]: 2 nodes pinging each other
ping [requestnodes (before change)]: 2 nodes pinging each other
ping [requestnodes (before change)]: all 2 nodes responded
requestnodes [MPIWrapper]: using 2 out of 2 MPI nodes (2 requested); we (0) are in (participating)
ping [requestnodes (after change)]: 2 nodes pinging each other
ping [requestnodes (before change)]: all 2 nodes responded
requestnodes [MPIWrapper]: using 2 out of 2 MPI nodes (2 requested); we (1) are in (participating)
ping [requestnodes (after change)]: 2 nodes pinging each other
ping [requestnodes (after change)]: all 2 nodes responded
ping [requestnodes (after change)]: all 2 nodes responded
mpihelper: we are cog 0 in a gearbox of 2
ping [mpihelper]: 2 nodes pinging each other
mpihelper: we are cog 1 in a gearbox of 2
ping [mpihelper]: 2 nodes pinging each other
ping [mpihelper]: all 2 nodes responded
ping [mpihelper]: all 2 nodes responded
08/04/2016 13:59:43: Redirecting stderr to file /tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu/stderr_speechTrain.logrank0
08/04/2016 13:59:43: Redirecting stderr to file /tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu/stderr_speechTrain.logrank1
MPI Rank 0: 08/04/2016 13:59:43: -------------------------------------------------------------------
MPI Rank 0: 08/04/2016 13:59:43: Build info: 
MPI Rank 0: 
MPI Rank 0: 08/04/2016 13:59:43: 		Built time: Aug  4 2016 13:07:13
MPI Rank 0: 08/04/2016 13:59:43: 		Last modified date: Thu Aug  4 10:38:25 2016
MPI Rank 0: 08/04/2016 13:59:43: 		Build type: release
MPI Rank 0: 08/04/2016 13:59:43: 		Build target: GPU
MPI Rank 0: 08/04/2016 13:59:43: 		With 1bit-SGD: yes
MPI Rank 0: 08/04/2016 13:59:43: 		Math lib: mkl
MPI Rank 0: 08/04/2016 13:59:43: 		CUDA_PATH: /usr/local/cuda-7.5
MPI Rank 0: 08/04/2016 13:59:43: 		CUB_PATH: /usr/local/cub-1.4.1
MPI Rank 0: 08/04/2016 13:59:43: 		CUDNN_PATH: /usr/local/cudnn-4.0
MPI Rank 0: 08/04/2016 13:59:43: 		Build Branch: HEAD
MPI Rank 0: 08/04/2016 13:59:43: 		Build SHA1: 0f61695dfc335f2406284d335678f57c215e6e9c
MPI Rank 0: 08/04/2016 13:59:43: 		Built by philly on ee6c20c358b8
MPI Rank 0: 08/04/2016 13:59:43: 		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
MPI Rank 0: 08/04/2016 13:59:43: -------------------------------------------------------------------
MPI Rank 0: 08/04/2016 13:59:44: -------------------------------------------------------------------
MPI Rank 0: 08/04/2016 13:59:44: GPU info:
MPI Rank 0: 
MPI Rank 0: 08/04/2016 13:59:44: 		Device[0]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
MPI Rank 0: 08/04/2016 13:59:44: 		Device[1]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
MPI Rank 0: 08/04/2016 13:59:44: 		Device[2]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
MPI Rank 0: 08/04/2016 13:59:44: -------------------------------------------------------------------
MPI Rank 0: 
MPI Rank 0: 08/04/2016 13:59:44: Running on localhost at 2016/08/04 13:59:44
MPI Rank 0: 08/04/2016 13:59:44: Command line: 
MPI Rank 0: /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/1bitsgd/release/bin/cntk  configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/../ParallelBM/cntk.cntk  currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data  RunDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu  DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data  ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..  OutputDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu  DeviceId=-1  timestamping=true  numCPUThreads=12  precision=double  speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]  stderr=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu/stderr
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 08/04/2016 13:59:44: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: 08/04/2016 13:59:44: precision = "float"
MPI Rank 0: command = speechTrain
MPI Rank 0: deviceId = $DeviceId$
MPI Rank 0: parallelTrain = true
MPI Rank 0: speechTrain = [
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "$RunDir$/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = $DeviceId$
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 blockSizePerWorker=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "$DataDir$/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "$DataDir$/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ]
MPI Rank 0: currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: RunDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu
MPI Rank 0: DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 0: OutputDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu
MPI Rank 0: DeviceId=-1
MPI Rank 0: timestamping=true
MPI Rank 0: numCPUThreads=12
MPI Rank 0: precision=double
MPI Rank 0: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: stderr=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu/stderr
MPI Rank 0: 
MPI Rank 0: 08/04/2016 13:59:44: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 
MPI Rank 0: 08/04/2016 13:59:44: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: 08/04/2016 13:59:44: precision = "float"
MPI Rank 0: command = speechTrain
MPI Rank 0: deviceId = -1
MPI Rank 0: parallelTrain = true
MPI Rank 0: speechTrain = [
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = -1
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 blockSizePerWorker=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ]
MPI Rank 0: currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: RunDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu
MPI Rank 0: DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 0: OutputDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu
MPI Rank 0: DeviceId=-1
MPI Rank 0: timestamping=true
MPI Rank 0: numCPUThreads=12
MPI Rank 0: precision=double
MPI Rank 0: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: stderr=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu/stderr
MPI Rank 0: 
MPI Rank 0: 08/04/2016 13:59:44: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 
MPI Rank 0: 08/04/2016 13:59:44: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: configparameters: cntk.cntk:command=speechTrain
MPI Rank 0: configparameters: cntk.cntk:ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 0: configparameters: cntk.cntk:currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: configparameters: cntk.cntk:DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: configparameters: cntk.cntk:deviceId=-1
MPI Rank 0: configparameters: cntk.cntk:numCPUThreads=12
MPI Rank 0: configparameters: cntk.cntk:OutputDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu
MPI Rank 0: configparameters: cntk.cntk:parallelTrain=true
MPI Rank 0: configparameters: cntk.cntk:precision=double
MPI Rank 0: configparameters: cntk.cntk:RunDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu
MPI Rank 0: configparameters: cntk.cntk:speechTrain=[
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = -1
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 blockSizePerWorker=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ] [SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: 
MPI Rank 0: configparameters: cntk.cntk:stderr=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu/stderr
MPI Rank 0: configparameters: cntk.cntk:timestamping=true
MPI Rank 0: 08/04/2016 13:59:44: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 08/04/2016 13:59:44: Commands: speechTrain
MPI Rank 0: 08/04/2016 13:59:44: Precision = "double"
MPI Rank 0: 08/04/2016 13:59:44: Using 12 CPU threads.
MPI Rank 0: 08/04/2016 13:59:44: CNTKModelPath: /tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn
MPI Rank 0: 08/04/2016 13:59:44: CNTKCommandTrainInfo: speechTrain : 5
MPI Rank 0: 08/04/2016 13:59:44: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 5
MPI Rank 0: 
MPI Rank 0: 08/04/2016 13:59:44: ##############################################################################
MPI Rank 0: 08/04/2016 13:59:44: #                                                                            #
MPI Rank 0: 08/04/2016 13:59:44: # Action "train"                                                             #
MPI Rank 0: 08/04/2016 13:59:44: #                                                                            #
MPI Rank 0: 08/04/2016 13:59:44: ##############################################################################
MPI Rank 0: 
MPI Rank 0: 08/04/2016 13:59:44: CNTKCommandTrainBegin: speechTrain
MPI Rank 0: SimpleNetworkBuilder Using CPU
MPI Rank 0: reading script file glob_0000.scp ... 948 entries
MPI Rank 0: total 132 state names in state list /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list
MPI Rank 0: htkmlfreader: reading MLF file /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf ... total 948 entries
MPI Rank 0: ...............................................................................................feature set 0: 252734 frames in 948 out of 948 utterances
MPI Rank 0: label set 0: 129 classes
MPI Rank 0: minibatchutterancesource: 948 utterances grouped into 3 chunks, av. chunk size: 316.0 utterances, 84244.7 frames
MPI Rank 0: 
MPI Rank 0: 08/04/2016 13:59:44: Creating virgin network.
MPI Rank 0: 
MPI Rank 0: Post-processing network...
MPI Rank 0: 
MPI Rank 0: 7 roots:
MPI Rank 0: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
MPI Rank 0: 	EvalErrorPrediction = ErrorPrediction()
MPI Rank 0: 	InvStdOfFeatures = InvStdDev()
MPI Rank 0: 	MeanOfFeatures = Mean()
MPI Rank 0: 	PosteriorProb = Softmax()
MPI Rank 0: 	Prior = Mean()
MPI Rank 0: 	ScaledLogLikelihood = Minus()
MPI Rank 0: 
MPI Rank 0: Validating network. 25 nodes to process in pass 1.
MPI Rank 0: 
MPI Rank 0: Validating --> labels = InputValue() :  -> [132 x *]
MPI Rank 0: Validating --> W2 = LearnableParameter() :  -> [132 x 512]
MPI Rank 0: Validating --> W1 = LearnableParameter() :  -> [512 x 512]
MPI Rank 0: Validating --> W0 = LearnableParameter() :  -> [512 x 363]
MPI Rank 0: Validating --> features = InputValue() :  -> [363 x *]
MPI Rank 0: Validating --> MeanOfFeatures = Mean (features) : [363 x *] -> [363]
MPI Rank 0: Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *] -> [363]
MPI Rank 0: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *], [363], [363] -> [363 x *]
MPI Rank 0: Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [512 x 363], [363 x *] -> [512 x *]
MPI Rank 0: Validating --> B0 = LearnableParameter() :  -> [512 x 1]
MPI Rank 0: Validating --> W0*features+B0 = Plus (W0*features, B0) : [512 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 0: Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> W1*H1 = Times (W1, H1) : [512 x 512], [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> B1 = LearnableParameter() :  -> [512 x 1]
MPI Rank 0: Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [512 x 1 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 0: Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> W2*H1 = Times (W2, H2) : [132 x 512], [512 x 1 x *] -> [132 x 1 x *]
MPI Rank 0: Validating --> B2 = LearnableParameter() :  -> [132 x 1]
MPI Rank 0: Validating --> HLast = Plus (W2*H1, B2) : [132 x 1 x *], [132 x 1] -> [132 x 1 x *]
MPI Rank 0: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 0: Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 0: Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *] -> [132 x 1 x *]
MPI Rank 0: Validating --> Prior = Mean (labels) : [132 x *] -> [132]
MPI Rank 0: Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
MPI Rank 0: Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *], [132] -> [132 x 1 x *]
MPI Rank 0: 
MPI Rank 0: Validating network. 17 nodes to process in pass 2.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: Validating network, final pass.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 12 out of 25 nodes do not share the minibatch layout with the input data.
MPI Rank 0: 
MPI Rank 0: Post-processing network complete.
MPI Rank 0: 
MPI Rank 0: 08/04/2016 13:59:44: Created model with 25 nodes on CPU.
MPI Rank 0: 
MPI Rank 0: 08/04/2016 13:59:44: Training criterion node(s):
MPI Rank 0: 08/04/2016 13:59:44: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax
MPI Rank 0: 
MPI Rank 0: 08/04/2016 13:59:44: Evaluation criterion node(s):
MPI Rank 0: 
MPI Rank 0: 08/04/2016 13:59:44: 	EvalErrorPrediction = ErrorPrediction
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: Allocating matrices for forward and/or backward propagation.
MPI Rank 0: 
MPI Rank 0: Memory Sharing Structure:
MPI Rank 0: 
MPI Rank 0: (nil): {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[363]] [LogOfPrior Gradient[132]] [MVNormalizedFeatures Gradient[363 x *]] [MeanOfFeatures Gradient[363]] [PosteriorProb Gradient[132 x 1 x *]] [PosteriorProb Value[132 x 1 x *]] [Prior Gradient[132]] [ScaledLogLikelihood Gradient[132 x 1 x *]] [features Gradient[363 x *]] [labels Gradient[132 x *]] }
MPI Rank 0: 0x2bd4ec8: {[B1 Value[512 x 1]] }
MPI Rank 0: 0x2c5ba28: {[Prior Value[132]] }
MPI Rank 0: 0x2d4ef08: {[W2 Value[132 x 512]] }
MPI Rank 0: 0x2d57098: {[features Value[363 x *]] }
MPI Rank 0: 0x2f4a6b8: {[InvStdOfFeatures Value[363]] }
MPI Rank 0: 0x2f5f458: {[B2 Gradient[132 x 1]] }
MPI Rank 0: 0x2f837d8: {[EvalErrorPrediction Value[1]] }
MPI Rank 0: 0x2f83938: {[ScaledLogLikelihood Value[132 x 1 x *]] }
MPI Rank 0: 0x2f84d48: {[CrossEntropyWithSoftmax Gradient[1]] }
MPI Rank 0: 0x2f84f08: {[B1 Gradient[512 x 1]] [H2 Gradient[512 x 1 x *]] [HLast Gradient[132 x 1 x *]] }
MPI Rank 0: 0x2f850c8: {[W2*H1 Gradient[132 x 1 x *]] }
MPI Rank 0: 0x2f9a008: {[MeanOfFeatures Value[363]] }
MPI Rank 0: 0x2fa8758: {[labels Value[132 x *]] }
MPI Rank 0: 0x2fa8838: {[CrossEntropyWithSoftmax Value[1]] }
MPI Rank 0: 0x2fa8c08: {[MVNormalizedFeatures Value[363 x *]] }
MPI Rank 0: 0x2fa8d78: {[LogOfPrior Value[132]] }
MPI Rank 0: 0x2faa058: {[B2 Value[132 x 1]] }
MPI Rank 0: 0x2fab098: {[W0*features Value[512 x *]] }
MPI Rank 0: 0x2fab2a8: {[W0 Gradient[512 x 363]] [W0*features+B0 Value[512 x 1 x *]] }
MPI Rank 0: 0x2fab468: {[H1 Value[512 x 1 x *]] [W0*features Gradient[512 x *]] }
MPI Rank 0: 0x2fab628: {[W0*features+B0 Gradient[512 x 1 x *]] [W1*H1 Value[512 x 1 x *]] }
MPI Rank 0: 0x2faeb58: {[W1 Value[512 x 512]] }
MPI Rank 0: 0x2fb1198: {[W1 Gradient[512 x 512]] [W1*H1+B1 Value[512 x 1 x *]] }
MPI Rank 0: 0x2fb1358: {[H2 Value[512 x 1 x *]] [W1*H1 Gradient[512 x 1 x *]] }
MPI Rank 0: 0x2fb1518: {[B0 Gradient[512 x 1]] [H1 Gradient[512 x 1 x *]] [W1*H1+B1 Gradient[512 x 1 x *]] [W2*H1 Value[132 x 1 x *]] }
MPI Rank 0: 0x2fb16d8: {[HLast Value[132 x 1 x *]] [W2 Gradient[132 x 512]] }
MPI Rank 0: 0x2fb8068: {[W0 Value[512 x 363]] }
MPI Rank 0: 0x2fb9fa8: {[B0 Value[512 x 1]] }
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 08/04/2016 13:59:44: Precomputing --> 3 PreCompute nodes found.
MPI Rank 0: 
MPI Rank 0: 08/04/2016 13:59:44: 	MeanOfFeatures = Mean()
MPI Rank 0: 08/04/2016 13:59:44: 	InvStdOfFeatures = InvStdDev()
MPI Rank 0: 08/04/2016 13:59:44: 	Prior = Mean()
MPI Rank 0: minibatchiterator: epoch 0: frames [0..252734] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 0: requiredata: determined feature kind as 33-dimensional 'USER' with frame shift 10.0 ms
MPI Rank 0: 
MPI Rank 0: 08/04/2016 13:59:45: Precomputing --> Completed.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 08/04/2016 13:59:46: Starting Epoch 1: learning rate per sample = 0.015625  effective momentum = 0.900000  momentum as time constant = 607.4 samples
MPI Rank 0: minibatchiterator: epoch 0: frames [0..20480] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 08/04/2016 13:59:46: Starting minibatch loop.
MPI Rank 0: 08/04/2016 13:59:46:  Epoch[ 1 of 5]-Minibatch[   1-   3, 0.94%]: CrossEntropyWithSoftmax = 4.70920643 * 192; EvalErrorPrediction = 0.89583333 * 192; time = 0.1024s; samplesPerSecond = 1875.4
MPI Rank 0: 08/04/2016 13:59:46:  Epoch[ 1 of 5]-Minibatch[   4-   6, 1.88%]: CrossEntropyWithSoftmax = 4.60784449 * 192; EvalErrorPrediction = 0.94270833 * 192; time = 0.0939s; samplesPerSecond = 2044.8
MPI Rank 0: 08/04/2016 13:59:46:  Epoch[ 1 of 5]-Minibatch[   7-   9, 2.81%]: CrossEntropyWithSoftmax = 4.61095082 * 192; EvalErrorPrediction = 0.94791667 * 192; time = 0.0933s; samplesPerSecond = 2058.0
MPI Rank 0: 08/04/2016 13:59:46:  Epoch[ 1 of 5]-Minibatch[  10-  12, 3.75%]: CrossEntropyWithSoftmax = 4.09305931 * 192; EvalErrorPrediction = 0.91145833 * 192; time = 0.0955s; samplesPerSecond = 2011.4
MPI Rank 0: 08/04/2016 13:59:46:  Epoch[ 1 of 5]-Minibatch[  13-  15, 4.69%]: CrossEntropyWithSoftmax = 4.40878469 * 192; EvalErrorPrediction = 0.89583333 * 192; time = 0.0970s; samplesPerSecond = 1979.9
MPI Rank 0: 08/04/2016 13:59:47:  Epoch[ 1 of 5]-Minibatch[  16-  18, 5.62%]: CrossEntropyWithSoftmax = 4.57596337 * 192; EvalErrorPrediction = 0.91145833 * 192; time = 0.0982s; samplesPerSecond = 1955.5
MPI Rank 0: 08/04/2016 13:59:47:  Epoch[ 1 of 5]-Minibatch[  19-  21, 6.56%]: CrossEntropyWithSoftmax = 4.14311031 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.0953s; samplesPerSecond = 2015.6
MPI Rank 0: 08/04/2016 13:59:47:  Epoch[ 1 of 5]-Minibatch[  22-  24, 7.50%]: CrossEntropyWithSoftmax = 4.02812598 * 192; EvalErrorPrediction = 0.93229167 * 192; time = 0.0937s; samplesPerSecond = 2049.1
MPI Rank 0: 08/04/2016 13:59:47:  Epoch[ 1 of 5]-Minibatch[  25-  27, 8.44%]: CrossEntropyWithSoftmax = 4.07670864 * 192; EvalErrorPrediction = 0.88020833 * 192; time = 0.0910s; samplesPerSecond = 2109.8
MPI Rank 0: 08/04/2016 13:59:47:  Epoch[ 1 of 5]-Minibatch[  28-  30, 9.38%]: CrossEntropyWithSoftmax = 3.88736773 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 0.0965s; samplesPerSecond = 1989.5
MPI Rank 0: 08/04/2016 13:59:47:  Epoch[ 1 of 5]-Minibatch[  31-  33, 10.31%]: CrossEntropyWithSoftmax = 4.03193814 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.0977s; samplesPerSecond = 1964.9
MPI Rank 0: 08/04/2016 13:59:47:  Epoch[ 1 of 5]-Minibatch[  34-  36, 11.25%]: CrossEntropyWithSoftmax = 3.93246604 * 192; EvalErrorPrediction = 0.86979167 * 192; time = 0.0943s; samplesPerSecond = 2036.6
MPI Rank 0: 08/04/2016 13:59:47:  Epoch[ 1 of 5]-Minibatch[  37-  39, 12.19%]: CrossEntropyWithSoftmax = 3.86120295 * 192; EvalErrorPrediction = 0.85937500 * 192; time = 0.0934s; samplesPerSecond = 2055.8
MPI Rank 0: 08/04/2016 13:59:47:  Epoch[ 1 of 5]-Minibatch[  40-  42, 13.12%]: CrossEntropyWithSoftmax = 3.83486880 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.0950s; samplesPerSecond = 2020.7
MPI Rank 0: 08/04/2016 13:59:47:  Epoch[ 1 of 5]-Minibatch[  43-  45, 14.06%]: CrossEntropyWithSoftmax = 3.71675518 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.0911s; samplesPerSecond = 2108.2
MPI Rank 0: 08/04/2016 13:59:47:  Epoch[ 1 of 5]-Minibatch[  46-  48, 15.00%]: CrossEntropyWithSoftmax = 3.73660037 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 0.0911s; samplesPerSecond = 2108.4
MPI Rank 0: 08/04/2016 13:59:48:  Epoch[ 1 of 5]-Minibatch[  49-  51, 15.94%]: CrossEntropyWithSoftmax = 3.78118858 * 192; EvalErrorPrediction = 0.85937500 * 192; time = 0.0973s; samplesPerSecond = 1973.8
MPI Rank 0: 08/04/2016 13:59:48:  Epoch[ 1 of 5]-Minibatch[  52-  54, 16.88%]: CrossEntropyWithSoftmax = 3.79572781 * 192; EvalErrorPrediction = 0.88541667 * 192; time = 0.0973s; samplesPerSecond = 1973.5
MPI Rank 0: 08/04/2016 13:59:48:  Epoch[ 1 of 5]-Minibatch[  55-  57, 17.81%]: CrossEntropyWithSoftmax = 3.90358622 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.0963s; samplesPerSecond = 1994.3
MPI Rank 0: 08/04/2016 13:59:48:  Epoch[ 1 of 5]-Minibatch[  58-  60, 18.75%]: CrossEntropyWithSoftmax = 3.63090328 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.0956s; samplesPerSecond = 2008.9
MPI Rank 0: 08/04/2016 13:59:48:  Epoch[ 1 of 5]-Minibatch[  61-  63, 19.69%]: CrossEntropyWithSoftmax = 3.62580837 * 192; EvalErrorPrediction = 0.82291667 * 192; time = 0.0967s; samplesPerSecond = 1984.8
MPI Rank 0: 08/04/2016 13:59:48:  Epoch[ 1 of 5]-Minibatch[  64-  66, 20.62%]: CrossEntropyWithSoftmax = 3.47291760 * 192; EvalErrorPrediction = 0.85937500 * 192; time = 0.0964s; samplesPerSecond = 1992.1
MPI Rank 0: 08/04/2016 13:59:48:  Epoch[ 1 of 5]-Minibatch[  67-  69, 21.56%]: CrossEntropyWithSoftmax = 3.72399026 * 192; EvalErrorPrediction = 0.87500000 * 192; time = 0.0940s; samplesPerSecond = 2042.2
MPI Rank 0: 08/04/2016 13:59:48:  Epoch[ 1 of 5]-Minibatch[  70-  72, 22.50%]: CrossEntropyWithSoftmax = 3.47020356 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.0964s; samplesPerSecond = 1991.4
MPI Rank 0: 08/04/2016 13:59:48:  Epoch[ 1 of 5]-Minibatch[  73-  75, 23.44%]: CrossEntropyWithSoftmax = 3.40404074 * 192; EvalErrorPrediction = 0.81250000 * 192; time = 0.1012s; samplesPerSecond = 1897.9
MPI Rank 0: 08/04/2016 13:59:48:  Epoch[ 1 of 5]-Minibatch[  76-  78, 24.38%]: CrossEntropyWithSoftmax = 3.46867863 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.0947s; samplesPerSecond = 2026.6
MPI Rank 0: 08/04/2016 13:59:49:  Epoch[ 1 of 5]-Minibatch[  79-  81, 25.31%]: CrossEntropyWithSoftmax = 3.41317765 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.0939s; samplesPerSecond = 2045.1
MPI Rank 0: 08/04/2016 13:59:49:  Epoch[ 1 of 5]-Minibatch[  82-  84, 26.25%]: CrossEntropyWithSoftmax = 3.58717210 * 192; EvalErrorPrediction = 0.83333333 * 192; time = 0.0952s; samplesPerSecond = 2016.9
MPI Rank 0: 08/04/2016 13:59:49:  Epoch[ 1 of 5]-Minibatch[  85-  87, 27.19%]: CrossEntropyWithSoftmax = 3.59741424 * 192; EvalErrorPrediction = 0.84375000 * 192; time = 0.1007s; samplesPerSecond = 1905.8
MPI Rank 0: 08/04/2016 13:59:49:  Epoch[ 1 of 5]-Minibatch[  88-  90, 28.12%]: CrossEntropyWithSoftmax = 3.29991790 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 0.0977s; samplesPerSecond = 1965.8
MPI Rank 0: 08/04/2016 13:59:49:  Epoch[ 1 of 5]-Minibatch[  91-  93, 29.06%]: CrossEntropyWithSoftmax = 3.56438034 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 0.0992s; samplesPerSecond = 1936.2
MPI Rank 0: 08/04/2016 13:59:49:  Epoch[ 1 of 5]-Minibatch[  94-  96, 30.00%]: CrossEntropyWithSoftmax = 3.37783684 * 192; EvalErrorPrediction = 0.79166667 * 192; time = 0.0974s; samplesPerSecond = 1972.1
MPI Rank 0: 08/04/2016 13:59:49:  Epoch[ 1 of 5]-Minibatch[  97-  99, 30.94%]: CrossEntropyWithSoftmax = 3.35391670 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 0.0945s; samplesPerSecond = 2031.5
MPI Rank 0: 08/04/2016 13:59:49:  Epoch[ 1 of 5]-Minibatch[ 100- 102, 31.87%]: CrossEntropyWithSoftmax = 3.46840752 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.0924s; samplesPerSecond = 2078.6
MPI Rank 0: 08/04/2016 13:59:49:  Epoch[ 1 of 5]-Minibatch[ 103- 105, 32.81%]: CrossEntropyWithSoftmax = 3.55972593 * 192; EvalErrorPrediction = 0.84375000 * 192; time = 0.0962s; samplesPerSecond = 1995.7
MPI Rank 0: 08/04/2016 13:59:49:  Epoch[ 1 of 5]-Minibatch[ 106- 108, 33.75%]: CrossEntropyWithSoftmax = 3.47243586 * 192; EvalErrorPrediction = 0.84895833 * 192; time = 0.0986s; samplesPerSecond = 1948.1
MPI Rank 0: 08/04/2016 13:59:50:  Epoch[ 1 of 5]-Minibatch[ 109- 111, 34.69%]: CrossEntropyWithSoftmax = 3.25316607 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.0981s; samplesPerSecond = 1957.4
MPI Rank 0: 08/04/2016 13:59:50:  Epoch[ 1 of 5]-Minibatch[ 112- 114, 35.62%]: CrossEntropyWithSoftmax = 3.17974454 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 0.0980s; samplesPerSecond = 1959.9
MPI Rank 0: 08/04/2016 13:59:50:  Epoch[ 1 of 5]-Minibatch[ 115- 117, 36.56%]: CrossEntropyWithSoftmax = 2.97420340 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 0.0969s; samplesPerSecond = 1981.4
MPI Rank 0: 08/04/2016 13:59:50:  Epoch[ 1 of 5]-Minibatch[ 118- 120, 37.50%]: CrossEntropyWithSoftmax = 3.24624427 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.0963s; samplesPerSecond = 1993.6
MPI Rank 0: 08/04/2016 13:59:50:  Epoch[ 1 of 5]-Minibatch[ 121- 123, 38.44%]: CrossEntropyWithSoftmax = 3.28392377 * 192; EvalErrorPrediction = 0.79166667 * 192; time = 0.0960s; samplesPerSecond = 1999.0
MPI Rank 0: 08/04/2016 13:59:50:  Epoch[ 1 of 5]-Minibatch[ 124- 126, 39.38%]: CrossEntropyWithSoftmax = 3.18008224 * 192; EvalErrorPrediction = 0.75000000 * 192; time = 0.0957s; samplesPerSecond = 2005.5
MPI Rank 0: 08/04/2016 13:59:50:  Epoch[ 1 of 5]-Minibatch[ 127- 129, 40.31%]: CrossEntropyWithSoftmax = 3.26600038 * 192; EvalErrorPrediction = 0.74479167 * 192; time = 0.0961s; samplesPerSecond = 1998.5
MPI Rank 0: 08/04/2016 13:59:50:  Epoch[ 1 of 5]-Minibatch[ 130- 132, 41.25%]: CrossEntropyWithSoftmax = 3.08953739 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 0.0959s; samplesPerSecond = 2002.1
MPI Rank 0: 08/04/2016 13:59:50:  Epoch[ 1 of 5]-Minibatch[ 133- 135, 42.19%]: CrossEntropyWithSoftmax = 3.37315997 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.0990s; samplesPerSecond = 1940.0
MPI Rank 0: 08/04/2016 13:59:50:  Epoch[ 1 of 5]-Minibatch[ 136- 138, 43.12%]: CrossEntropyWithSoftmax = 3.11331739 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 0.0961s; samplesPerSecond = 1998.7
MPI Rank 0: 08/04/2016 13:59:50:  Epoch[ 1 of 5]-Minibatch[ 139- 141, 44.06%]: CrossEntropyWithSoftmax = 2.91260127 * 192; EvalErrorPrediction = 0.71875000 * 192; time = 0.0972s; samplesPerSecond = 1975.0
MPI Rank 0: 08/04/2016 13:59:51:  Epoch[ 1 of 5]-Minibatch[ 142- 144, 45.00%]: CrossEntropyWithSoftmax = 3.15026888 * 192; EvalErrorPrediction = 0.75000000 * 192; time = 0.0929s; samplesPerSecond = 2067.3
MPI Rank 0: 08/04/2016 13:59:51:  Epoch[ 1 of 5]-Minibatch[ 145- 147, 45.94%]: CrossEntropyWithSoftmax = 3.29961883 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 0.0927s; samplesPerSecond = 2070.1
MPI Rank 0: 08/04/2016 13:59:51:  Epoch[ 1 of 5]-Minibatch[ 148- 150, 46.88%]: CrossEntropyWithSoftmax = 2.88463855 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0991s; samplesPerSecond = 1937.6
MPI Rank 0: 08/04/2016 13:59:51:  Epoch[ 1 of 5]-Minibatch[ 151- 153, 47.81%]: CrossEntropyWithSoftmax = 3.09493044 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.0959s; samplesPerSecond = 2001.8
MPI Rank 0: 08/04/2016 13:59:51:  Epoch[ 1 of 5]-Minibatch[ 154- 156, 48.75%]: CrossEntropyWithSoftmax = 3.10515973 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 0.0960s; samplesPerSecond = 1999.6
MPI Rank 0: 08/04/2016 13:59:51:  Epoch[ 1 of 5]-Minibatch[ 157- 159, 49.69%]: CrossEntropyWithSoftmax = 3.10126511 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.1018s; samplesPerSecond = 1886.0
MPI Rank 0: 08/04/2016 13:59:51:  Epoch[ 1 of 5]-Minibatch[ 160- 162, 50.62%]: CrossEntropyWithSoftmax = 3.19164437 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 0.0971s; samplesPerSecond = 1977.3
MPI Rank 0: 08/04/2016 13:59:51:  Epoch[ 1 of 5]-Minibatch[ 163- 165, 51.56%]: CrossEntropyWithSoftmax = 3.12721685 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0954s; samplesPerSecond = 2012.9
MPI Rank 0: 08/04/2016 13:59:51:  Epoch[ 1 of 5]-Minibatch[ 166- 168, 52.50%]: CrossEntropyWithSoftmax = 2.85268070 * 192; EvalErrorPrediction = 0.71875000 * 192; time = 0.0986s; samplesPerSecond = 1946.3
MPI Rank 0: 08/04/2016 13:59:51:  Epoch[ 1 of 5]-Minibatch[ 169- 171, 53.44%]: CrossEntropyWithSoftmax = 2.95117108 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 0.0986s; samplesPerSecond = 1946.6
MPI Rank 0: 08/04/2016 13:59:52:  Epoch[ 1 of 5]-Minibatch[ 172- 174, 54.37%]: CrossEntropyWithSoftmax = 3.01853847 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0967s; samplesPerSecond = 1985.2
MPI Rank 0: 08/04/2016 13:59:52:  Epoch[ 1 of 5]-Minibatch[ 175- 177, 55.31%]: CrossEntropyWithSoftmax = 2.79793207 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0969s; samplesPerSecond = 1981.5
MPI Rank 0: 08/04/2016 13:59:52:  Epoch[ 1 of 5]-Minibatch[ 178- 180, 56.25%]: CrossEntropyWithSoftmax = 2.80474548 * 192; EvalErrorPrediction = 0.72395833 * 192; time = 0.0959s; samplesPerSecond = 2001.6
MPI Rank 0: 08/04/2016 13:59:52:  Epoch[ 1 of 5]-Minibatch[ 181- 183, 57.19%]: CrossEntropyWithSoftmax = 2.83573879 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0985s; samplesPerSecond = 1948.8
MPI Rank 0: 08/04/2016 13:59:52:  Epoch[ 1 of 5]-Minibatch[ 184- 186, 58.13%]: CrossEntropyWithSoftmax = 2.90755999 * 192; EvalErrorPrediction = 0.71875000 * 192; time = 0.0973s; samplesPerSecond = 1974.0
MPI Rank 0: 08/04/2016 13:59:52:  Epoch[ 1 of 5]-Minibatch[ 187- 189, 59.06%]: CrossEntropyWithSoftmax = 2.93198251 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0940s; samplesPerSecond = 2042.9
MPI Rank 0: 08/04/2016 13:59:52:  Epoch[ 1 of 5]-Minibatch[ 190- 192, 60.00%]: CrossEntropyWithSoftmax = 2.93352694 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0959s; samplesPerSecond = 2001.2
MPI Rank 0: 08/04/2016 13:59:52:  Epoch[ 1 of 5]-Minibatch[ 193- 195, 60.94%]: CrossEntropyWithSoftmax = 2.70300458 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0951s; samplesPerSecond = 2018.7
MPI Rank 0: 08/04/2016 13:59:52:  Epoch[ 1 of 5]-Minibatch[ 196- 198, 61.88%]: CrossEntropyWithSoftmax = 2.68704401 * 192; EvalErrorPrediction = 0.71354167 * 192; time = 0.0985s; samplesPerSecond = 1950.0
MPI Rank 0: 08/04/2016 13:59:52:  Epoch[ 1 of 5]-Minibatch[ 199- 201, 62.81%]: CrossEntropyWithSoftmax = 2.70670616 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0991s; samplesPerSecond = 1938.1
MPI Rank 0: 08/04/2016 13:59:53:  Epoch[ 1 of 5]-Minibatch[ 202- 204, 63.75%]: CrossEntropyWithSoftmax = 2.91348027 * 192; EvalErrorPrediction = 0.72395833 * 192; time = 0.0979s; samplesPerSecond = 1961.9
MPI Rank 0: 08/04/2016 13:59:53:  Epoch[ 1 of 5]-Minibatch[ 205- 207, 64.69%]: CrossEntropyWithSoftmax = 2.79701150 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.0983s; samplesPerSecond = 1952.5
MPI Rank 0: 08/04/2016 13:59:53:  Epoch[ 1 of 5]-Minibatch[ 208- 210, 65.62%]: CrossEntropyWithSoftmax = 2.83905155 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.0947s; samplesPerSecond = 2027.5
MPI Rank 0: 08/04/2016 13:59:53:  Epoch[ 1 of 5]-Minibatch[ 211- 213, 66.56%]: CrossEntropyWithSoftmax = 2.82919358 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0935s; samplesPerSecond = 2053.1
MPI Rank 0: 08/04/2016 13:59:53:  Epoch[ 1 of 5]-Minibatch[ 214- 216, 67.50%]: CrossEntropyWithSoftmax = 2.76393372 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0935s; samplesPerSecond = 2053.6
MPI Rank 0: 08/04/2016 13:59:53:  Epoch[ 1 of 5]-Minibatch[ 217- 219, 68.44%]: CrossEntropyWithSoftmax = 2.43306156 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0993s; samplesPerSecond = 1933.4
MPI Rank 0: 08/04/2016 13:59:53:  Epoch[ 1 of 5]-Minibatch[ 220- 222, 69.38%]: CrossEntropyWithSoftmax = 2.51026989 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.1029s; samplesPerSecond = 1866.7
MPI Rank 0: 08/04/2016 13:59:53:  Epoch[ 1 of 5]-Minibatch[ 223- 225, 70.31%]: CrossEntropyWithSoftmax = 2.62462443 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.0998s; samplesPerSecond = 1924.6
MPI Rank 0: 08/04/2016 13:59:53:  Epoch[ 1 of 5]-Minibatch[ 226- 228, 71.25%]: CrossEntropyWithSoftmax = 2.64347349 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0954s; samplesPerSecond = 2011.9
MPI Rank 0: 08/04/2016 13:59:53:  Epoch[ 1 of 5]-Minibatch[ 229- 231, 72.19%]: CrossEntropyWithSoftmax = 2.56077705 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0986s; samplesPerSecond = 1947.7
MPI Rank 0: 08/04/2016 13:59:54:  Epoch[ 1 of 5]-Minibatch[ 232- 234, 73.12%]: CrossEntropyWithSoftmax = 2.48843298 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.1010s; samplesPerSecond = 1901.2
MPI Rank 0: 08/04/2016 13:59:54:  Epoch[ 1 of 5]-Minibatch[ 235- 237, 74.06%]: CrossEntropyWithSoftmax = 2.59903028 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.0990s; samplesPerSecond = 1939.9
MPI Rank 0: 08/04/2016 13:59:54:  Epoch[ 1 of 5]-Minibatch[ 238- 240, 75.00%]: CrossEntropyWithSoftmax = 2.27900104 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0981s; samplesPerSecond = 1956.4
MPI Rank 0: 08/04/2016 13:59:54:  Epoch[ 1 of 5]-Minibatch[ 241- 243, 75.94%]: CrossEntropyWithSoftmax = 2.61342893 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.1041s; samplesPerSecond = 1844.4
MPI Rank 0: 08/04/2016 13:59:54:  Epoch[ 1 of 5]-Minibatch[ 244- 246, 76.88%]: CrossEntropyWithSoftmax = 2.53489538 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0956s; samplesPerSecond = 2007.8
MPI Rank 0: 08/04/2016 13:59:54:  Epoch[ 1 of 5]-Minibatch[ 247- 249, 77.81%]: CrossEntropyWithSoftmax = 2.36449892 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0944s; samplesPerSecond = 2034.5
MPI Rank 0: 08/04/2016 13:59:54:  Epoch[ 1 of 5]-Minibatch[ 250- 252, 78.75%]: CrossEntropyWithSoftmax = 2.53116927 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0996s; samplesPerSecond = 1928.6
MPI Rank 0: 08/04/2016 13:59:54:  Epoch[ 1 of 5]-Minibatch[ 253- 255, 79.69%]: CrossEntropyWithSoftmax = 2.36655920 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0978s; samplesPerSecond = 1963.6
MPI Rank 0: 08/04/2016 13:59:54:  Epoch[ 1 of 5]-Minibatch[ 256- 258, 80.62%]: CrossEntropyWithSoftmax = 2.58033808 * 192; EvalErrorPrediction = 0.67187500 * 192; time = 0.0963s; samplesPerSecond = 1993.6
MPI Rank 0: 08/04/2016 13:59:54:  Epoch[ 1 of 5]-Minibatch[ 259- 261, 81.56%]: CrossEntropyWithSoftmax = 2.35839328 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.0985s; samplesPerSecond = 1949.0
MPI Rank 0: 08/04/2016 13:59:54:  Epoch[ 1 of 5]-Minibatch[ 262- 264, 82.50%]: CrossEntropyWithSoftmax = 2.42827337 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.0990s; samplesPerSecond = 1939.0
MPI Rank 0: 08/04/2016 13:59:55:  Epoch[ 1 of 5]-Minibatch[ 265- 267, 83.44%]: CrossEntropyWithSoftmax = 2.11653966 * 192; EvalErrorPrediction = 0.57291667 * 192; time = 0.0949s; samplesPerSecond = 2024.1
MPI Rank 0: 08/04/2016 13:59:55:  Epoch[ 1 of 5]-Minibatch[ 268- 270, 84.38%]: CrossEntropyWithSoftmax = 2.39354487 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0942s; samplesPerSecond = 2038.8
MPI Rank 0: 08/04/2016 13:59:55:  Epoch[ 1 of 5]-Minibatch[ 271- 273, 85.31%]: CrossEntropyWithSoftmax = 2.45269307 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0967s; samplesPerSecond = 1984.6
MPI Rank 0: 08/04/2016 13:59:55:  Epoch[ 1 of 5]-Minibatch[ 274- 276, 86.25%]: CrossEntropyWithSoftmax = 2.73470311 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0976s; samplesPerSecond = 1966.8
MPI Rank 0: 08/04/2016 13:59:55:  Epoch[ 1 of 5]-Minibatch[ 277- 279, 87.19%]: CrossEntropyWithSoftmax = 2.18772407 * 192; EvalErrorPrediction = 0.57812500 * 192; time = 0.0934s; samplesPerSecond = 2055.2
MPI Rank 0: 08/04/2016 13:59:55:  Epoch[ 1 of 5]-Minibatch[ 280- 282, 88.12%]: CrossEntropyWithSoftmax = 2.50104321 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0957s; samplesPerSecond = 2007.2
MPI Rank 0: 08/04/2016 13:59:55:  Epoch[ 1 of 5]-Minibatch[ 283- 285, 89.06%]: CrossEntropyWithSoftmax = 2.44434220 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0975s; samplesPerSecond = 1969.5
MPI Rank 0: 08/04/2016 13:59:55:  Epoch[ 1 of 5]-Minibatch[ 286- 288, 90.00%]: CrossEntropyWithSoftmax = 2.49242443 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0993s; samplesPerSecond = 1934.2
MPI Rank 0: 08/04/2016 13:59:55:  Epoch[ 1 of 5]-Minibatch[ 289- 291, 90.94%]: CrossEntropyWithSoftmax = 2.25157853 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.0949s; samplesPerSecond = 2022.2
MPI Rank 0: 08/04/2016 13:59:55:  Epoch[ 1 of 5]-Minibatch[ 292- 294, 91.88%]: CrossEntropyWithSoftmax = 2.15752083 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0957s; samplesPerSecond = 2006.0
MPI Rank 0: 08/04/2016 13:59:56:  Epoch[ 1 of 5]-Minibatch[ 295- 297, 92.81%]: CrossEntropyWithSoftmax = 2.11472724 * 192; EvalErrorPrediction = 0.60937500 * 192; time = 0.0949s; samplesPerSecond = 2022.4
MPI Rank 0: 08/04/2016 13:59:56:  Epoch[ 1 of 5]-Minibatch[ 298- 300, 93.75%]: CrossEntropyWithSoftmax = 2.43116544 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0961s; samplesPerSecond = 1997.3
MPI Rank 0: 08/04/2016 13:59:56:  Epoch[ 1 of 5]-Minibatch[ 301- 303, 94.69%]: CrossEntropyWithSoftmax = 2.32073249 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0966s; samplesPerSecond = 1988.5
MPI Rank 0: 08/04/2016 13:59:56:  Epoch[ 1 of 5]-Minibatch[ 304- 306, 95.62%]: CrossEntropyWithSoftmax = 2.45635771 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0962s; samplesPerSecond = 1995.3
MPI Rank 0: 08/04/2016 13:59:56:  Epoch[ 1 of 5]-Minibatch[ 307- 309, 96.56%]: CrossEntropyWithSoftmax = 2.25293186 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0945s; samplesPerSecond = 2031.2
MPI Rank 0: 08/04/2016 13:59:56:  Epoch[ 1 of 5]-Minibatch[ 310- 312, 97.50%]: CrossEntropyWithSoftmax = 2.23129177 * 192; EvalErrorPrediction = 0.57812500 * 192; time = 0.0959s; samplesPerSecond = 2001.8
MPI Rank 0: 08/04/2016 13:59:56:  Epoch[ 1 of 5]-Minibatch[ 313- 315, 98.44%]: CrossEntropyWithSoftmax = 2.19287828 * 192; EvalErrorPrediction = 0.57291667 * 192; time = 0.0942s; samplesPerSecond = 2037.2
MPI Rank 0: 08/04/2016 13:59:56:  Epoch[ 1 of 5]-Minibatch[ 316- 318, 99.38%]: CrossEntropyWithSoftmax = 2.28711442 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.1000s; samplesPerSecond = 1920.4
MPI Rank 0: 08/04/2016 13:59:56: Finished Epoch[ 1 of 5]: [Training] CrossEntropyWithSoftmax = 3.08229172 * 20480; EvalErrorPrediction = 0.74091797 * 20480; totalSamplesSeen = 20480; learningRatePerSample = 0.015625; epochTime=10.3145s
MPI Rank 0: 08/04/2016 13:59:56: SGD: Saving checkpoint model '/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn.1'
MPI Rank 0: 
MPI Rank 0: 08/04/2016 13:59:56: Starting Epoch 2: learning rate per sample = 0.001953  effective momentum = 0.656119  momentum as time constant = 607.5 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 1: frames [20480..40960] (first utterance at frame 20480), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 08/04/2016 13:59:56: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 08/04/2016 13:59:57:  Epoch[ 2 of 5]-Minibatch[   1-   3, 3.75%]: CrossEntropyWithSoftmax = 2.16615081 * 497; EvalErrorPrediction = 0.59557344 * 497; time = 0.2641s; samplesPerSecond = 1881.6
MPI Rank 0: 08/04/2016 13:59:57:  Epoch[ 2 of 5]-Minibatch[   4-   6, 7.50%]: CrossEntropyWithSoftmax = 2.16237721 * 513; EvalErrorPrediction = 0.59454191 * 513; time = 0.2370s; samplesPerSecond = 2164.7
MPI Rank 0: 08/04/2016 13:59:57:  Epoch[ 2 of 5]-Minibatch[   7-   9, 11.25%]: CrossEntropyWithSoftmax = 2.26483665 * 488; EvalErrorPrediction = 0.61885246 * 488; time = 0.2255s; samplesPerSecond = 2164.4
MPI Rank 0: 08/04/2016 13:59:57:  Epoch[ 2 of 5]-Minibatch[  10-  12, 15.00%]: CrossEntropyWithSoftmax = 2.09041395 * 486; EvalErrorPrediction = 0.57818930 * 486; time = 0.2202s; samplesPerSecond = 2206.8
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.01-seconds latency this time; accumulated time on sync point = 0.01 seconds , average latency = 0.01 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     1.05 seconds since last report (0.00 seconds on comm.); 4262 samples processed by 2 workers (2142 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 4.07k samplesPerSecond , throughputPerWorker = 2.04k samplesPerSecond
MPI Rank 0: 08/04/2016 13:59:58:  Epoch[ 2 of 5]-Minibatch[  13-  15, 18.75%]: CrossEntropyWithSoftmax = 2.22047164 * 478; EvalErrorPrediction = 0.61715481 * 478; time = 0.2423s; samplesPerSecond = 1972.7
MPI Rank 0: 08/04/2016 13:59:58:  Epoch[ 2 of 5]-Minibatch[  16-  18, 22.50%]: CrossEntropyWithSoftmax = 2.19803518 * 497; EvalErrorPrediction = 0.61368209 * 497; time = 0.2349s; samplesPerSecond = 2115.5
MPI Rank 0: 08/04/2016 13:59:58:  Epoch[ 2 of 5]-Minibatch[  19-  21, 26.25%]: CrossEntropyWithSoftmax = 2.27169447 * 488; EvalErrorPrediction = 0.61065574 * 488; time = 0.2215s; samplesPerSecond = 2203.0
MPI Rank 0: 08/04/2016 13:59:58:  Epoch[ 2 of 5]-Minibatch[  22-  24, 30.00%]: CrossEntropyWithSoftmax = 1.98020888 * 480; EvalErrorPrediction = 0.55416667 * 480; time = 0.2175s; samplesPerSecond = 2206.4
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.04-seconds latency this time; accumulated time on sync point = 0.05 seconds , average latency = 0.03 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     1.03 seconds since last report (0.00 seconds on comm.); 4236 samples processed by 2 workers (2113 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 4.11k samplesPerSecond , throughputPerWorker = 2.05k samplesPerSecond
MPI Rank 0: 08/04/2016 13:59:58:  Epoch[ 2 of 5]-Minibatch[  25-  27, 33.75%]: CrossEntropyWithSoftmax = 1.94861993 * 496; EvalErrorPrediction = 0.52822581 * 496; time = 0.2897s; samplesPerSecond = 1712.3
MPI Rank 0: 08/04/2016 13:59:59:  Epoch[ 2 of 5]-Minibatch[  28-  30, 37.50%]: CrossEntropyWithSoftmax = 2.05334093 * 474; EvalErrorPrediction = 0.54852321 * 474; time = 0.2160s; samplesPerSecond = 2194.8
MPI Rank 0: 08/04/2016 13:59:59:  Epoch[ 2 of 5]-Minibatch[  31-  33, 41.25%]: CrossEntropyWithSoftmax = 2.10952132 * 475; EvalErrorPrediction = 0.56421053 * 475; time = 0.2239s; samplesPerSecond = 2121.6
MPI Rank 0: 08/04/2016 13:59:59:  Epoch[ 2 of 5]-Minibatch[  34-  36, 45.00%]: CrossEntropyWithSoftmax = 2.01133621 * 500; EvalErrorPrediction = 0.54600000 * 500; time = 0.2284s; samplesPerSecond = 2188.9
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.01-seconds latency this time; accumulated time on sync point = 0.06 seconds , average latency = 0.02 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     1.00 seconds since last report (0.00 seconds on comm.); 4175 samples processed by 2 workers (2109 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 4.18k samplesPerSecond , throughputPerWorker = 2.09k samplesPerSecond
MPI Rank 0: 08/04/2016 13:59:59:  Epoch[ 2 of 5]-Minibatch[  37-  39, 48.75%]: CrossEntropyWithSoftmax = 2.05174984 * 492; EvalErrorPrediction = 0.55081301 * 492; time = 0.2489s; samplesPerSecond = 1976.8
MPI Rank 0: 08/04/2016 14:00:00:  Epoch[ 2 of 5]-Minibatch[  40-  42, 52.50%]: CrossEntropyWithSoftmax = 1.98454115 * 505; EvalErrorPrediction = 0.53861386 * 505; time = 0.2283s; samplesPerSecond = 2212.3
MPI Rank 0: 08/04/2016 14:00:00:  Epoch[ 2 of 5]-Minibatch[  43-  45, 56.25%]: CrossEntropyWithSoftmax = 1.95312976 * 495; EvalErrorPrediction = 0.55151515 * 495; time = 0.2276s; samplesPerSecond = 2174.5
MPI Rank 0: 08/04/2016 14:00:00:  Epoch[ 2 of 5]-Minibatch[  46-  48, 60.00%]: CrossEntropyWithSoftmax = 1.99960788 * 510; EvalErrorPrediction = 0.56862745 * 510; time = 0.2271s; samplesPerSecond = 2245.4
MPI Rank 0: 08/04/2016 14:00:00:  Epoch[ 2 of 5]-Minibatch[  49-  51, 63.75%]: CrossEntropyWithSoftmax = 1.99051420 * 471; EvalErrorPrediction = 0.52016985 * 471; time = 0.2089s; samplesPerSecond = 2254.7
MPI Rank 0: 08/04/2016 14:00:01:  Epoch[ 2 of 5]-Minibatch[  52-  54, 67.50%]: CrossEntropyWithSoftmax = 1.99139878 * 480; EvalErrorPrediction = 0.55625000 * 480; time = 0.2144s; samplesPerSecond = 2238.3
MPI Rank 0: 08/04/2016 14:00:01:  Epoch[ 2 of 5]-Minibatch[  55-  57, 71.25%]: CrossEntropyWithSoftmax = 1.96956472 * 483; EvalErrorPrediction = 0.52380952 * 483; time = 0.2126s; samplesPerSecond = 2271.5
MPI Rank 0: 08/04/2016 14:00:01:  Epoch[ 2 of 5]-Minibatch[  58-  60, 75.00%]: CrossEntropyWithSoftmax = 1.83049181 * 501; EvalErrorPrediction = 0.47504990 * 501; time = 0.2298s; samplesPerSecond = 2179.8
MPI Rank 0: 08/04/2016 14:00:01:  Epoch[ 2 of 5]-Minibatch[  61-  63, 78.75%]: CrossEntropyWithSoftmax = 1.98627610 * 491; EvalErrorPrediction = 0.53156823 * 491; time = 0.2152s; samplesPerSecond = 2281.5
MPI Rank 0: 08/04/2016 14:00:01:  Epoch[ 2 of 5]-Minibatch[  64-  66, 82.50%]: CrossEntropyWithSoftmax = 1.96691129 * 476; EvalErrorPrediction = 0.56092437 * 476; time = 0.2126s; samplesPerSecond = 2238.8
MPI Rank 0: 08/04/2016 14:00:02:  Epoch[ 2 of 5]-Minibatch[  67-  69, 86.25%]: CrossEntropyWithSoftmax = 2.01426883 * 484; EvalErrorPrediction = 0.58264463 * 484; time = 0.2202s; samplesPerSecond = 2197.7
MPI Rank 0: 08/04/2016 14:00:02:  Epoch[ 2 of 5]-Minibatch[  70-  72, 90.00%]: CrossEntropyWithSoftmax = 1.95322288 * 470; EvalErrorPrediction = 0.53191489 * 470; time = 0.2107s; samplesPerSecond = 2230.3
MPI Rank 0: 08/04/2016 14:00:02:  Epoch[ 2 of 5]-Minibatch[  73-  75, 93.75%]: CrossEntropyWithSoftmax = 1.94664964 * 477; EvalErrorPrediction = 0.53039832 * 477; time = 0.2091s; samplesPerSecond = 2281.7
MPI Rank 0: 08/04/2016 14:00:02:  Epoch[ 2 of 5]-Minibatch[  76-  78, 97.50%]: CrossEntropyWithSoftmax = 1.96887345 * 484; EvalErrorPrediction = 0.53512397 * 484; time = 0.2168s; samplesPerSecond = 2232.7
MPI Rank 0: 08/04/2016 14:00:02:  Epoch[ 2 of 5]-Minibatch[  79-  81, 101.25%]: CrossEntropyWithSoftmax = 1.96106913 * 340; EvalErrorPrediction = 0.51764706 * 340; time = 0.1469s; samplesPerSecond = 2314.8
MPI Rank 0: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.06 seconds , average latency = 0.02 seconds
MPI Rank 0: 		(model aggregation stats) 4-th sync:     3.00 seconds since last report (0.00 seconds on comm.); 7807 samples processed by 2 workers (6667 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 2.61k samplesPerSecond , throughputPerWorker = 1.30k samplesPerSecond
MPI Rank 0: 08/04/2016 14:00:02: Finished Epoch[ 2 of 5]: [Training] CrossEntropyWithSoftmax = 2.05119424 * 20480; EvalErrorPrediction = 0.55971680 * 20480; totalSamplesSeen = 40960; learningRatePerSample = 0.001953125; epochTime=6.07269s
MPI Rank 0: 08/04/2016 14:00:02: SGD: Saving checkpoint model '/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn.2'
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:02: Starting Epoch 3: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 2: frames [40960..61440] (first utterance at frame 40960), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:02: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 08/04/2016 14:00:03:  Epoch[ 3 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.96030577 * 1922; EvalErrorPrediction = 0.55359001 * 1922; time = 0.9210s; samplesPerSecond = 2087.0
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     1.26 seconds since last report (0.00 seconds on comm.); 4878 samples processed by 2 workers (2584 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 3.88k samplesPerSecond , throughputPerWorker = 1.94k samplesPerSecond
MPI Rank 0: 08/04/2016 14:00:04:  Epoch[ 3 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.98187671 * 1928; EvalErrorPrediction = 0.54771784 * 1928; time = 0.8722s; samplesPerSecond = 2210.5
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     1.17 seconds since last report (0.00 seconds on comm.); 4878 samples processed by 2 workers (2565 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 4.17k samplesPerSecond , throughputPerWorker = 2.09k samplesPerSecond
MPI Rank 0: 08/04/2016 14:00:05:  Epoch[ 3 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.94062419 * 1914; EvalErrorPrediction = 0.54858934 * 1914; time = 0.8848s; samplesPerSecond = 2163.3
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     1.09 seconds since last report (0.00 seconds on comm.); 4809 samples processed by 2 workers (2532 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 4.42k samplesPerSecond , throughputPerWorker = 2.21k samplesPerSecond
MPI Rank 0: 08/04/2016 14:00:06:  Epoch[ 3 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.97063855 * 1917; EvalErrorPrediction = 0.55503391 * 1917; time = 0.8320s; samplesPerSecond = 2304.0
MPI Rank 0: 08/04/2016 14:00:07:  Epoch[ 3 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.95625583 * 1938; EvalErrorPrediction = 0.54592363 * 1938; time = 0.8145s; samplesPerSecond = 2379.3
MPI Rank 0: 08/04/2016 14:00:08:  Epoch[ 3 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.96175081 * 1929; EvalErrorPrediction = 0.55106273 * 1929; time = 0.8410s; samplesPerSecond = 2293.8
MPI Rank 0: 08/04/2016 14:00:08:  Epoch[ 3 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.89425862 * 1278; EvalErrorPrediction = 0.50938967 * 1278; time = 0.5406s; samplesPerSecond = 2364.0
MPI Rank 0: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 4-th sync:     2.21 seconds since last report (0.00 seconds on comm.); 5915 samples processed by 2 workers (5145 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 2.68k samplesPerSecond , throughputPerWorker = 1.34k samplesPerSecond
MPI Rank 0: 08/04/2016 14:00:08: Finished Epoch[ 3 of 5]: [Training] CrossEntropyWithSoftmax = 1.95181074 * 20480; EvalErrorPrediction = 0.54453125 * 20480; totalSamplesSeen = 61440; learningRatePerSample = 9.7656251e-05; epochTime=5.72458s
MPI Rank 0: 08/04/2016 14:00:08: SGD: Saving checkpoint model '/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn.3'
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:08: Starting Epoch 4: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 3: frames [61440..81920] (first utterance at frame 61440), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:08: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 08/04/2016 14:00:09:  Epoch[ 4 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.93926104 * 1879; EvalErrorPrediction = 0.53592336 * 1879; time = 0.8306s; samplesPerSecond = 2262.3
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     1.12 seconds since last report (0.00 seconds on comm.); 4812 samples processed by 2 workers (2506 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 4.31k samplesPerSecond , throughputPerWorker = 2.15k samplesPerSecond
MPI Rank 0: 08/04/2016 14:00:10:  Epoch[ 4 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.92478713 * 1959; EvalErrorPrediction = 0.51965288 * 1959; time = 0.8822s; samplesPerSecond = 2220.7
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     1.16 seconds since last report (0.00 seconds on comm.); 4977 samples processed by 2 workers (2595 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 4.28k samplesPerSecond , throughputPerWorker = 2.14k samplesPerSecond
MPI Rank 0: 08/04/2016 14:00:11:  Epoch[ 4 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.85414973 * 1902; EvalErrorPrediction = 0.50893796 * 1902; time = 0.8322s; samplesPerSecond = 2285.6
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     1.10 seconds since last report (0.00 seconds on comm.); 4887 samples processed by 2 workers (2499 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 4.46k samplesPerSecond , throughputPerWorker = 2.23k samplesPerSecond
MPI Rank 0: 08/04/2016 14:00:12:  Epoch[ 4 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.99213843 * 1860; EvalErrorPrediction = 0.55268817 * 1860; time = 0.8268s; samplesPerSecond = 2249.6
MPI Rank 0: 08/04/2016 14:00:12:  Epoch[ 4 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.89510547 * 1881; EvalErrorPrediction = 0.51727804 * 1881; time = 0.8069s; samplesPerSecond = 2331.2
MPI Rank 0: 08/04/2016 14:00:13:  Epoch[ 4 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.96347699 * 1875; EvalErrorPrediction = 0.53653333 * 1875; time = 0.7920s; samplesPerSecond = 2367.5
MPI Rank 0: 08/04/2016 14:00:14:  Epoch[ 4 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.93766965 * 1232; EvalErrorPrediction = 0.53246753 * 1232; time = 0.5148s; samplesPerSecond = 2393.2
MPI Rank 0: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 4-th sync:     2.13 seconds since last report (0.00 seconds on comm.); 5804 samples processed by 2 workers (4988 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 2.73k samplesPerSecond , throughputPerWorker = 1.36k samplesPerSecond
MPI Rank 0: 08/04/2016 14:00:14: Finished Epoch[ 4 of 5]: [Training] CrossEntropyWithSoftmax = 1.91450159 * 20480; EvalErrorPrediction = 0.52583008 * 20480; totalSamplesSeen = 81920; learningRatePerSample = 9.7656251e-05; epochTime=5.5058s
MPI Rank 0: 08/04/2016 14:00:14: SGD: Saving checkpoint model '/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn.4'
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:14: Starting Epoch 5: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 4: frames [81920..102400] (first utterance at frame 81920), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:14: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 08/04/2016 14:00:15:  Epoch[ 5 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.87092451 * 1856; EvalErrorPrediction = 0.51993534 * 1856; time = 0.8142s; samplesPerSecond = 2279.5
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     1.11 seconds since last report (0.00 seconds on comm.); 4910 samples processed by 2 workers (2502 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 4.43k samplesPerSecond , throughputPerWorker = 2.21k samplesPerSecond
MPI Rank 0: 08/04/2016 14:00:16:  Epoch[ 5 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.82916434 * 1880; EvalErrorPrediction = 0.51329787 * 1880; time = 0.8074s; samplesPerSecond = 2328.4
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     1.07 seconds since last report (0.00 seconds on comm.); 4540 samples processed by 2 workers (2481 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 4.25k samplesPerSecond , throughputPerWorker = 2.12k samplesPerSecond
MPI Rank 0: 08/04/2016 14:00:16:  Epoch[ 5 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.91981119 * 1856; EvalErrorPrediction = 0.54094828 * 1856; time = 0.8140s; samplesPerSecond = 2280.0
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.01-seconds latency this time; accumulated time on sync point = 0.01 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     1.05 seconds since last report (0.00 seconds on comm.); 4881 samples processed by 2 workers (2454 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 4.67k samplesPerSecond , throughputPerWorker = 2.33k samplesPerSecond
MPI Rank 0: 08/04/2016 14:00:17:  Epoch[ 5 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.87072535 * 1845; EvalErrorPrediction = 0.51707317 * 1845; time = 0.7826s; samplesPerSecond = 2357.5
MPI Rank 0: 08/04/2016 14:00:18:  Epoch[ 5 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.84530826 * 1841; EvalErrorPrediction = 0.49755568 * 1841; time = 0.7680s; samplesPerSecond = 2397.1
MPI Rank 0: 08/04/2016 14:00:19:  Epoch[ 5 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.84259444 * 1897; EvalErrorPrediction = 0.51713231 * 1897; time = 0.8066s; samplesPerSecond = 2351.9
MPI Rank 0: 08/04/2016 14:00:19:  Epoch[ 5 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.86493232 * 1212; EvalErrorPrediction = 0.50165017 * 1212; time = 0.5072s; samplesPerSecond = 2389.8
MPI Rank 0: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.01 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 4-th sync:     2.10 seconds since last report (0.00 seconds on comm.); 6149 samples processed by 2 workers (4950 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 2.93k samplesPerSecond , throughputPerWorker = 1.47k samplesPerSecond
MPI Rank 0: 08/04/2016 14:00:19: Finished Epoch[ 5 of 5]: [Training] CrossEntropyWithSoftmax = 1.87419727 * 20480; EvalErrorPrediction = 0.52294922 * 20480; totalSamplesSeen = 102400; learningRatePerSample = 9.7656251e-05; epochTime=5.31871s
MPI Rank 0: 08/04/2016 14:00:19: SGD: Saving checkpoint model '/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn'
MPI Rank 0: 08/04/2016 14:00:19: CNTKCommandTrainEnd: speechTrain
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:19: Action "train" complete.
MPI Rank 0: 
MPI Rank 0: 08/04/2016 14:00:19: __COMPLETED__
MPI Rank 0: ~MPIWrapper
MPI Rank 1: 08/04/2016 13:59:43: -------------------------------------------------------------------
MPI Rank 1: 08/04/2016 13:59:43: Build info: 
MPI Rank 1: 
MPI Rank 1: 08/04/2016 13:59:43: 		Built time: Aug  4 2016 13:07:13
MPI Rank 1: 08/04/2016 13:59:43: 		Last modified date: Thu Aug  4 10:38:25 2016
MPI Rank 1: 08/04/2016 13:59:43: 		Build type: release
MPI Rank 1: 08/04/2016 13:59:43: 		Build target: GPU
MPI Rank 1: 08/04/2016 13:59:43: 		With 1bit-SGD: yes
MPI Rank 1: 08/04/2016 13:59:43: 		Math lib: mkl
MPI Rank 1: 08/04/2016 13:59:43: 		CUDA_PATH: /usr/local/cuda-7.5
MPI Rank 1: 08/04/2016 13:59:43: 		CUB_PATH: /usr/local/cub-1.4.1
MPI Rank 1: 08/04/2016 13:59:43: 		CUDNN_PATH: /usr/local/cudnn-4.0
MPI Rank 1: 08/04/2016 13:59:43: 		Build Branch: HEAD
MPI Rank 1: 08/04/2016 13:59:43: 		Build SHA1: 0f61695dfc335f2406284d335678f57c215e6e9c
MPI Rank 1: 08/04/2016 13:59:43: 		Built by philly on ee6c20c358b8
MPI Rank 1: 08/04/2016 13:59:43: 		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
MPI Rank 1: 08/04/2016 13:59:43: -------------------------------------------------------------------
MPI Rank 1: 08/04/2016 13:59:44: -------------------------------------------------------------------
MPI Rank 1: 08/04/2016 13:59:44: GPU info:
MPI Rank 1: 
MPI Rank 1: 08/04/2016 13:59:44: 		Device[0]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
MPI Rank 1: 08/04/2016 13:59:44: 		Device[1]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
MPI Rank 1: 08/04/2016 13:59:44: 		Device[2]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
MPI Rank 1: 08/04/2016 13:59:44: -------------------------------------------------------------------
MPI Rank 1: 
MPI Rank 1: 08/04/2016 13:59:44: Running on localhost at 2016/08/04 13:59:44
MPI Rank 1: 08/04/2016 13:59:44: Command line: 
MPI Rank 1: /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/1bitsgd/release/bin/cntk  configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/../ParallelBM/cntk.cntk  currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data  RunDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu  DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data  ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..  OutputDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu  DeviceId=-1  timestamping=true  numCPUThreads=12  precision=double  speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]  stderr=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu/stderr
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 08/04/2016 13:59:44: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: 08/04/2016 13:59:44: precision = "float"
MPI Rank 1: command = speechTrain
MPI Rank 1: deviceId = $DeviceId$
MPI Rank 1: parallelTrain = true
MPI Rank 1: speechTrain = [
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "$RunDir$/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = $DeviceId$
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 blockSizePerWorker=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "$DataDir$/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "$DataDir$/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ]
MPI Rank 1: currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: RunDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu
MPI Rank 1: DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 1: OutputDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu
MPI Rank 1: DeviceId=-1
MPI Rank 1: timestamping=true
MPI Rank 1: numCPUThreads=12
MPI Rank 1: precision=double
MPI Rank 1: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: stderr=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu/stderr
MPI Rank 1: 
MPI Rank 1: 08/04/2016 13:59:44: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 
MPI Rank 1: 08/04/2016 13:59:44: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: 08/04/2016 13:59:44: precision = "float"
MPI Rank 1: command = speechTrain
MPI Rank 1: deviceId = -1
MPI Rank 1: parallelTrain = true
MPI Rank 1: speechTrain = [
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = -1
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 blockSizePerWorker=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ]
MPI Rank 1: currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: RunDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu
MPI Rank 1: DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 1: OutputDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu
MPI Rank 1: DeviceId=-1
MPI Rank 1: timestamping=true
MPI Rank 1: numCPUThreads=12
MPI Rank 1: precision=double
MPI Rank 1: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: stderr=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu/stderr
MPI Rank 1: 
MPI Rank 1: 08/04/2016 13:59:44: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 
MPI Rank 1: 08/04/2016 13:59:44: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: configparameters: cntk.cntk:command=speechTrain
MPI Rank 1: configparameters: cntk.cntk:ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 1: configparameters: cntk.cntk:currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: configparameters: cntk.cntk:DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: configparameters: cntk.cntk:deviceId=-1
MPI Rank 1: configparameters: cntk.cntk:numCPUThreads=12
MPI Rank 1: configparameters: cntk.cntk:OutputDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu
MPI Rank 1: configparameters: cntk.cntk:parallelTrain=true
MPI Rank 1: configparameters: cntk.cntk:precision=double
MPI Rank 1: configparameters: cntk.cntk:RunDir=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu
MPI Rank 1: configparameters: cntk.cntk:speechTrain=[
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = -1
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 blockSizePerWorker=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ] [SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: 
MPI Rank 1: configparameters: cntk.cntk:stderr=/tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu/stderr
MPI Rank 1: configparameters: cntk.cntk:timestamping=true
MPI Rank 1: 08/04/2016 13:59:44: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 08/04/2016 13:59:44: Commands: speechTrain
MPI Rank 1: 08/04/2016 13:59:44: Precision = "double"
MPI Rank 1: 08/04/2016 13:59:44: Using 12 CPU threads.
MPI Rank 1: 08/04/2016 13:59:44: CNTKModelPath: /tmp/cntk-test-20160804135911.121435/Speech/DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn
MPI Rank 1: 08/04/2016 13:59:44: CNTKCommandTrainInfo: speechTrain : 5
MPI Rank 1: 08/04/2016 13:59:44: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 5
MPI Rank 1: 
MPI Rank 1: 08/04/2016 13:59:44: ##############################################################################
MPI Rank 1: 08/04/2016 13:59:44: #                                                                            #
MPI Rank 1: 08/04/2016 13:59:44: # Action "train"                                                             #
MPI Rank 1: 08/04/2016 13:59:44: #                                                                            #
MPI Rank 1: 08/04/2016 13:59:44: ##############################################################################
MPI Rank 1: 
MPI Rank 1: 08/04/2016 13:59:44: CNTKCommandTrainBegin: speechTrain
MPI Rank 1: SimpleNetworkBuilder Using CPU
MPI Rank 1: reading script file glob_0000.scp ... 948 entries
MPI Rank 1: total 132 state names in state list /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list
MPI Rank 1: htkmlfreader: reading MLF file /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf ... total 948 entries
MPI Rank 1: ...............................................................................................feature set 0: 252734 frames in 948 out of 948 utterances
MPI Rank 1: label set 0: 129 classes
MPI Rank 1: minibatchutterancesource: 948 utterances grouped into 3 chunks, av. chunk size: 316.0 utterances, 84244.7 frames
MPI Rank 1: 
MPI Rank 1: 08/04/2016 13:59:44: Creating virgin network.
MPI Rank 1: 
MPI Rank 1: Post-processing network...
MPI Rank 1: 
MPI Rank 1: 7 roots:
MPI Rank 1: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
MPI Rank 1: 	EvalErrorPrediction = ErrorPrediction()
MPI Rank 1: 	InvStdOfFeatures = InvStdDev()
MPI Rank 1: 	MeanOfFeatures = Mean()
MPI Rank 1: 	PosteriorProb = Softmax()
MPI Rank 1: 	Prior = Mean()
MPI Rank 1: 	ScaledLogLikelihood = Minus()
MPI Rank 1: 
MPI Rank 1: Validating network. 25 nodes to process in pass 1.
MPI Rank 1: 
MPI Rank 1: Validating --> labels = InputValue() :  -> [132 x *]
MPI Rank 1: Validating --> W2 = LearnableParameter() :  -> [132 x 512]
MPI Rank 1: Validating --> W1 = LearnableParameter() :  -> [512 x 512]
MPI Rank 1: Validating --> W0 = LearnableParameter() :  -> [512 x 363]
MPI Rank 1: Validating --> features = InputValue() :  -> [363 x *]
MPI Rank 1: Validating --> MeanOfFeatures = Mean (features) : [363 x *] -> [363]
MPI Rank 1: Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *] -> [363]
MPI Rank 1: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *], [363], [363] -> [363 x *]
MPI Rank 1: Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [512 x 363], [363 x *] -> [512 x *]
MPI Rank 1: Validating --> B0 = LearnableParameter() :  -> [512 x 1]
MPI Rank 1: Validating --> W0*features+B0 = Plus (W0*features, B0) : [512 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 1: Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> W1*H1 = Times (W1, H1) : [512 x 512], [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> B1 = LearnableParameter() :  -> [512 x 1]
MPI Rank 1: Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [512 x 1 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 1: Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> W2*H1 = Times (W2, H2) : [132 x 512], [512 x 1 x *] -> [132 x 1 x *]
MPI Rank 1: Validating --> B2 = LearnableParameter() :  -> [132 x 1]
MPI Rank 1: Validating --> HLast = Plus (W2*H1, B2) : [132 x 1 x *], [132 x 1] -> [132 x 1 x *]
MPI Rank 1: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 1: Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 1: Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *] -> [132 x 1 x *]
MPI Rank 1: Validating --> Prior = Mean (labels) : [132 x *] -> [132]
MPI Rank 1: Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
MPI Rank 1: Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *], [132] -> [132 x 1 x *]
MPI Rank 1: 
MPI Rank 1: Validating network. 17 nodes to process in pass 2.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: Validating network, final pass.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 12 out of 25 nodes do not share the minibatch layout with the input data.
MPI Rank 1: 
MPI Rank 1: Post-processing network complete.
MPI Rank 1: 
MPI Rank 1: 08/04/2016 13:59:44: Created model with 25 nodes on CPU.
MPI Rank 1: 
MPI Rank 1: 08/04/2016 13:59:44: Training criterion node(s):
MPI Rank 1: 08/04/2016 13:59:44: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax
MPI Rank 1: 
MPI Rank 1: 08/04/2016 13:59:44: Evaluation criterion node(s):
MPI Rank 1: 
MPI Rank 1: 08/04/2016 13:59:44: 	EvalErrorPrediction = ErrorPrediction
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: Allocating matrices for forward and/or backward propagation.
MPI Rank 1: 
MPI Rank 1: Memory Sharing Structure:
MPI Rank 1: 
MPI Rank 1: (nil): {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[363]] [LogOfPrior Gradient[132]] [MVNormalizedFeatures Gradient[363 x *]] [MeanOfFeatures Gradient[363]] [PosteriorProb Gradient[132 x 1 x *]] [PosteriorProb Value[132 x 1 x *]] [Prior Gradient[132]] [ScaledLogLikelihood Gradient[132 x 1 x *]] [features Gradient[363 x *]] [labels Gradient[132 x *]] }
MPI Rank 1: 0x7fd188308098: {[W1 Value[512 x 512]] }
MPI Rank 1: 0x7fd1883113a8: {[B1 Value[512 x 1]] }
MPI Rank 1: 0x7fd188311a58: {[Prior Value[132]] }
MPI Rank 1: 0x7fd188312d68: {[features Value[363 x *]] }
MPI Rank 1: 0x7fd188318298: {[W0*features Value[512 x *]] }
MPI Rank 1: 0x7fd1883184a8: {[W0 Gradient[512 x 363]] [W0*features+B0 Value[512 x 1 x *]] }
MPI Rank 1: 0x7fd188318668: {[H1 Value[512 x 1 x *]] [W0*features Gradient[512 x *]] }
MPI Rank 1: 0x7fd188318828: {[W0*features+B0 Gradient[512 x 1 x *]] [W1*H1 Value[512 x 1 x *]] }
MPI Rank 1: 0x7fd1883189e8: {[W1 Gradient[512 x 512]] [W1*H1+B1 Value[512 x 1 x *]] }
MPI Rank 1: 0x7fd188318ba8: {[H2 Value[512 x 1 x *]] [W1*H1 Gradient[512 x 1 x *]] }
MPI Rank 1: 0x7fd18831a218: {[labels Value[132 x *]] }
MPI Rank 1: 0x7fd188327e58: {[B0 Gradient[512 x 1]] [H1 Gradient[512 x 1 x *]] [W1*H1+B1 Gradient[512 x 1 x *]] [W2*H1 Value[132 x 1 x *]] }
MPI Rank 1: 0x7fd188328018: {[HLast Value[132 x 1 x *]] [W2 Gradient[132 x 512]] }
MPI Rank 1: 0x7fd18b202c88: {[InvStdOfFeatures Value[363]] }
MPI Rank 1: 0x7fd18b203198: {[MeanOfFeatures Value[363]] }
MPI Rank 1: 0x7fd18b203c18: {[W2 Value[132 x 512]] }
MPI Rank 1: 0x7fd18b205f08: {[B0 Value[512 x 1]] }
MPI Rank 1: 0x7fd18b208d28: {[W0 Value[512 x 363]] }
MPI Rank 1: 0x7fd18b256618: {[B2 Value[132 x 1]] }
MPI Rank 1: 0x7fd18b256ae8: {[EvalErrorPrediction Value[1]] }
MPI Rank 1: 0x7fd18b256c78: {[ScaledLogLikelihood Value[132 x 1 x *]] }
MPI Rank 1: 0x7fd18b259238: {[MVNormalizedFeatures Value[363 x *]] }
MPI Rank 1: 0x7fd18b25fde8: {[CrossEntropyWithSoftmax Gradient[1]] }
MPI Rank 1: 0x7fd18b25ffa8: {[B1 Gradient[512 x 1]] [H2 Gradient[512 x 1 x *]] [HLast Gradient[132 x 1 x *]] }
MPI Rank 1: 0x7fd18b260168: {[W2*H1 Gradient[132 x 1 x *]] }
MPI Rank 1: 0x7fd18b260328: {[B2 Gradient[132 x 1]] }
MPI Rank 1: 0x7fd18b2ff858: {[CrossEntropyWithSoftmax Value[1]] }
MPI Rank 1: 0x7fd18b2ffdd8: {[LogOfPrior Value[132]] }
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 08/04/2016 13:59:44: Precomputing --> 3 PreCompute nodes found.
MPI Rank 1: 
MPI Rank 1: 08/04/2016 13:59:44: 	MeanOfFeatures = Mean()
MPI Rank 1: 08/04/2016 13:59:44: 	InvStdOfFeatures = InvStdDev()
MPI Rank 1: 08/04/2016 13:59:44: 	Prior = Mean()
MPI Rank 1: minibatchiterator: epoch 0: frames [0..252734] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 1: requiredata: determined feature kind as 33-dimensional 'USER' with frame shift 10.0 ms
MPI Rank 1: 
MPI Rank 1: 08/04/2016 13:59:46: Precomputing --> Completed.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 08/04/2016 13:59:46: Starting Epoch 1: learning rate per sample = 0.015625  effective momentum = 0.900000  momentum as time constant = 607.4 samples
MPI Rank 1: minibatchiterator: epoch 0: frames [0..20480] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 08/04/2016 13:59:46: Starting minibatch loop.
MPI Rank 1: 08/04/2016 13:59:46:  Epoch[ 1 of 5]-Minibatch[   1-   3, 0.94%]: CrossEntropyWithSoftmax = 4.70920643 * 192; EvalErrorPrediction = 0.89583333 * 192; time = 0.0996s; samplesPerSecond = 1928.4
MPI Rank 1: 08/04/2016 13:59:46:  Epoch[ 1 of 5]-Minibatch[   4-   6, 1.88%]: CrossEntropyWithSoftmax = 4.60784449 * 192; EvalErrorPrediction = 0.94270833 * 192; time = 0.0998s; samplesPerSecond = 1923.0
MPI Rank 1: 08/04/2016 13:59:46:  Epoch[ 1 of 5]-Minibatch[   7-   9, 2.81%]: CrossEntropyWithSoftmax = 4.61095082 * 192; EvalErrorPrediction = 0.94791667 * 192; time = 0.0991s; samplesPerSecond = 1937.3
MPI Rank 1: 08/04/2016 13:59:46:  Epoch[ 1 of 5]-Minibatch[  10-  12, 3.75%]: CrossEntropyWithSoftmax = 4.09305931 * 192; EvalErrorPrediction = 0.91145833 * 192; time = 0.0968s; samplesPerSecond = 1984.3
MPI Rank 1: 08/04/2016 13:59:46:  Epoch[ 1 of 5]-Minibatch[  13-  15, 4.69%]: CrossEntropyWithSoftmax = 4.40878469 * 192; EvalErrorPrediction = 0.89583333 * 192; time = 0.0989s; samplesPerSecond = 1942.1
MPI Rank 1: 08/04/2016 13:59:47:  Epoch[ 1 of 5]-Minibatch[  16-  18, 5.62%]: CrossEntropyWithSoftmax = 4.57596337 * 192; EvalErrorPrediction = 0.91145833 * 192; time = 0.0941s; samplesPerSecond = 2039.9
MPI Rank 1: 08/04/2016 13:59:47:  Epoch[ 1 of 5]-Minibatch[  19-  21, 6.56%]: CrossEntropyWithSoftmax = 4.14311031 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.0927s; samplesPerSecond = 2071.0
MPI Rank 1: 08/04/2016 13:59:47:  Epoch[ 1 of 5]-Minibatch[  22-  24, 7.50%]: CrossEntropyWithSoftmax = 4.02812598 * 192; EvalErrorPrediction = 0.93229167 * 192; time = 0.0926s; samplesPerSecond = 2072.7
MPI Rank 1: 08/04/2016 13:59:47:  Epoch[ 1 of 5]-Minibatch[  25-  27, 8.44%]: CrossEntropyWithSoftmax = 4.07670864 * 192; EvalErrorPrediction = 0.88020833 * 192; time = 0.0961s; samplesPerSecond = 1997.8
MPI Rank 1: 08/04/2016 13:59:47:  Epoch[ 1 of 5]-Minibatch[  28-  30, 9.38%]: CrossEntropyWithSoftmax = 3.88736773 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 0.0969s; samplesPerSecond = 1981.9
MPI Rank 1: 08/04/2016 13:59:47:  Epoch[ 1 of 5]-Minibatch[  31-  33, 10.31%]: CrossEntropyWithSoftmax = 4.03193814 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.0966s; samplesPerSecond = 1987.4
MPI Rank 1: 08/04/2016 13:59:47:  Epoch[ 1 of 5]-Minibatch[  34-  36, 11.25%]: CrossEntropyWithSoftmax = 3.93246604 * 192; EvalErrorPrediction = 0.86979167 * 192; time = 0.0990s; samplesPerSecond = 1939.6
MPI Rank 1: 08/04/2016 13:59:47:  Epoch[ 1 of 5]-Minibatch[  37-  39, 12.19%]: CrossEntropyWithSoftmax = 3.86120295 * 192; EvalErrorPrediction = 0.85937500 * 192; time = 0.0944s; samplesPerSecond = 2033.2
MPI Rank 1: 08/04/2016 13:59:47:  Epoch[ 1 of 5]-Minibatch[  40-  42, 13.12%]: CrossEntropyWithSoftmax = 3.83486880 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.0964s; samplesPerSecond = 1991.6
MPI Rank 1: 08/04/2016 13:59:47:  Epoch[ 1 of 5]-Minibatch[  43-  45, 14.06%]: CrossEntropyWithSoftmax = 3.71675518 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.1009s; samplesPerSecond = 1903.2
MPI Rank 1: 08/04/2016 13:59:48:  Epoch[ 1 of 5]-Minibatch[  46-  48, 15.00%]: CrossEntropyWithSoftmax = 3.73660037 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 0.0961s; samplesPerSecond = 1998.5
MPI Rank 1: 08/04/2016 13:59:48:  Epoch[ 1 of 5]-Minibatch[  49-  51, 15.94%]: CrossEntropyWithSoftmax = 3.78118858 * 192; EvalErrorPrediction = 0.85937500 * 192; time = 0.0977s; samplesPerSecond = 1965.0
MPI Rank 1: 08/04/2016 13:59:48:  Epoch[ 1 of 5]-Minibatch[  52-  54, 16.88%]: CrossEntropyWithSoftmax = 3.79572781 * 192; EvalErrorPrediction = 0.88541667 * 192; time = 0.1000s; samplesPerSecond = 1919.4
MPI Rank 1: 08/04/2016 13:59:48:  Epoch[ 1 of 5]-Minibatch[  55-  57, 17.81%]: CrossEntropyWithSoftmax = 3.90358622 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.0960s; samplesPerSecond = 1999.2
MPI Rank 1: 08/04/2016 13:59:48:  Epoch[ 1 of 5]-Minibatch[  58-  60, 18.75%]: CrossEntropyWithSoftmax = 3.63090328 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.0957s; samplesPerSecond = 2005.7
MPI Rank 1: 08/04/2016 13:59:48:  Epoch[ 1 of 5]-Minibatch[  61-  63, 19.69%]: CrossEntropyWithSoftmax = 3.62580837 * 192; EvalErrorPrediction = 0.82291667 * 192; time = 0.0966s; samplesPerSecond = 1988.5
MPI Rank 1: 08/04/2016 13:59:48:  Epoch[ 1 of 5]-Minibatch[  64-  66, 20.62%]: CrossEntropyWithSoftmax = 3.47291760 * 192; EvalErrorPrediction = 0.85937500 * 192; time = 0.0946s; samplesPerSecond = 2028.5
MPI Rank 1: 08/04/2016 13:59:48:  Epoch[ 1 of 5]-Minibatch[  67-  69, 21.56%]: CrossEntropyWithSoftmax = 3.72399026 * 192; EvalErrorPrediction = 0.87500000 * 192; time = 0.0943s; samplesPerSecond = 2037.0
MPI Rank 1: 08/04/2016 13:59:48:  Epoch[ 1 of 5]-Minibatch[  70-  72, 22.50%]: CrossEntropyWithSoftmax = 3.47020356 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.0948s; samplesPerSecond = 2025.7
MPI Rank 1: 08/04/2016 13:59:48:  Epoch[ 1 of 5]-Minibatch[  73-  75, 23.44%]: CrossEntropyWithSoftmax = 3.40404074 * 192; EvalErrorPrediction = 0.81250000 * 192; time = 0.0950s; samplesPerSecond = 2020.7
MPI Rank 1: 08/04/2016 13:59:48:  Epoch[ 1 of 5]-Minibatch[  76-  78, 24.38%]: CrossEntropyWithSoftmax = 3.46867863 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.0967s; samplesPerSecond = 1984.9
MPI Rank 1: 08/04/2016 13:59:49:  Epoch[ 1 of 5]-Minibatch[  79-  81, 25.31%]: CrossEntropyWithSoftmax = 3.41317765 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.0930s; samplesPerSecond = 2063.9
MPI Rank 1: 08/04/2016 13:59:49:  Epoch[ 1 of 5]-Minibatch[  82-  84, 26.25%]: CrossEntropyWithSoftmax = 3.58717210 * 192; EvalErrorPrediction = 0.83333333 * 192; time = 0.0959s; samplesPerSecond = 2001.6
MPI Rank 1: 08/04/2016 13:59:49:  Epoch[ 1 of 5]-Minibatch[  85-  87, 27.19%]: CrossEntropyWithSoftmax = 3.59741424 * 192; EvalErrorPrediction = 0.84375000 * 192; time = 0.0990s; samplesPerSecond = 1938.9
MPI Rank 1: 08/04/2016 13:59:49:  Epoch[ 1 of 5]-Minibatch[  88-  90, 28.12%]: CrossEntropyWithSoftmax = 3.29991790 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 0.0977s; samplesPerSecond = 1966.1
MPI Rank 1: 08/04/2016 13:59:49:  Epoch[ 1 of 5]-Minibatch[  91-  93, 29.06%]: CrossEntropyWithSoftmax = 3.56438034 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 0.0954s; samplesPerSecond = 2012.4
MPI Rank 1: 08/04/2016 13:59:49:  Epoch[ 1 of 5]-Minibatch[  94-  96, 30.00%]: CrossEntropyWithSoftmax = 3.37783684 * 192; EvalErrorPrediction = 0.79166667 * 192; time = 0.0923s; samplesPerSecond = 2081.1
MPI Rank 1: 08/04/2016 13:59:49:  Epoch[ 1 of 5]-Minibatch[  97-  99, 30.94%]: CrossEntropyWithSoftmax = 3.35391670 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 0.0954s; samplesPerSecond = 2013.4
MPI Rank 1: 08/04/2016 13:59:49:  Epoch[ 1 of 5]-Minibatch[ 100- 102, 31.87%]: CrossEntropyWithSoftmax = 3.46840752 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.0967s; samplesPerSecond = 1984.5
MPI Rank 1: 08/04/2016 13:59:49:  Epoch[ 1 of 5]-Minibatch[ 103- 105, 32.81%]: CrossEntropyWithSoftmax = 3.55972593 * 192; EvalErrorPrediction = 0.84375000 * 192; time = 0.0943s; samplesPerSecond = 2037.1
MPI Rank 1: 08/04/2016 13:59:49:  Epoch[ 1 of 5]-Minibatch[ 106- 108, 33.75%]: CrossEntropyWithSoftmax = 3.47243586 * 192; EvalErrorPrediction = 0.84895833 * 192; time = 0.0964s; samplesPerSecond = 1990.9
MPI Rank 1: 08/04/2016 13:59:50:  Epoch[ 1 of 5]-Minibatch[ 109- 111, 34.69%]: CrossEntropyWithSoftmax = 3.25316607 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.0935s; samplesPerSecond = 2052.6
MPI Rank 1: 08/04/2016 13:59:50:  Epoch[ 1 of 5]-Minibatch[ 112- 114, 35.62%]: CrossEntropyWithSoftmax = 3.17974454 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 0.0958s; samplesPerSecond = 2005.2
MPI Rank 1: 08/04/2016 13:59:50:  Epoch[ 1 of 5]-Minibatch[ 115- 117, 36.56%]: CrossEntropyWithSoftmax = 2.97420340 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 0.0924s; samplesPerSecond = 2077.0
MPI Rank 1: 08/04/2016 13:59:50:  Epoch[ 1 of 5]-Minibatch[ 118- 120, 37.50%]: CrossEntropyWithSoftmax = 3.24624427 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.0959s; samplesPerSecond = 2001.8
MPI Rank 1: 08/04/2016 13:59:50:  Epoch[ 1 of 5]-Minibatch[ 121- 123, 38.44%]: CrossEntropyWithSoftmax = 3.28392377 * 192; EvalErrorPrediction = 0.79166667 * 192; time = 0.0944s; samplesPerSecond = 2033.0
MPI Rank 1: 08/04/2016 13:59:50:  Epoch[ 1 of 5]-Minibatch[ 124- 126, 39.38%]: CrossEntropyWithSoftmax = 3.18008224 * 192; EvalErrorPrediction = 0.75000000 * 192; time = 0.0963s; samplesPerSecond = 1993.1
MPI Rank 1: 08/04/2016 13:59:50:  Epoch[ 1 of 5]-Minibatch[ 127- 129, 40.31%]: CrossEntropyWithSoftmax = 3.26600038 * 192; EvalErrorPrediction = 0.74479167 * 192; time = 0.0951s; samplesPerSecond = 2019.9
MPI Rank 1: 08/04/2016 13:59:50:  Epoch[ 1 of 5]-Minibatch[ 130- 132, 41.25%]: CrossEntropyWithSoftmax = 3.08953739 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 0.0941s; samplesPerSecond = 2039.5
MPI Rank 1: 08/04/2016 13:59:50:  Epoch[ 1 of 5]-Minibatch[ 133- 135, 42.19%]: CrossEntropyWithSoftmax = 3.37315997 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.0973s; samplesPerSecond = 1973.6
MPI Rank 1: 08/04/2016 13:59:50:  Epoch[ 1 of 5]-Minibatch[ 136- 138, 43.12%]: CrossEntropyWithSoftmax = 3.11331739 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 0.0971s; samplesPerSecond = 1977.2
MPI Rank 1: 08/04/2016 13:59:50:  Epoch[ 1 of 5]-Minibatch[ 139- 141, 44.06%]: CrossEntropyWithSoftmax = 2.91260127 * 192; EvalErrorPrediction = 0.71875000 * 192; time = 0.0957s; samplesPerSecond = 2007.2
MPI Rank 1: 08/04/2016 13:59:51:  Epoch[ 1 of 5]-Minibatch[ 142- 144, 45.00%]: CrossEntropyWithSoftmax = 3.15026888 * 192; EvalErrorPrediction = 0.75000000 * 192; time = 0.0949s; samplesPerSecond = 2023.8
MPI Rank 1: 08/04/2016 13:59:51:  Epoch[ 1 of 5]-Minibatch[ 145- 147, 45.94%]: CrossEntropyWithSoftmax = 3.29961883 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 0.0986s; samplesPerSecond = 1948.0
MPI Rank 1: 08/04/2016 13:59:51:  Epoch[ 1 of 5]-Minibatch[ 148- 150, 46.88%]: CrossEntropyWithSoftmax = 2.88463855 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0988s; samplesPerSecond = 1942.9
MPI Rank 1: 08/04/2016 13:59:51:  Epoch[ 1 of 5]-Minibatch[ 151- 153, 47.81%]: CrossEntropyWithSoftmax = 3.09493044 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.0981s; samplesPerSecond = 1957.9
MPI Rank 1: 08/04/2016 13:59:51:  Epoch[ 1 of 5]-Minibatch[ 154- 156, 48.75%]: CrossEntropyWithSoftmax = 3.10515973 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 0.0987s; samplesPerSecond = 1944.8
MPI Rank 1: 08/04/2016 13:59:51:  Epoch[ 1 of 5]-Minibatch[ 157- 159, 49.69%]: CrossEntropyWithSoftmax = 3.10126511 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0970s; samplesPerSecond = 1979.9
MPI Rank 1: 08/04/2016 13:59:51:  Epoch[ 1 of 5]-Minibatch[ 160- 162, 50.62%]: CrossEntropyWithSoftmax = 3.19164437 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 0.0969s; samplesPerSecond = 1981.8
MPI Rank 1: 08/04/2016 13:59:51:  Epoch[ 1 of 5]-Minibatch[ 163- 165, 51.56%]: CrossEntropyWithSoftmax = 3.12721685 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0966s; samplesPerSecond = 1987.8
MPI Rank 1: 08/04/2016 13:59:51:  Epoch[ 1 of 5]-Minibatch[ 166- 168, 52.50%]: CrossEntropyWithSoftmax = 2.85268070 * 192; EvalErrorPrediction = 0.71875000 * 192; time = 0.0982s; samplesPerSecond = 1956.0
MPI Rank 1: 08/04/2016 13:59:51:  Epoch[ 1 of 5]-Minibatch[ 169- 171, 53.44%]: CrossEntropyWithSoftmax = 2.95117108 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 0.0976s; samplesPerSecond = 1966.3
MPI Rank 1: 08/04/2016 13:59:52:  Epoch[ 1 of 5]-Minibatch[ 172- 174, 54.37%]: CrossEntropyWithSoftmax = 3.01853847 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0971s; samplesPerSecond = 1977.3
MPI Rank 1: 08/04/2016 13:59:52:  Epoch[ 1 of 5]-Minibatch[ 175- 177, 55.31%]: CrossEntropyWithSoftmax = 2.79793207 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0981s; samplesPerSecond = 1956.2
MPI Rank 1: 08/04/2016 13:59:52:  Epoch[ 1 of 5]-Minibatch[ 178- 180, 56.25%]: CrossEntropyWithSoftmax = 2.80474548 * 192; EvalErrorPrediction = 0.72395833 * 192; time = 0.0963s; samplesPerSecond = 1994.2
MPI Rank 1: 08/04/2016 13:59:52:  Epoch[ 1 of 5]-Minibatch[ 181- 183, 57.19%]: CrossEntropyWithSoftmax = 2.83573879 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0932s; samplesPerSecond = 2060.2
MPI Rank 1: 08/04/2016 13:59:52:  Epoch[ 1 of 5]-Minibatch[ 184- 186, 58.13%]: CrossEntropyWithSoftmax = 2.90755999 * 192; EvalErrorPrediction = 0.71875000 * 192; time = 0.0950s; samplesPerSecond = 2021.4
MPI Rank 1: 08/04/2016 13:59:52:  Epoch[ 1 of 5]-Minibatch[ 187- 189, 59.06%]: CrossEntropyWithSoftmax = 2.93198251 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0959s; samplesPerSecond = 2002.9
MPI Rank 1: 08/04/2016 13:59:52:  Epoch[ 1 of 5]-Minibatch[ 190- 192, 60.00%]: CrossEntropyWithSoftmax = 2.93352694 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0952s; samplesPerSecond = 2016.2
MPI Rank 1: 08/04/2016 13:59:52:  Epoch[ 1 of 5]-Minibatch[ 193- 195, 60.94%]: CrossEntropyWithSoftmax = 2.70300458 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0979s; samplesPerSecond = 1960.8
MPI Rank 1: 08/04/2016 13:59:52:  Epoch[ 1 of 5]-Minibatch[ 196- 198, 61.88%]: CrossEntropyWithSoftmax = 2.68704401 * 192; EvalErrorPrediction = 0.71354167 * 192; time = 0.0979s; samplesPerSecond = 1961.2
MPI Rank 1: 08/04/2016 13:59:52:  Epoch[ 1 of 5]-Minibatch[ 199- 201, 62.81%]: CrossEntropyWithSoftmax = 2.70670616 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0976s; samplesPerSecond = 1967.0
MPI Rank 1: 08/04/2016 13:59:53:  Epoch[ 1 of 5]-Minibatch[ 202- 204, 63.75%]: CrossEntropyWithSoftmax = 2.91348027 * 192; EvalErrorPrediction = 0.72395833 * 192; time = 0.0970s; samplesPerSecond = 1979.4
MPI Rank 1: 08/04/2016 13:59:53:  Epoch[ 1 of 5]-Minibatch[ 205- 207, 64.69%]: CrossEntropyWithSoftmax = 2.79701150 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.0960s; samplesPerSecond = 1999.6
MPI Rank 1: 08/04/2016 13:59:53:  Epoch[ 1 of 5]-Minibatch[ 208- 210, 65.62%]: CrossEntropyWithSoftmax = 2.83905155 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.0943s; samplesPerSecond = 2036.1
MPI Rank 1: 08/04/2016 13:59:53:  Epoch[ 1 of 5]-Minibatch[ 211- 213, 66.56%]: CrossEntropyWithSoftmax = 2.82919358 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0997s; samplesPerSecond = 1925.1
MPI Rank 1: 08/04/2016 13:59:53:  Epoch[ 1 of 5]-Minibatch[ 214- 216, 67.50%]: CrossEntropyWithSoftmax = 2.76393372 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0947s; samplesPerSecond = 2026.5
MPI Rank 1: 08/04/2016 13:59:53:  Epoch[ 1 of 5]-Minibatch[ 217- 219, 68.44%]: CrossEntropyWithSoftmax = 2.43306156 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0963s; samplesPerSecond = 1992.8
MPI Rank 1: 08/04/2016 13:59:53:  Epoch[ 1 of 5]-Minibatch[ 220- 222, 69.38%]: CrossEntropyWithSoftmax = 2.51026989 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0965s; samplesPerSecond = 1990.7
MPI Rank 1: 08/04/2016 13:59:53:  Epoch[ 1 of 5]-Minibatch[ 223- 225, 70.31%]: CrossEntropyWithSoftmax = 2.62462443 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.0969s; samplesPerSecond = 1982.1
MPI Rank 1: 08/04/2016 13:59:53:  Epoch[ 1 of 5]-Minibatch[ 226- 228, 71.25%]: CrossEntropyWithSoftmax = 2.64347349 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0991s; samplesPerSecond = 1937.4
MPI Rank 1: 08/04/2016 13:59:53:  Epoch[ 1 of 5]-Minibatch[ 229- 231, 72.19%]: CrossEntropyWithSoftmax = 2.56077705 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0928s; samplesPerSecond = 2068.2
MPI Rank 1: 08/04/2016 13:59:53:  Epoch[ 1 of 5]-Minibatch[ 232- 234, 73.12%]: CrossEntropyWithSoftmax = 2.48843298 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.0964s; samplesPerSecond = 1992.2
MPI Rank 1: 08/04/2016 13:59:54:  Epoch[ 1 of 5]-Minibatch[ 235- 237, 74.06%]: CrossEntropyWithSoftmax = 2.59903028 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.0961s; samplesPerSecond = 1998.8
MPI Rank 1: 08/04/2016 13:59:54:  Epoch[ 1 of 5]-Minibatch[ 238- 240, 75.00%]: CrossEntropyWithSoftmax = 2.27900104 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0956s; samplesPerSecond = 2007.9
MPI Rank 1: 08/04/2016 13:59:54:  Epoch[ 1 of 5]-Minibatch[ 241- 243, 75.94%]: CrossEntropyWithSoftmax = 2.61342893 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0949s; samplesPerSecond = 2022.9
MPI Rank 1: 08/04/2016 13:59:54:  Epoch[ 1 of 5]-Minibatch[ 244- 246, 76.88%]: CrossEntropyWithSoftmax = 2.53489538 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0955s; samplesPerSecond = 2010.1
MPI Rank 1: 08/04/2016 13:59:54:  Epoch[ 1 of 5]-Minibatch[ 247- 249, 77.81%]: CrossEntropyWithSoftmax = 2.36449892 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0955s; samplesPerSecond = 2011.1
MPI Rank 1: 08/04/2016 13:59:54:  Epoch[ 1 of 5]-Minibatch[ 250- 252, 78.75%]: CrossEntropyWithSoftmax = 2.53116927 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0940s; samplesPerSecond = 2043.3
MPI Rank 1: 08/04/2016 13:59:54:  Epoch[ 1 of 5]-Minibatch[ 253- 255, 79.69%]: CrossEntropyWithSoftmax = 2.36655920 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0980s; samplesPerSecond = 1958.4
MPI Rank 1: 08/04/2016 13:59:54:  Epoch[ 1 of 5]-Minibatch[ 256- 258, 80.62%]: CrossEntropyWithSoftmax = 2.58033808 * 192; EvalErrorPrediction = 0.67187500 * 192; time = 0.0935s; samplesPerSecond = 2053.0
MPI Rank 1: 08/04/2016 13:59:54:  Epoch[ 1 of 5]-Minibatch[ 259- 261, 81.56%]: CrossEntropyWithSoftmax = 2.35839328 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.0982s; samplesPerSecond = 1956.1
MPI Rank 1: 08/04/2016 13:59:54:  Epoch[ 1 of 5]-Minibatch[ 262- 264, 82.50%]: CrossEntropyWithSoftmax = 2.42827337 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.0984s; samplesPerSecond = 1951.2
MPI Rank 1: 08/04/2016 13:59:55:  Epoch[ 1 of 5]-Minibatch[ 265- 267, 83.44%]: CrossEntropyWithSoftmax = 2.11653966 * 192; EvalErrorPrediction = 0.57291667 * 192; time = 0.0965s; samplesPerSecond = 1989.6
MPI Rank 1: 08/04/2016 13:59:55:  Epoch[ 1 of 5]-Minibatch[ 268- 270, 84.38%]: CrossEntropyWithSoftmax = 2.39354487 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0961s; samplesPerSecond = 1998.7
MPI Rank 1: 08/04/2016 13:59:55:  Epoch[ 1 of 5]-Minibatch[ 271- 273, 85.31%]: CrossEntropyWithSoftmax = 2.45269307 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0973s; samplesPerSecond = 1972.3
MPI Rank 1: 08/04/2016 13:59:55:  Epoch[ 1 of 5]-Minibatch[ 274- 276, 86.25%]: CrossEntropyWithSoftmax = 2.73470311 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0952s; samplesPerSecond = 2016.8
MPI Rank 1: 08/04/2016 13:59:55:  Epoch[ 1 of 5]-Minibatch[ 277- 279, 87.19%]: CrossEntropyWithSoftmax = 2.18772407 * 192; EvalErrorPrediction = 0.57812500 * 192; time = 0.0949s; samplesPerSecond = 2024.0
MPI Rank 1: 08/04/2016 13:59:55:  Epoch[ 1 of 5]-Minibatch[ 280- 282, 88.12%]: CrossEntropyWithSoftmax = 2.50104321 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0996s; samplesPerSecond = 1927.0
MPI Rank 1: 08/04/2016 13:59:55:  Epoch[ 1 of 5]-Minibatch[ 283- 285, 89.06%]: CrossEntropyWithSoftmax = 2.44434220 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0999s; samplesPerSecond = 1921.5
MPI Rank 1: 08/04/2016 13:59:55:  Epoch[ 1 of 5]-Minibatch[ 286- 288, 90.00%]: CrossEntropyWithSoftmax = 2.49242443 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.1009s; samplesPerSecond = 1902.9
MPI Rank 1: 08/04/2016 13:59:55:  Epoch[ 1 of 5]-Minibatch[ 289- 291, 90.94%]: CrossEntropyWithSoftmax = 2.25157853 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.0940s; samplesPerSecond = 2042.8
MPI Rank 1: 08/04/2016 13:59:55:  Epoch[ 1 of 5]-Minibatch[ 292- 294, 91.88%]: CrossEntropyWithSoftmax = 2.15752083 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0961s; samplesPerSecond = 1996.9
MPI Rank 1: 08/04/2016 13:59:56:  Epoch[ 1 of 5]-Minibatch[ 295- 297, 92.81%]: CrossEntropyWithSoftmax = 2.11472724 * 192; EvalErrorPrediction = 0.60937500 * 192; time = 0.0971s; samplesPerSecond = 1977.8
MPI Rank 1: 08/04/2016 13:59:56:  Epoch[ 1 of 5]-Minibatch[ 298- 300, 93.75%]: CrossEntropyWithSoftmax = 2.43116544 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0974s; samplesPerSecond = 1971.9
MPI Rank 1: 08/04/2016 13:59:56:  Epoch[ 1 of 5]-Minibatch[ 301- 303, 94.69%]: CrossEntropyWithSoftmax = 2.32073249 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0951s; samplesPerSecond = 2019.4
MPI Rank 1: 08/04/2016 13:59:56:  Epoch[ 1 of 5]-Minibatch[ 304- 306, 95.62%]: CrossEntropyWithSoftmax = 2.45635771 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0959s; samplesPerSecond = 2002.9
MPI Rank 1: 08/04/2016 13:59:56:  Epoch[ 1 of 5]-Minibatch[ 307- 309, 96.56%]: CrossEntropyWithSoftmax = 2.25293186 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0942s; samplesPerSecond = 2039.3
MPI Rank 1: 08/04/2016 13:59:56:  Epoch[ 1 of 5]-Minibatch[ 310- 312, 97.50%]: CrossEntropyWithSoftmax = 2.23129177 * 192; EvalErrorPrediction = 0.57812500 * 192; time = 0.0940s; samplesPerSecond = 2041.9
MPI Rank 1: 08/04/2016 13:59:56:  Epoch[ 1 of 5]-Minibatch[ 313- 315, 98.44%]: CrossEntropyWithSoftmax = 2.19287828 * 192; EvalErrorPrediction = 0.57291667 * 192; time = 0.0952s; samplesPerSecond = 2017.3
MPI Rank 1: 08/04/2016 13:59:56:  Epoch[ 1 of 5]-Minibatch[ 316- 318, 99.38%]: CrossEntropyWithSoftmax = 2.28711442 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0958s; samplesPerSecond = 2004.2
MPI Rank 1: 08/04/2016 13:59:56: Finished Epoch[ 1 of 5]: [Training] CrossEntropyWithSoftmax = 3.08229172 * 20480; EvalErrorPrediction = 0.74091797 * 20480; totalSamplesSeen = 20480; learningRatePerSample = 0.015625; epochTime=10.2854s
MPI Rank 1: 
MPI Rank 1: 08/04/2016 13:59:56: Starting Epoch 2: learning rate per sample = 0.001953  effective momentum = 0.656119  momentum as time constant = 607.5 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 1: frames [20480..40960] (first utterance at frame 20480), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 08/04/2016 13:59:56: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 08/04/2016 13:59:56:  Epoch[ 2 of 5]-Minibatch[   1-   3, 3.75%]: CrossEntropyWithSoftmax = 2.09437448 * 271; EvalErrorPrediction = 0.56457565 * 271; time = 0.1376s; samplesPerSecond = 1970.0
MPI Rank 1: 08/04/2016 13:59:57:  Epoch[ 2 of 5]-Minibatch[   4-   6, 7.50%]: CrossEntropyWithSoftmax = 2.29269270 * 255; EvalErrorPrediction = 0.62745098 * 255; time = 0.1255s; samplesPerSecond = 2031.9
MPI Rank 1: 08/04/2016 13:59:57:  Epoch[ 2 of 5]-Minibatch[   7-   9, 11.25%]: CrossEntropyWithSoftmax = 2.17662305 * 280; EvalErrorPrediction = 0.57142857 * 280; time = 0.1353s; samplesPerSecond = 2070.0
MPI Rank 1: 08/04/2016 13:59:57:  Epoch[ 2 of 5]-Minibatch[  10-  12, 15.00%]: CrossEntropyWithSoftmax = 2.10836907 * 282; EvalErrorPrediction = 0.58156028 * 282; time = 0.1306s; samplesPerSecond = 2158.7
MPI Rank 1: 08/04/2016 13:59:57:  Epoch[ 2 of 5]-Minibatch[  13-  15, 18.75%]: CrossEntropyWithSoftmax = 2.09468971 * 290; EvalErrorPrediction = 0.59310345 * 290; time = 0.1370s; samplesPerSecond = 2117.0
MPI Rank 1: 08/04/2016 13:59:57:  Epoch[ 2 of 5]-Minibatch[  16-  18, 22.50%]: CrossEntropyWithSoftmax = 2.12922829 * 271; EvalErrorPrediction = 0.56826568 * 271; time = 0.1286s; samplesPerSecond = 2106.8
MPI Rank 1: 08/04/2016 13:59:57:  Epoch[ 2 of 5]-Minibatch[  19-  21, 26.25%]: CrossEntropyWithSoftmax = 1.98904214 * 280; EvalErrorPrediction = 0.56785714 * 280; time = 0.1392s; samplesPerSecond = 2011.4
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     1.05 seconds since last report (0.00 seconds on comm.); 4262 samples processed by 2 workers (2120 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 4.07k samplesPerSecond , throughputPerWorker = 2.04k samplesPerSecond
MPI Rank 1: 08/04/2016 13:59:57:  Epoch[ 2 of 5]-Minibatch[  22-  24, 30.00%]: CrossEntropyWithSoftmax = 2.18149849 * 288; EvalErrorPrediction = 0.62500000 * 288; time = 0.1542s; samplesPerSecond = 1867.3
MPI Rank 1: 08/04/2016 13:59:58:  Epoch[ 2 of 5]-Minibatch[  25-  27, 33.75%]: CrossEntropyWithSoftmax = 2.14196240 * 272; EvalErrorPrediction = 0.59191176 * 272; time = 0.1311s; samplesPerSecond = 2074.8
MPI Rank 1: 08/04/2016 13:59:58:  Epoch[ 2 of 5]-Minibatch[  28-  30, 37.50%]: CrossEntropyWithSoftmax = 1.97360499 * 294; EvalErrorPrediction = 0.56802721 * 294; time = 0.1415s; samplesPerSecond = 2078.3
MPI Rank 1: 08/04/2016 13:59:58:  Epoch[ 2 of 5]-Minibatch[  31-  33, 41.25%]: CrossEntropyWithSoftmax = 2.10101450 * 293; EvalErrorPrediction = 0.58703072 * 293; time = 0.1414s; samplesPerSecond = 2072.6
MPI Rank 1: 08/04/2016 13:59:58:  Epoch[ 2 of 5]-Minibatch[  34-  36, 45.00%]: CrossEntropyWithSoftmax = 2.19937173 * 268; EvalErrorPrediction = 0.58582090 * 268; time = 0.1270s; samplesPerSecond = 2110.8
MPI Rank 1: 08/04/2016 13:59:58:  Epoch[ 2 of 5]-Minibatch[  37-  39, 48.75%]: CrossEntropyWithSoftmax = 2.15223359 * 276; EvalErrorPrediction = 0.57246377 * 276; time = 0.1302s; samplesPerSecond = 2119.8
MPI Rank 1: 08/04/2016 13:59:58:  Epoch[ 2 of 5]-Minibatch[  40-  42, 52.50%]: CrossEntropyWithSoftmax = 2.16663627 * 263; EvalErrorPrediction = 0.57034221 * 263; time = 0.1210s; samplesPerSecond = 2173.9
MPI Rank 1: 08/04/2016 13:59:58:  Epoch[ 2 of 5]-Minibatch[  43-  45, 56.25%]: CrossEntropyWithSoftmax = 2.02873041 * 273; EvalErrorPrediction = 0.54578755 * 273; time = 0.1324s; samplesPerSecond = 2062.5
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     1.03 seconds since last report (0.00 seconds on comm.); 4236 samples processed by 2 workers (2123 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 4.11k samplesPerSecond , throughputPerWorker = 2.05k samplesPerSecond
MPI Rank 1: 08/04/2016 13:59:58:  Epoch[ 2 of 5]-Minibatch[  46-  48, 60.00%]: CrossEntropyWithSoftmax = 2.08956728 * 258; EvalErrorPrediction = 0.56589147 * 258; time = 0.1385s; samplesPerSecond = 1863.2
MPI Rank 1: 08/04/2016 13:59:59:  Epoch[ 2 of 5]-Minibatch[  49-  51, 63.75%]: CrossEntropyWithSoftmax = 1.92667282 * 297; EvalErrorPrediction = 0.49831650 * 297; time = 0.1413s; samplesPerSecond = 2102.1
MPI Rank 1: 08/04/2016 13:59:59:  Epoch[ 2 of 5]-Minibatch[  52-  54, 67.50%]: CrossEntropyWithSoftmax = 2.07477861 * 288; EvalErrorPrediction = 0.59027778 * 288; time = 0.1364s; samplesPerSecond = 2111.1
MPI Rank 1: 08/04/2016 13:59:59:  Epoch[ 2 of 5]-Minibatch[  55-  57, 71.25%]: CrossEntropyWithSoftmax = 2.04610525 * 285; EvalErrorPrediction = 0.57543860 * 285; time = 0.1366s; samplesPerSecond = 2085.9
MPI Rank 1: 08/04/2016 13:59:59:  Epoch[ 2 of 5]-Minibatch[  58-  60, 75.00%]: CrossEntropyWithSoftmax = 2.06734356 * 267; EvalErrorPrediction = 0.52059925 * 267; time = 0.1290s; samplesPerSecond = 2069.3
MPI Rank 1: 08/04/2016 13:59:59:  Epoch[ 2 of 5]-Minibatch[  61-  63, 78.75%]: CrossEntropyWithSoftmax = 1.95534474 * 277; EvalErrorPrediction = 0.53068592 * 277; time = 0.1337s; samplesPerSecond = 2071.5
MPI Rank 1: 08/04/2016 13:59:59:  Epoch[ 2 of 5]-Minibatch[  64-  66, 82.50%]: CrossEntropyWithSoftmax = 2.02732244 * 292; EvalErrorPrediction = 0.54109589 * 292; time = 0.1394s; samplesPerSecond = 2094.8
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     1.00 seconds since last report (0.00 seconds on comm.); 4175 samples processed by 2 workers (2066 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 4.18k samplesPerSecond , throughputPerWorker = 2.09k samplesPerSecond
MPI Rank 1: 08/04/2016 13:59:59:  Epoch[ 2 of 5]-Minibatch[  67-  69, 86.25%]: CrossEntropyWithSoftmax = 1.88281762 * 284; EvalErrorPrediction = 0.54929577 * 284; time = 0.1485s; samplesPerSecond = 1912.5
MPI Rank 1: 08/04/2016 14:00:00:  Epoch[ 2 of 5]-Minibatch[  70-  72, 90.00%]: CrossEntropyWithSoftmax = 1.82680325 * 298; EvalErrorPrediction = 0.49664430 * 298; time = 0.1424s; samplesPerSecond = 2092.9
MPI Rank 1: 08/04/2016 14:00:00:  Epoch[ 2 of 5]-Minibatch[  73-  75, 93.75%]: CrossEntropyWithSoftmax = 2.15536569 * 291; EvalErrorPrediction = 0.56701031 * 291; time = 0.1358s; samplesPerSecond = 2142.2
MPI Rank 1: 08/04/2016 14:00:00:  Epoch[ 2 of 5]-Minibatch[  76-  78, 97.50%]: CrossEntropyWithSoftmax = 2.07342483 * 284; EvalErrorPrediction = 0.53521127 * 284; time = 0.1338s; samplesPerSecond = 2122.8
MPI Rank 1: 08/04/2016 14:00:00:  Epoch[ 2 of 5]-Minibatch[  79-  81, 101.25%]: CrossEntropyWithSoftmax = 2.00030570 * 172; EvalErrorPrediction = 0.50000000 * 172; time = 0.0789s; samplesPerSecond = 2179.3
MPI Rank 1: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.43-seconds latency this time; accumulated time on sync point = 0.43 seconds , average latency = 0.11 seconds
MPI Rank 1: 		(model aggregation stats) 4-th sync:     3.00 seconds since last report (2.02 seconds on comm.); 7807 samples processed by 2 workers (1140 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 2.61k samplesPerSecond , throughputPerWorker = 1.30k samplesPerSecond
MPI Rank 1: 08/04/2016 14:00:02: Finished Epoch[ 2 of 5]: [Training] CrossEntropyWithSoftmax = 2.05119424 * 20480; EvalErrorPrediction = 0.55971680 * 20480; totalSamplesSeen = 40960; learningRatePerSample = 0.001953125; epochTime=6.0727s
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:02: Starting Epoch 3: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 2: frames [40960..61440] (first utterance at frame 40960), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:02: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 08/04/2016 14:00:03:  Epoch[ 3 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.94056021 * 1150; EvalErrorPrediction = 0.53043478 * 1150; time = 0.5034s; samplesPerSecond = 2284.4
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.24-seconds latency this time; accumulated time on sync point = 0.24 seconds , average latency = 0.24 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     1.26 seconds since last report (0.00 seconds on comm.); 4878 samples processed by 2 workers (2294 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 3.88k samplesPerSecond , throughputPerWorker = 1.94k samplesPerSecond
MPI Rank 1: 08/04/2016 14:00:04:  Epoch[ 3 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.94228452 * 1144; EvalErrorPrediction = 0.54195804 * 1144; time = 0.7510s; samplesPerSecond = 1523.2
MPI Rank 1: 08/04/2016 14:00:04:  Epoch[ 3 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.94853553 * 1158; EvalErrorPrediction = 0.54317789 * 1158; time = 0.5152s; samplesPerSecond = 2247.7
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.15-seconds latency this time; accumulated time on sync point = 0.39 seconds , average latency = 0.19 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     1.17 seconds since last report (0.00 seconds on comm.); 4878 samples processed by 2 workers (2313 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 4.17k samplesPerSecond , throughputPerWorker = 2.09k samplesPerSecond
MPI Rank 1: 08/04/2016 14:00:05:  Epoch[ 3 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.93545098 * 1155; EvalErrorPrediction = 0.53766234 * 1155; time = 0.6541s; samplesPerSecond = 1765.7
MPI Rank 1: 08/04/2016 14:00:05:  Epoch[ 3 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 2.00408560 * 1134; EvalErrorPrediction = 0.56966490 * 1134; time = 0.4905s; samplesPerSecond = 2311.9
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.09-seconds latency this time; accumulated time on sync point = 0.47 seconds , average latency = 0.16 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     1.09 seconds since last report (0.00 seconds on comm.); 4809 samples processed by 2 workers (2277 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 4.42k samplesPerSecond , throughputPerWorker = 2.21k samplesPerSecond
MPI Rank 1: 08/04/2016 14:00:06:  Epoch[ 3 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.94809756 * 1143; EvalErrorPrediction = 0.53193351 * 1143; time = 0.5963s; samplesPerSecond = 1916.8
MPI Rank 1: 08/04/2016 14:00:06:  Epoch[ 3 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.88463535 * 770; EvalErrorPrediction = 0.53506494 * 770; time = 0.3294s; samplesPerSecond = 2337.3
MPI Rank 1: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.76-seconds latency this time; accumulated time on sync point = 1.23 seconds , average latency = 0.31 seconds
MPI Rank 1: 		(model aggregation stats) 4-th sync:     2.21 seconds since last report (1.11 seconds on comm.); 5915 samples processed by 2 workers (770 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 2.68k samplesPerSecond , throughputPerWorker = 1.34k samplesPerSecond
MPI Rank 1: 08/04/2016 14:00:08: Finished Epoch[ 3 of 5]: [Training] CrossEntropyWithSoftmax = 1.95181074 * 20480; EvalErrorPrediction = 0.54453125 * 20480; totalSamplesSeen = 61440; learningRatePerSample = 9.7656251e-05; epochTime=5.72458s
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:08: Starting Epoch 4: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 3: frames [61440..81920] (first utterance at frame 61440), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:08: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 08/04/2016 14:00:09:  Epoch[ 4 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.86859364 * 1193; EvalErrorPrediction = 0.50377200 * 1193; time = 0.5143s; samplesPerSecond = 2319.6
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.09-seconds latency this time; accumulated time on sync point = 0.09 seconds , average latency = 0.09 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     1.12 seconds since last report (0.00 seconds on comm.); 4812 samples processed by 2 workers (2306 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 4.31k samplesPerSecond , throughputPerWorker = 2.15k samplesPerSecond
MPI Rank 1: 08/04/2016 14:00:09:  Epoch[ 4 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.89309869 * 1113; EvalErrorPrediction = 0.51752022 * 1113; time = 0.5990s; samplesPerSecond = 1858.2
MPI Rank 1: 08/04/2016 14:00:10:  Epoch[ 4 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.88889796 * 1170; EvalErrorPrediction = 0.53418803 * 1170; time = 0.5096s; samplesPerSecond = 2295.9
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.12-seconds latency this time; accumulated time on sync point = 0.22 seconds , average latency = 0.11 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     1.16 seconds since last report (0.00 seconds on comm.); 4977 samples processed by 2 workers (2382 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 4.28k samplesPerSecond , throughputPerWorker = 2.14k samplesPerSecond
MPI Rank 1: 08/04/2016 14:00:11:  Epoch[ 4 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.83492281 * 1212; EvalErrorPrediction = 0.50660066 * 1212; time = 0.6543s; samplesPerSecond = 1852.3
MPI Rank 1: 08/04/2016 14:00:11:  Epoch[ 4 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.83795541 * 1191; EvalErrorPrediction = 0.49202351 * 1191; time = 0.4829s; samplesPerSecond = 2466.6
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.09-seconds latency this time; accumulated time on sync point = 0.31 seconds , average latency = 0.10 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     1.10 seconds since last report (0.00 seconds on comm.); 4887 samples processed by 2 workers (2388 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 4.46k samplesPerSecond , throughputPerWorker = 2.23k samplesPerSecond
MPI Rank 1: 08/04/2016 14:00:12:  Epoch[ 4 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.94719499 * 1197; EvalErrorPrediction = 0.54803676 * 1197; time = 0.6122s; samplesPerSecond = 1955.1
MPI Rank 1: 08/04/2016 14:00:12:  Epoch[ 4 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 2.00868337 * 816; EvalErrorPrediction = 0.55759804 * 816; time = 0.3571s; samplesPerSecond = 2284.9
MPI Rank 1: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.71-seconds latency this time; accumulated time on sync point = 1.01 seconds , average latency = 0.25 seconds
MPI Rank 1: 		(model aggregation stats) 4-th sync:     2.13 seconds since last report (1.05 seconds on comm.); 5804 samples processed by 2 workers (816 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 2.73k samplesPerSecond , throughputPerWorker = 1.36k samplesPerSecond
MPI Rank 1: 08/04/2016 14:00:14: Finished Epoch[ 4 of 5]: [Training] CrossEntropyWithSoftmax = 1.91450159 * 20480; EvalErrorPrediction = 0.52583008 * 20480; totalSamplesSeen = 81920; learningRatePerSample = 9.7656251e-05; epochTime=5.5058s
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:14: Starting Epoch 5: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 4: frames [81920..102400] (first utterance at frame 81920), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:14: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 08/04/2016 14:00:14:  Epoch[ 5 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.89366951 * 1216; EvalErrorPrediction = 0.54605263 * 1216; time = 0.5261s; samplesPerSecond = 2311.1
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.06-seconds latency this time; accumulated time on sync point = 0.06 seconds , average latency = 0.06 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     1.11 seconds since last report (0.00 seconds on comm.); 4910 samples processed by 2 workers (2408 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 4.43k samplesPerSecond , throughputPerWorker = 2.21k samplesPerSecond
MPI Rank 1: 08/04/2016 14:00:15:  Epoch[ 5 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.83222696 * 1192; EvalErrorPrediction = 0.52432886 * 1192; time = 0.5784s; samplesPerSecond = 2061.0
MPI Rank 1: 08/04/2016 14:00:16:  Epoch[ 5 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.85664396 * 1216; EvalErrorPrediction = 0.51398026 * 1216; time = 0.5026s; samplesPerSecond = 2419.6
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.18-seconds latency this time; accumulated time on sync point = 0.24 seconds , average latency = 0.12 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     1.07 seconds since last report (0.00 seconds on comm.); 4540 samples processed by 2 workers (2059 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 4.25k samplesPerSecond , throughputPerWorker = 2.12k samplesPerSecond
MPI Rank 1: 08/04/2016 14:00:16:  Epoch[ 5 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.95948444 * 1227; EvalErrorPrediction = 0.53137734 * 1227; time = 0.7291s; samplesPerSecond = 1682.9
MPI Rank 1: 08/04/2016 14:00:17:  Epoch[ 5 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.84489650 * 1231; EvalErrorPrediction = 0.53290008 * 1231; time = 0.5322s; samplesPerSecond = 2312.9
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.24 seconds , average latency = 0.08 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     1.05 seconds since last report (0.00 seconds on comm.); 4881 samples processed by 2 workers (2427 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 4.67k samplesPerSecond , throughputPerWorker = 2.33k samplesPerSecond
MPI Rank 1: 08/04/2016 14:00:17:  Epoch[ 5 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.95775969 * 1175; EvalErrorPrediction = 0.54893617 * 1175; time = 0.5074s; samplesPerSecond = 2315.9
MPI Rank 1: 08/04/2016 14:00:18:  Epoch[ 5 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.89546285 * 836; EvalErrorPrediction = 0.53827751 * 836; time = 0.3629s; samplesPerSecond = 2303.6
MPI Rank 1: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.52-seconds latency this time; accumulated time on sync point = 0.76 seconds , average latency = 0.19 seconds
MPI Rank 1: 		(model aggregation stats) 4-th sync:     2.10 seconds since last report (1.05 seconds on comm.); 6149 samples processed by 2 workers (1199 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 2.93k samplesPerSecond , throughputPerWorker = 1.47k samplesPerSecond
MPI Rank 1: 08/04/2016 14:00:19: Finished Epoch[ 5 of 5]: [Training] CrossEntropyWithSoftmax = 1.87419727 * 20480; EvalErrorPrediction = 0.52294922 * 20480; totalSamplesSeen = 102400; learningRatePerSample = 9.7656251e-05; epochTime=5.31872s
MPI Rank 1: 08/04/2016 14:00:19: CNTKCommandTrainEnd: speechTrain
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:19: Action "train" complete.
MPI Rank 1: 
MPI Rank 1: 08/04/2016 14:00:19: __COMPLETED__
MPI Rank 1: ~MPIWrapper