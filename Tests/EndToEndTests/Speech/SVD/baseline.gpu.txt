CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU E5-2630 v2 @ 2.60GHz
    Hardware threads: 24
    Total Memory: 264172964 kB
-------------------------------------------------------------------
=== Running /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/gpu/release/bin/cntk configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/SVD/cntk.cntk currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data RunDir=/tmp/cntk-test-20160804135211.433559/Speech_SVD@release_gpu DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/SVD OutputDir=/tmp/cntk-test-20160804135211.433559/Speech_SVD@release_gpu DeviceId=0 timestamping=true
-------------------------------------------------------------------
Build info: 

		Built time: Aug  4 2016 13:05:36
		Last modified date: Thu Aug  4 12:33:33 2016
		Build type: release
		Build target: GPU
		With 1bit-SGD: no
		Math lib: mkl
		CUDA_PATH: /usr/local/cuda-7.5
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local/cudnn-4.0
		Build Branch: HEAD
		Build SHA1: 0f61695dfc335f2406284d335678f57c215e6e9c
		Built by philly on 643085f7f8c2
		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
-------------------------------------------------------------------
Changed current directory to /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
08/04/2016 13:56:12: -------------------------------------------------------------------
08/04/2016 13:56:12: Build info: 

08/04/2016 13:56:12: 		Built time: Aug  4 2016 13:05:36
08/04/2016 13:56:12: 		Last modified date: Thu Aug  4 12:33:33 2016
08/04/2016 13:56:12: 		Build type: release
08/04/2016 13:56:12: 		Build target: GPU
08/04/2016 13:56:12: 		With 1bit-SGD: no
08/04/2016 13:56:12: 		Math lib: mkl
08/04/2016 13:56:12: 		CUDA_PATH: /usr/local/cuda-7.5
08/04/2016 13:56:12: 		CUB_PATH: /usr/local/cub-1.4.1
08/04/2016 13:56:12: 		CUDNN_PATH: /usr/local/cudnn-4.0
08/04/2016 13:56:12: 		Build Branch: HEAD
08/04/2016 13:56:12: 		Build SHA1: 0f61695dfc335f2406284d335678f57c215e6e9c
08/04/2016 13:56:12: 		Built by philly on 643085f7f8c2
08/04/2016 13:56:12: 		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
08/04/2016 13:56:12: -------------------------------------------------------------------
08/04/2016 13:56:14: -------------------------------------------------------------------
08/04/2016 13:56:14: GPU info:

08/04/2016 13:56:14: 		Device[0]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
08/04/2016 13:56:14: 		Device[1]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
08/04/2016 13:56:14: 		Device[2]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
08/04/2016 13:56:14: 		Device[3]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
08/04/2016 13:56:14: -------------------------------------------------------------------

08/04/2016 13:56:14: Running on localhost at 2016/08/04 13:56:14
08/04/2016 13:56:14: Command line: 
/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/gpu/release/bin/cntk  configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/SVD/cntk.cntk  currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data  RunDir=/tmp/cntk-test-20160804135211.433559/Speech_SVD@release_gpu  DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data  ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/SVD  OutputDir=/tmp/cntk-test-20160804135211.433559/Speech_SVD@release_gpu  DeviceId=0  timestamping=true



08/04/2016 13:56:14: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
08/04/2016 13:56:14: precision=float
command=speechTrain:modelDecomposition:SVDTrain
deviceId=$DeviceId$
speechTrain=[
    action=train
    makeMode=false
    modelPath=$RunDir$/models/cntkSpeech.dnn
    deviceId=$DeviceId$
    traceLevel=1
    SimpleNetworkBuilder=[
        layerSizes=363:512:512:132
        trainingCriterion=CrossEntropyWithSoftmax
        evalCriterion=ErrorPrediction
        layerTypes=Sigmoid
        applyMeanVarNorm=true
        initValueScale=1.0
        uniformInit=true
        needPrior=true
    ]
    SGD=[
        epochSize=20480
        minibatchSize=64:256:1024
        learningRatesPerMB=1.0:0.5:0.1
        numMBsToShowResult=10
        momentumPerMB=0.9:0.656119
        dropoutRate=0.0
        maxEpochs=3
        keepCheckPointFiles=false
        clippingThresholdPerSample=1#INF
    ]
]
reader=[
    readerType=HTKMLFReader
    readMethod=blockRandomize
    miniBatchMode=Partial
    randomize=Auto
    verbosity=0
    features=[
        dim=363
        type=Real
        scpFile=glob_0000.scp
    ]
    labels=[
        mlfFile=$DataDir$/glob_0000.mlf
        labelMappingFile=$DataDir$/state.list
        labelDim=132
        labelType=Category
    ]
]
modelDecomposition=[
    action=SVD
    modelPath=$RunDir$/models/cntkSpeech.dnn
    outputmodelPath=$RunDir$/models/cntkSpeech.svd.dnn.0
    KeepRatio=0.5
    NodeNameRegex=W.*
]
SVDTrain=[
    action=train
    makeMode=true
    modelPath=$RunDir$/models/cntkSpeech.svd.dnn
    deviceId=$DeviceId$
    traceLevel=1
    NDLNetworkBuilder=[
        NetworkDescription=$RunDir$/nonExistent.ndl
    ]
    SGD=[
        epochSize=20480
        minibatchSize=1024
        learningRatesPerMB=0.1
        numMBsToShowResult=10
        momentumPerMB=0.656119
        dropoutRate=0.0
        maxEpochs=2
        keepCheckPointFiles=false
        clippingThresholdPerSample=1#INF
    ]
]
currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
RunDir=/tmp/cntk-test-20160804135211.433559/Speech_SVD@release_gpu
DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/SVD
OutputDir=/tmp/cntk-test-20160804135211.433559/Speech_SVD@release_gpu
DeviceId=0
timestamping=true

08/04/2016 13:56:14: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<

08/04/2016 13:56:14: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
08/04/2016 13:56:14: precision=float
command=speechTrain:modelDecomposition:SVDTrain
deviceId=0
speechTrain=[
    action=train
    makeMode=false
    modelPath=/tmp/cntk-test-20160804135211.433559/Speech_SVD@release_gpu/models/cntkSpeech.dnn
    deviceId=0
    traceLevel=1
    SimpleNetworkBuilder=[
        layerSizes=363:512:512:132
        trainingCriterion=CrossEntropyWithSoftmax
        evalCriterion=ErrorPrediction
        layerTypes=Sigmoid
        applyMeanVarNorm=true
        initValueScale=1.0
        uniformInit=true
        needPrior=true
    ]
    SGD=[
        epochSize=20480
        minibatchSize=64:256:1024
        learningRatesPerMB=1.0:0.5:0.1
        numMBsToShowResult=10
        momentumPerMB=0.9:0.656119
        dropoutRate=0.0
        maxEpochs=3
        keepCheckPointFiles=false
        clippingThresholdPerSample=1#INF
    ]
]
reader=[
    readerType=HTKMLFReader
    readMethod=blockRandomize
    miniBatchMode=Partial
    randomize=Auto
    verbosity=0
    features=[
        dim=363
        type=Real
        scpFile=glob_0000.scp
    ]
    labels=[
        mlfFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf
        labelMappingFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list
        labelDim=132
        labelType=Category
    ]
]
modelDecomposition=[
    action=SVD
    modelPath=/tmp/cntk-test-20160804135211.433559/Speech_SVD@release_gpu/models/cntkSpeech.dnn
    outputmodelPath=/tmp/cntk-test-20160804135211.433559/Speech_SVD@release_gpu/models/cntkSpeech.svd.dnn.0
    KeepRatio=0.5
    NodeNameRegex=W.*
]
SVDTrain=[
    action=train
    makeMode=true
    modelPath=/tmp/cntk-test-20160804135211.433559/Speech_SVD@release_gpu/models/cntkSpeech.svd.dnn
    deviceId=0
    traceLevel=1
    NDLNetworkBuilder=[
        NetworkDescription=/tmp/cntk-test-20160804135211.433559/Speech_SVD@release_gpu/nonExistent.ndl
    ]
    SGD=[
        epochSize=20480
        minibatchSize=1024
        learningRatesPerMB=0.1
        numMBsToShowResult=10
        momentumPerMB=0.656119
        dropoutRate=0.0
        maxEpochs=2
        keepCheckPointFiles=false
        clippingThresholdPerSample=1#INF
    ]
]
currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
RunDir=/tmp/cntk-test-20160804135211.433559/Speech_SVD@release_gpu
DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/SVD
OutputDir=/tmp/cntk-test-20160804135211.433559/Speech_SVD@release_gpu
DeviceId=0
timestamping=true

08/04/2016 13:56:14: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<

08/04/2016 13:56:14: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
configparameters: cntk.cntk:command=speechTrain:modelDecomposition:SVDTrain
configparameters: cntk.cntk:ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/SVD
configparameters: cntk.cntk:currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
configparameters: cntk.cntk:DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
configparameters: cntk.cntk:deviceId=0
configparameters: cntk.cntk:modelDecomposition=[
    action=SVD
    modelPath=/tmp/cntk-test-20160804135211.433559/Speech_SVD@release_gpu/models/cntkSpeech.dnn
    outputmodelPath=/tmp/cntk-test-20160804135211.433559/Speech_SVD@release_gpu/models/cntkSpeech.svd.dnn.0
    KeepRatio=0.5
    NodeNameRegex=W.*
]

configparameters: cntk.cntk:OutputDir=/tmp/cntk-test-20160804135211.433559/Speech_SVD@release_gpu
configparameters: cntk.cntk:precision=float
configparameters: cntk.cntk:reader=[
    readerType=HTKMLFReader
    readMethod=blockRandomize
    miniBatchMode=Partial
    randomize=Auto
    verbosity=0
    features=[
        dim=363
        type=Real
        scpFile=glob_0000.scp
    ]
    labels=[
        mlfFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf
        labelMappingFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list
        labelDim=132
        labelType=Category
    ]
]

configparameters: cntk.cntk:RunDir=/tmp/cntk-test-20160804135211.433559/Speech_SVD@release_gpu
configparameters: cntk.cntk:speechTrain=[
    action=train
    makeMode=false
    modelPath=/tmp/cntk-test-20160804135211.433559/Speech_SVD@release_gpu/models/cntkSpeech.dnn
    deviceId=0
    traceLevel=1
    SimpleNetworkBuilder=[
        layerSizes=363:512:512:132
        trainingCriterion=CrossEntropyWithSoftmax
        evalCriterion=ErrorPrediction
        layerTypes=Sigmoid
        applyMeanVarNorm=true
        initValueScale=1.0
        uniformInit=true
        needPrior=true
    ]
    SGD=[
        epochSize=20480
        minibatchSize=64:256:1024
        learningRatesPerMB=1.0:0.5:0.1
        numMBsToShowResult=10
        momentumPerMB=0.9:0.656119
        dropoutRate=0.0
        maxEpochs=3
        keepCheckPointFiles=false
        clippingThresholdPerSample=1#INF
    ]
]

configparameters: cntk.cntk:SVDTrain=[
    action=train
    makeMode=true
    modelPath=/tmp/cntk-test-20160804135211.433559/Speech_SVD@release_gpu/models/cntkSpeech.svd.dnn
    deviceId=0
    traceLevel=1
    NDLNetworkBuilder=[
        NetworkDescription=/tmp/cntk-test-20160804135211.433559/Speech_SVD@release_gpu/nonExistent.ndl
    ]
    SGD=[
        epochSize=20480
        minibatchSize=1024
        learningRatesPerMB=0.1
        numMBsToShowResult=10
        momentumPerMB=0.656119
        dropoutRate=0.0
        maxEpochs=2
        keepCheckPointFiles=false
        clippingThresholdPerSample=1#INF
    ]
]

configparameters: cntk.cntk:timestamping=true
08/04/2016 13:56:14: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
08/04/2016 13:56:14: Commands: speechTrain modelDecomposition SVDTrain
08/04/2016 13:56:14: Precision = "float"
08/04/2016 13:56:14: CNTKModelPath: /tmp/cntk-test-20160804135211.433559/Speech_SVD@release_gpu/models/cntkSpeech.dnn
08/04/2016 13:56:14: CNTKCommandTrainInfo: speechTrain : 3
08/04/2016 13:56:14: CNTKModelPath: /tmp/cntk-test-20160804135211.433559/Speech_SVD@release_gpu/models/cntkSpeech.svd.dnn
08/04/2016 13:56:14: CNTKCommandTrainInfo: SVDTrain : 2
08/04/2016 13:56:14: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 5

08/04/2016 13:56:14: ##############################################################################
08/04/2016 13:56:14: #                                                                            #
08/04/2016 13:56:14: # Action "train"                                                             #
08/04/2016 13:56:14: #                                                                            #
08/04/2016 13:56:14: ##############################################################################

08/04/2016 13:56:14: CNTKCommandTrainBegin: speechTrain
SimpleNetworkBuilder Using GPU 0
reading script file glob_0000.scp ... 948 entries
total 132 state names in state list /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list
htkmlfreader: reading MLF file /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf ... total 948 entries
...............................................................................................feature set 0: 252734 frames in 948 out of 948 utterances
label set 0: 129 classes
minibatchutterancesource: 948 utterances grouped into 3 chunks, av. chunk size: 316.0 utterances, 84244.7 frames

08/04/2016 13:56:14: Creating virgin network.
SetUniformRandomValue (GPU): creating curand object with seed 1, sizeof(ElemType)==4

Post-processing network...

7 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	EvalErrorPrediction = ErrorPrediction()
	InvStdOfFeatures = InvStdDev()
	MeanOfFeatures = Mean()
	PosteriorProb = Softmax()
	Prior = Mean()
	ScaledLogLikelihood = Minus()

Validating network. 25 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [132 x *]
Validating --> W2 = LearnableParameter() :  -> [132 x 512]
Validating --> W1 = LearnableParameter() :  -> [512 x 512]
Validating --> W0 = LearnableParameter() :  -> [512 x 363]
Validating --> features = InputValue() :  -> [363 x *]
Validating --> MeanOfFeatures = Mean (features) : [363 x *] -> [363]
Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *] -> [363]
Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *], [363], [363] -> [363 x *]
Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [512 x 363], [363 x *] -> [512 x *]
Validating --> B0 = LearnableParameter() :  -> [512 x 1]
Validating --> W0*features+B0 = Plus (W0*features, B0) : [512 x *], [512 x 1] -> [512 x 1 x *]
Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *] -> [512 x 1 x *]
Validating --> W1*H1 = Times (W1, H1) : [512 x 512], [512 x 1 x *] -> [512 x 1 x *]
Validating --> B1 = LearnableParameter() :  -> [512 x 1]
Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [512 x 1 x *], [512 x 1] -> [512 x 1 x *]
Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *] -> [512 x 1 x *]
Validating --> W2*H1 = Times (W2, H2) : [132 x 512], [512 x 1 x *] -> [132 x 1 x *]
Validating --> B2 = LearnableParameter() :  -> [132 x 1]
Validating --> HLast = Plus (W2*H1, B2) : [132 x 1 x *], [132 x 1] -> [132 x 1 x *]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *] -> [132 x 1 x *]
Validating --> Prior = Mean (labels) : [132 x *] -> [132]
Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *], [132] -> [132 x 1 x *]

Validating network. 17 nodes to process in pass 2.


Validating network, final pass.



12 out of 25 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

08/04/2016 13:56:14: Created model with 25 nodes on GPU 0.

08/04/2016 13:56:14: Training criterion node(s):
08/04/2016 13:56:14: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax

08/04/2016 13:56:14: Evaluation criterion node(s):

08/04/2016 13:56:14: 	EvalErrorPrediction = ErrorPrediction


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

(nil): {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[363]] [LogOfPrior Gradient[132]] [MVNormalizedFeatures Gradient[363 x *]] [MeanOfFeatures Gradient[363]] [PosteriorProb Gradient[132 x 1 x *]] [PosteriorProb Value[132 x 1 x *]] [Prior Gradient[132]] [ScaledLogLikelihood Gradient[132 x 1 x *]] [features Gradient[363 x *]] [labels Gradient[132 x *]] }
0x2ee5488: {[features Value[363 x *]] }
0x7f9e8d6c5ba8: {[B1 Value[512 x 1]] }
0x7f9e8d6c6d68: {[W2 Value[132 x 512]] }
0x7f9e8d6c74f8: {[B2 Value[132 x 1]] }
0x7f9e8d6c8868: {[labels Value[132 x *]] }
0x7f9e8d6c9ad8: {[Prior Value[132]] }
0x7f9e8d6cf708: {[EvalErrorPrediction Value[1]] }
0x7f9e8d6cf868: {[ScaledLogLikelihood Value[132 x 1 x *]] }
0x7f9e8d6cfa28: {[CrossEntropyWithSoftmax Value[1]] }
0x7f9e8d6cff68: {[LogOfPrior Value[132]] }
0x7f9e8d6d1878: {[W0*features Value[512 x *]] }
0x7f9e8d6d19c8: {[MVNormalizedFeatures Value[363 x *]] }
0x7f9e8d6d1da8: {[W0 Gradient[512 x 363]] [W0*features+B0 Value[512 x 1 x *]] }
0x7f9e8d6d1f08: {[H1 Value[512 x 1 x *]] [W0*features Gradient[512 x *]] }
0x7f9e8d6d2068: {[W0*features+B0 Gradient[512 x 1 x *]] [W1*H1 Value[512 x 1 x *]] }
0x7f9e8d6d21c8: {[W1 Gradient[512 x 512]] [W1*H1+B1 Value[512 x 1 x *]] }
0x7f9e8d6d2388: {[H2 Value[512 x 1 x *]] [W1*H1 Gradient[512 x 1 x *]] }
0x7f9e8d6d2548: {[B0 Gradient[512 x 1]] [H1 Gradient[512 x 1 x *]] [W1*H1+B1 Gradient[512 x 1 x *]] [W2*H1 Value[132 x 1 x *]] }
0x7f9e8d6d2708: {[HLast Value[132 x 1 x *]] [W2 Gradient[132 x 512]] }
0x7f9e8d6d3298: {[CrossEntropyWithSoftmax Gradient[1]] }
0x7f9e8d6d3458: {[B1 Gradient[512 x 1]] [H2 Gradient[512 x 1 x *]] [HLast Gradient[132 x 1 x *]] }
0x7f9e8d6d3618: {[W2*H1 Gradient[132 x 1 x *]] }
0x7f9e8d6d37d8: {[B2 Gradient[132 x 1]] }
0x7f9e8dc00448: {[B0 Value[512 x 1]] }
0x7f9e8dc02668: {[W1 Value[512 x 512]] }
0x7f9e8df7d588: {[MeanOfFeatures Value[363]] }
0x7f9e8df7da68: {[InvStdOfFeatures Value[363]] }
0x7f9e8df7e788: {[W0 Value[512 x 363]] }


08/04/2016 13:56:14: Precomputing --> 3 PreCompute nodes found.

08/04/2016 13:56:14: 	MeanOfFeatures = Mean()
08/04/2016 13:56:14: 	InvStdOfFeatures = InvStdDev()
08/04/2016 13:56:14: 	Prior = Mean()
minibatchiterator: epoch 0: frames [0..252734] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
requiredata: determined feature kind as 33-dimensional 'USER' with frame shift 10.0 ms

08/04/2016 13:56:15: Precomputing --> Completed.


08/04/2016 13:56:15: Starting Epoch 1: learning rate per sample = 0.015625  effective momentum = 0.900000  momentum as time constant = 607.4 samples
minibatchiterator: epoch 0: frames [0..20480] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses

08/04/2016 13:56:15: Starting minibatch loop.
08/04/2016 13:56:15:  Epoch[ 1 of 3]-Minibatch[   1-  10, 3.12%]: CrossEntropyWithSoftmax = 4.56770096 * 640; EvalErrorPrediction = 0.93750000 * 640; time = 0.0104s; samplesPerSecond = 61320.3
08/04/2016 13:56:15:  Epoch[ 1 of 3]-Minibatch[  11-  20, 6.25%]: CrossEntropyWithSoftmax = 4.29114151 * 640; EvalErrorPrediction = 0.91093750 * 640; time = 0.0076s; samplesPerSecond = 84022.6
08/04/2016 13:56:15:  Epoch[ 1 of 3]-Minibatch[  21-  30, 9.38%]: CrossEntropyWithSoftmax = 4.03164825 * 640; EvalErrorPrediction = 0.86406250 * 640; time = 0.0076s; samplesPerSecond = 84466.1
08/04/2016 13:56:15:  Epoch[ 1 of 3]-Minibatch[  31-  40, 12.50%]: CrossEntropyWithSoftmax = 3.91688080 * 640; EvalErrorPrediction = 0.87031250 * 640; time = 0.0076s; samplesPerSecond = 84177.3
08/04/2016 13:56:15:  Epoch[ 1 of 3]-Minibatch[  41-  50, 15.62%]: CrossEntropyWithSoftmax = 3.75344696 * 640; EvalErrorPrediction = 0.84531250 * 640; time = 0.0076s; samplesPerSecond = 84177.3
08/04/2016 13:56:15:  Epoch[ 1 of 3]-Minibatch[  51-  60, 18.75%]: CrossEntropyWithSoftmax = 3.79208069 * 640; EvalErrorPrediction = 0.87656250 * 640; time = 0.0076s; samplesPerSecond = 84232.7
08/04/2016 13:56:15:  Epoch[ 1 of 3]-Minibatch[  61-  70, 21.88%]: CrossEntropyWithSoftmax = 3.57858582 * 640; EvalErrorPrediction = 0.83906250 * 640; time = 0.0076s; samplesPerSecond = 83956.4
08/04/2016 13:56:15:  Epoch[ 1 of 3]-Minibatch[  71-  80, 25.00%]: CrossEntropyWithSoftmax = 3.42415161 * 640; EvalErrorPrediction = 0.79375000 * 640; time = 0.0076s; samplesPerSecond = 84466.1
08/04/2016 13:56:15:  Epoch[ 1 of 3]-Minibatch[  81-  90, 28.12%]: CrossEntropyWithSoftmax = 3.47279358 * 640; EvalErrorPrediction = 0.81875000 * 640; time = 0.0076s; samplesPerSecond = 84243.8
08/04/2016 13:56:15:  Epoch[ 1 of 3]-Minibatch[  91- 100, 31.25%]: CrossEntropyWithSoftmax = 3.39085693 * 640; EvalErrorPrediction = 0.80468750 * 640; time = 0.0076s; samplesPerSecond = 84254.9
08/04/2016 13:56:15:  Epoch[ 1 of 3]-Minibatch[ 101- 110, 34.38%]: CrossEntropyWithSoftmax = 3.43551025 * 640; EvalErrorPrediction = 0.82500000 * 640; time = 0.0076s; samplesPerSecond = 84243.8
08/04/2016 13:56:15:  Epoch[ 1 of 3]-Minibatch[ 111- 120, 37.50%]: CrossEntropyWithSoftmax = 3.13014526 * 640; EvalErrorPrediction = 0.77500000 * 640; time = 0.0077s; samplesPerSecond = 83594.6
08/04/2016 13:56:15:  Epoch[ 1 of 3]-Minibatch[ 121- 130, 40.62%]: CrossEntropyWithSoftmax = 3.16283569 * 640; EvalErrorPrediction = 0.75156250 * 640; time = 0.0076s; samplesPerSecond = 84421.6
08/04/2016 13:56:15:  Epoch[ 1 of 3]-Minibatch[ 131- 140, 43.75%]: CrossEntropyWithSoftmax = 3.12517395 * 640; EvalErrorPrediction = 0.74843750 * 640; time = 0.0076s; samplesPerSecond = 84723.3
08/04/2016 13:56:15:  Epoch[ 1 of 3]-Minibatch[ 141- 150, 46.88%]: CrossEntropyWithSoftmax = 3.08533020 * 640; EvalErrorPrediction = 0.74375000 * 640; time = 0.0076s; samplesPerSecond = 84712.1
08/04/2016 13:56:15:  Epoch[ 1 of 3]-Minibatch[ 151- 160, 50.00%]: CrossEntropyWithSoftmax = 3.05239258 * 640; EvalErrorPrediction = 0.75156250 * 640; time = 0.0076s; samplesPerSecond = 84310.4
08/04/2016 13:56:15:  Epoch[ 1 of 3]-Minibatch[ 161- 170, 53.12%]: CrossEntropyWithSoftmax = 3.02040405 * 640; EvalErrorPrediction = 0.72968750 * 640; time = 0.0076s; samplesPerSecond = 84656.1
08/04/2016 13:56:15:  Epoch[ 1 of 3]-Minibatch[ 171- 180, 56.25%]: CrossEntropyWithSoftmax = 2.84132690 * 640; EvalErrorPrediction = 0.70156250 * 640; time = 0.0075s; samplesPerSecond = 84824.4
08/04/2016 13:56:15:  Epoch[ 1 of 3]-Minibatch[ 181- 190, 59.38%]: CrossEntropyWithSoftmax = 2.84436646 * 640; EvalErrorPrediction = 0.69062500 * 640; time = 0.0076s; samplesPerSecond = 84633.7
08/04/2016 13:56:15:  Epoch[ 1 of 3]-Minibatch[ 191- 200, 62.50%]: CrossEntropyWithSoftmax = 2.74920654 * 640; EvalErrorPrediction = 0.70312500 * 640; time = 0.0076s; samplesPerSecond = 84099.9
08/04/2016 13:56:15:  Epoch[ 1 of 3]-Minibatch[ 201- 210, 65.62%]: CrossEntropyWithSoftmax = 2.78848877 * 640; EvalErrorPrediction = 0.68125000 * 640; time = 0.0077s; samplesPerSecond = 83290.0
08/04/2016 13:56:15:  Epoch[ 1 of 3]-Minibatch[ 211- 220, 68.75%]: CrossEntropyWithSoftmax = 2.62880249 * 640; EvalErrorPrediction = 0.69062500 * 640; time = 0.0076s; samplesPerSecond = 84689.7
08/04/2016 13:56:15:  Epoch[ 1 of 3]-Minibatch[ 221- 230, 71.88%]: CrossEntropyWithSoftmax = 2.55242920 * 640; EvalErrorPrediction = 0.65312500 * 640; time = 0.0076s; samplesPerSecond = 83890.4
08/04/2016 13:56:15:  Epoch[ 1 of 3]-Minibatch[ 231- 240, 75.00%]: CrossEntropyWithSoftmax = 2.45291748 * 640; EvalErrorPrediction = 0.64687500 * 640; time = 0.0077s; samplesPerSecond = 83030.6
08/04/2016 13:56:15:  Epoch[ 1 of 3]-Minibatch[ 241- 250, 78.12%]: CrossEntropyWithSoftmax = 2.47334595 * 640; EvalErrorPrediction = 0.63437500 * 640; time = 0.0076s; samplesPerSecond = 84377.1
08/04/2016 13:56:15:  Epoch[ 1 of 3]-Minibatch[ 251- 260, 81.25%]: CrossEntropyWithSoftmax = 2.42160034 * 640; EvalErrorPrediction = 0.62656250 * 640; time = 0.0076s; samplesPerSecond = 84712.1
08/04/2016 13:56:15:  Epoch[ 1 of 3]-Minibatch[ 261- 270, 84.38%]: CrossEntropyWithSoftmax = 2.32047729 * 640; EvalErrorPrediction = 0.63125000 * 640; time = 0.0076s; samplesPerSecond = 84011.6
08/04/2016 13:56:15:  Epoch[ 1 of 3]-Minibatch[ 271- 280, 87.50%]: CrossEntropyWithSoftmax = 2.43919067 * 640; EvalErrorPrediction = 0.62500000 * 640; time = 0.0076s; samplesPerSecond = 84399.3
08/04/2016 13:56:15:  Epoch[ 1 of 3]-Minibatch[ 281- 290, 90.62%]: CrossEntropyWithSoftmax = 2.40628662 * 640; EvalErrorPrediction = 0.60781250 * 640; time = 0.0076s; samplesPerSecond = 84033.6
08/04/2016 13:56:15:  Epoch[ 1 of 3]-Minibatch[ 291- 300, 93.75%]: CrossEntropyWithSoftmax = 2.22095947 * 640; EvalErrorPrediction = 0.58593750 * 640; time = 0.0076s; samplesPerSecond = 84354.8
08/04/2016 13:56:15:  Epoch[ 1 of 3]-Minibatch[ 301- 310, 96.88%]: CrossEntropyWithSoftmax = 2.33117676 * 640; EvalErrorPrediction = 0.60468750 * 640; time = 0.0076s; samplesPerSecond = 84210.5
08/04/2016 13:56:15:  Epoch[ 1 of 3]-Minibatch[ 311- 320, 100.00%]: CrossEntropyWithSoftmax = 2.19744873 * 640; EvalErrorPrediction = 0.57343750 * 640; time = 0.0076s; samplesPerSecond = 84343.7
08/04/2016 13:56:15: Finished Epoch[ 1 of 3]: [Training] CrossEntropyWithSoftmax = 3.05934696 * 20480; EvalErrorPrediction = 0.73569336 * 20480; totalSamplesSeen = 20480; learningRatePerSample = 0.015625; epochTime=0.24868s
08/04/2016 13:56:15: SGD: Saving checkpoint model '/tmp/cntk-test-20160804135211.433559/Speech_SVD@release_gpu/models/cntkSpeech.dnn.1'

08/04/2016 13:56:15: Starting Epoch 2: learning rate per sample = 0.001953  effective momentum = 0.656119  momentum as time constant = 607.5 samples
minibatchiterator: epoch 1: frames [20480..40960] (first utterance at frame 20480), data subset 0 of 1, with 1 datapasses

08/04/2016 13:56:15: Starting minibatch loop.
08/04/2016 13:56:15:  Epoch[ 2 of 3]-Minibatch[   1-  10, 12.50%]: CrossEntropyWithSoftmax = 2.11527462 * 2560; EvalErrorPrediction = 0.58085937 * 2560; time = 0.0143s; samplesPerSecond = 178696.1
08/04/2016 13:56:15:  Epoch[ 2 of 3]-Minibatch[  11-  20, 25.00%]: CrossEntropyWithSoftmax = 2.09459248 * 2560; EvalErrorPrediction = 0.57070312 * 2560; time = 0.0122s; samplesPerSecond = 209526.9
08/04/2016 13:56:15:  Epoch[ 2 of 3]-Minibatch[  21-  30, 37.50%]: CrossEntropyWithSoftmax = 1.98303680 * 2560; EvalErrorPrediction = 0.54687500 * 2560; time = 0.0122s; samplesPerSecond = 210457.1
08/04/2016 13:56:15:  Epoch[ 2 of 3]-Minibatch[  31-  40, 50.00%]: CrossEntropyWithSoftmax = 2.02675705 * 2560; EvalErrorPrediction = 0.54570312 * 2560; time = 0.0122s; samplesPerSecond = 210266.9
08/04/2016 13:56:15:  Epoch[ 2 of 3]-Minibatch[  41-  50, 62.50%]: CrossEntropyWithSoftmax = 1.97677460 * 2560; EvalErrorPrediction = 0.53789062 * 2560; time = 0.0122s; samplesPerSecond = 209991.0
08/04/2016 13:56:15:  Epoch[ 2 of 3]-Minibatch[  51-  60, 75.00%]: CrossEntropyWithSoftmax = 1.94229202 * 2560; EvalErrorPrediction = 0.52929688 * 2560; time = 0.0122s; samplesPerSecond = 210509.0
08/04/2016 13:56:15:  Epoch[ 2 of 3]-Minibatch[  61-  70, 87.50%]: CrossEntropyWithSoftmax = 1.91903610 * 2560; EvalErrorPrediction = 0.53710938 * 2560; time = 0.0122s; samplesPerSecond = 209956.5
08/04/2016 13:56:15:  Epoch[ 2 of 3]-Minibatch[  71-  80, 100.00%]: CrossEntropyWithSoftmax = 1.94897614 * 2560; EvalErrorPrediction = 0.52226562 * 2560; time = 0.0122s; samplesPerSecond = 209167.4
08/04/2016 13:56:15: Finished Epoch[ 2 of 3]: [Training] CrossEntropyWithSoftmax = 2.00084248 * 20480; EvalErrorPrediction = 0.54633789 * 20480; totalSamplesSeen = 40960; learningRatePerSample = 0.001953125; epochTime=0.101698s
08/04/2016 13:56:15: SGD: Saving checkpoint model '/tmp/cntk-test-20160804135211.433559/Speech_SVD@release_gpu/models/cntkSpeech.dnn.2'

08/04/2016 13:56:15: Starting Epoch 3: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
minibatchiterator: epoch 2: frames [40960..61440] (first utterance at frame 40960), data subset 0 of 1, with 1 datapasses

08/04/2016 13:56:15: Starting minibatch loop.
08/04/2016 13:56:15:  Epoch[ 3 of 3]-Minibatch[   1-  10, 50.00%]: CrossEntropyWithSoftmax = 1.91893272 * 10240; EvalErrorPrediction = 0.52929688 * 10240; time = 0.0342s; samplesPerSecond = 299318.9
08/04/2016 13:56:15:  Epoch[ 3 of 3]-Minibatch[  11-  20, 100.00%]: CrossEntropyWithSoftmax = 1.92774010 * 10240; EvalErrorPrediction = 0.53701172 * 10240; time = 0.0301s; samplesPerSecond = 339826.8
08/04/2016 13:56:15: Finished Epoch[ 3 of 3]: [Training] CrossEntropyWithSoftmax = 1.92333641 * 20480; EvalErrorPrediction = 0.53315430 * 20480; totalSamplesSeen = 61440; learningRatePerSample = 9.7656251e-05; epochTime=0.068282s
08/04/2016 13:56:15: SGD: Saving checkpoint model '/tmp/cntk-test-20160804135211.433559/Speech_SVD@release_gpu/models/cntkSpeech.dnn'
08/04/2016 13:56:15: CNTKCommandTrainEnd: speechTrain

08/04/2016 13:56:15: Action "train" complete.


08/04/2016 13:56:15: ##############################################################################
08/04/2016 13:56:15: #                                                                            #
08/04/2016 13:56:15: # Action "SVD"                                                               #
08/04/2016 13:56:15: #                                                                            #
08/04/2016 13:56:15: ##############################################################################


Post-processing network...

7 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	EvalErrorPrediction = ErrorPrediction()
	InvStdOfFeatures = InvStdDev()
	MeanOfFeatures = Mean()
	PosteriorProb = Softmax()
	Prior = Mean()
	ScaledLogLikelihood = Minus()

Validating network. 25 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [132 x *1]
Validating --> W2 = LearnableParameter() :  -> [132 x 512]
Validating --> W1 = LearnableParameter() :  -> [512 x 512]
Validating --> W0 = LearnableParameter() :  -> [512 x 363]
Validating --> features = InputValue() :  -> [363 x *1]
Validating --> MeanOfFeatures = Mean (features) : [363 x *1] -> [363]
Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *1] -> [363]
Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *1], [363], [363] -> [363 x *1]
Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [512 x 363], [363 x *1] -> [512 x *1]
Validating --> B0 = LearnableParameter() :  -> [512 x 1]
Validating --> W0*features+B0 = Plus (W0*features, B0) : [512 x *1], [512 x 1] -> [512 x 1 x *1]
Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *1] -> [512 x 1 x *1]
Validating --> W1*H1 = Times (W1, H1) : [512 x 512], [512 x 1 x *1] -> [512 x 1 x *1]
Validating --> B1 = LearnableParameter() :  -> [512 x 1]
Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [512 x 1 x *1], [512 x 1] -> [512 x 1 x *1]
Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *1] -> [512 x 1 x *1]
Validating --> W2*H1 = Times (W2, H2) : [132 x 512], [512 x 1 x *1] -> [132 x 1 x *1]
Validating --> B2 = LearnableParameter() :  -> [132 x 1]
Validating --> HLast = Plus (W2*H1, B2) : [132 x 1 x *1], [132 x 1] -> [132 x 1 x *1]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *1], [132 x 1 x *1] -> [1]
Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *1], [132 x 1 x *1] -> [1]
Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *1] -> [132 x 1 x *1]
Validating --> Prior = Mean (labels) : [132 x *1] -> [132]
Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *1], [132] -> [132 x 1 x *1]

Validating network. 17 nodes to process in pass 2.


Validating network, final pass.



12 out of 25 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

--------------------------------------------------------------------------------------------
ParameterSVD: start to process group 0 with KeepRatio=0.50
--------------------------------------------------------------------------------------------
Performing SVD for a   512-by-363   matrix (node name: W0                  ) ---  computation time  0.12 secs ;  keep 50.0% energy ===> keep   104 svd values (reduce to 49.0% parameters) 
Performing SVD for a   512-by-512   matrix (node name: W1                  ) ---  computation time  0.24 secs ;  keep 50.0% energy ===> keep   128 svd values (reduce to 50.0% parameters) 
Performing SVD for a   132-by-512   matrix (node name: W2                  ) ---  computation time  0.03 secs ;  keep 50.0% energy ===> keep    32 svd values (reduce to 30.5% parameters) 

Post-processing network...

7 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	EvalErrorPrediction = ErrorPrediction()
	InvStdOfFeatures = InvStdDev()
	MeanOfFeatures = Mean()
	PosteriorProb = Softmax()
	Prior = Mean()
	ScaledLogLikelihood = Minus()

Validating network. 31 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [132 x *1]
Validating --> W2_U = LearnableParameter() :  -> [132 x 32]
Validating --> W2_V = LearnableParameter() :  -> [32 x 512]
Validating --> W1_U = LearnableParameter() :  -> [512 x 128]
Validating --> W1_V = LearnableParameter() :  -> [128 x 512]
Validating --> W0_U = LearnableParameter() :  -> [512 x 104]
Validating --> W0_V = LearnableParameter() :  -> [104 x 363]
Validating --> features = InputValue() :  -> [363 x *1]
Validating --> MeanOfFeatures = Mean (features) : [363 x *1] -> [363]
Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *1] -> [363]
Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *1], [363], [363] -> [363 x *1]
Validating --> W0*features = Times (W0_V, MVNormalizedFeatures) : [104 x 363], [363 x *1] -> [104 x *1]
Validating --> W0_SVD = Times (W0_U, W0*features) : [512 x 104], [104 x *1] -> [512 x *1]
Validating --> B0 = LearnableParameter() :  -> [512 x 1]
Validating --> W0*features+B0 = Plus (W0_SVD, B0) : [512 x *1], [512 x 1] -> [512 x 1 x *1]
Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *1] -> [512 x 1 x *1]
Validating --> W1*H1 = Times (W1_V, H1) : [128 x 512], [512 x 1 x *1] -> [128 x 1 x *1]
Validating --> W1_SVD = Times (W1_U, W1*H1) : [512 x 128], [128 x 1 x *1] -> [512 x 1 x *1]
Validating --> B1 = LearnableParameter() :  -> [512 x 1]
Validating --> W1*H1+B1 = Plus (W1_SVD, B1) : [512 x 1 x *1], [512 x 1] -> [512 x 1 x *1]
Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *1] -> [512 x 1 x *1]
Validating --> W2*H1 = Times (W2_V, H2) : [32 x 512], [512 x 1 x *1] -> [32 x 1 x *1]
Validating --> W2_SVD = Times (W2_U, W2*H1) : [132 x 32], [32 x 1 x *1] -> [132 x 1 x *1]
Validating --> B2 = LearnableParameter() :  -> [132 x 1]
Validating --> HLast = Plus (W2_SVD, B2) : [132 x 1 x *1], [132 x 1] -> [132 x 1 x *1]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *1], [132 x 1 x *1] -> [1]
Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *1], [132 x 1 x *1] -> [1]
Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *1] -> [132 x 1 x *1]
Validating --> Prior = Mean (labels) : [132 x *1] -> [132]
Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *1], [132] -> [132 x 1 x *1]

Validating network. 16 nodes to process in pass 2.


Validating network, final pass.



15 out of 31 nodes do not share the minibatch layout with the input data.

Post-processing network complete.


08/04/2016 13:56:16: Action "SVD" complete.


08/04/2016 13:56:16: ##############################################################################
08/04/2016 13:56:16: #                                                                            #
08/04/2016 13:56:16: # Action "train"                                                             #
08/04/2016 13:56:16: #                                                                            #
08/04/2016 13:56:16: ##############################################################################

08/04/2016 13:56:16: CNTKCommandTrainBegin: SVDTrain
NDLBuilder Using GPU 0
reading script file glob_0000.scp ... 948 entries
total 132 state names in state list /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list
htkmlfreader: reading MLF file /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf ... total 948 entries
...............................................................................................feature set 0: 252734 frames in 948 out of 948 utterances
label set 0: 129 classes
minibatchutterancesource: 948 utterances grouped into 3 chunks, av. chunk size: 316.0 utterances, 84244.7 frames

08/04/2016 13:56:16: Starting from checkpoint. Loading network from '/tmp/cntk-test-20160804135211.433559/Speech_SVD@release_gpu/models/cntkSpeech.svd.dnn.0'.

Post-processing network...

7 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	EvalErrorPrediction = ErrorPrediction()
	InvStdOfFeatures = InvStdDev()
	MeanOfFeatures = Mean()
	PosteriorProb = Softmax()
	Prior = Mean()
	ScaledLogLikelihood = Minus()

Validating network. 31 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [132 x *3]
Validating --> W2_U = LearnableParameter() :  -> [132 x 32]
Validating --> W2_V = LearnableParameter() :  -> [32 x 512]
Validating --> W1_U = LearnableParameter() :  -> [512 x 128]
Validating --> W1_V = LearnableParameter() :  -> [128 x 512]
Validating --> W0_U = LearnableParameter() :  -> [512 x 104]
Validating --> W0_V = LearnableParameter() :  -> [104 x 363]
Validating --> features = InputValue() :  -> [363 x *3]
Validating --> MeanOfFeatures = Mean (features) : [363 x *3] -> [363]
Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *3] -> [363]
Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *3], [363], [363] -> [363 x *3]
Validating --> W0*features = Times (W0_V, MVNormalizedFeatures) : [104 x 363], [363 x *3] -> [104 x *3]
Validating --> W0_SVD = Times (W0_U, W0*features) : [512 x 104], [104 x *3] -> [512 x *3]
Validating --> B0 = LearnableParameter() :  -> [512 x 1]
Validating --> W0*features+B0 = Plus (W0_SVD, B0) : [512 x *3], [512 x 1] -> [512 x 1 x *3]
Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *3] -> [512 x 1 x *3]
Validating --> W1*H1 = Times (W1_V, H1) : [128 x 512], [512 x 1 x *3] -> [128 x 1 x *3]
Validating --> W1_SVD = Times (W1_U, W1*H1) : [512 x 128], [128 x 1 x *3] -> [512 x 1 x *3]
Validating --> B1 = LearnableParameter() :  -> [512 x 1]
Validating --> W1*H1+B1 = Plus (W1_SVD, B1) : [512 x 1 x *3], [512 x 1] -> [512 x 1 x *3]
Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *3] -> [512 x 1 x *3]
Validating --> W2*H1 = Times (W2_V, H2) : [32 x 512], [512 x 1 x *3] -> [32 x 1 x *3]
Validating --> W2_SVD = Times (W2_U, W2*H1) : [132 x 32], [32 x 1 x *3] -> [132 x 1 x *3]
Validating --> B2 = LearnableParameter() :  -> [132 x 1]
Validating --> HLast = Plus (W2_SVD, B2) : [132 x 1 x *3], [132 x 1] -> [132 x 1 x *3]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *3], [132 x 1 x *3] -> [1]
Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *3], [132 x 1 x *3] -> [1]
Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *3] -> [132 x 1 x *3]
Validating --> Prior = Mean (labels) : [132 x *3] -> [132]
Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *3], [132] -> [132 x 1 x *3]

Validating network. 20 nodes to process in pass 2.


Validating network, final pass.



15 out of 31 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

08/04/2016 13:56:16: Loaded model with 31 nodes on GPU 0.

08/04/2016 13:56:16: Training criterion node(s):
08/04/2016 13:56:16: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax

08/04/2016 13:56:16: Evaluation criterion node(s):

08/04/2016 13:56:16: 	EvalErrorPrediction = ErrorPrediction


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

(nil): {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[363]] [LogOfPrior Gradient[132]] [MVNormalizedFeatures Gradient[363 x *3]] [MeanOfFeatures Gradient[363]] [PosteriorProb Gradient[132 x 1 x *3]] [PosteriorProb Value[132 x 1 x *3]] [Prior Gradient[132]] [ScaledLogLikelihood Gradient[132 x 1 x *3]] [features Gradient[363 x *3]] [labels Gradient[132 x *3]] }
0x7f9e8124d308: {[B2 Value[132 x 1]] }
0x7f9e812b77c8: {[W2_U Value[132 x 32]] }
0x7f9e812f8148: {[InvStdOfFeatures Value[363]] }
0x7f9e838a18e8: {[features Value[363 x *3]] }
0x7f9e838a2d78: {[W0*features Gradient[104 x *3]] [W0*features+B0 Gradient[512 x 1 x *3]] [W1*H1 Value[128 x 1 x *3]] }
0x7f9e838a2f38: {[W1_SVD Value[512 x 1 x *3]] [W1_V Gradient[128 x 512]] }
0x7f9e838a30f8: {[W1*H1+B1 Value[512 x 1 x *3]] [W1_U Gradient[512 x 128]] }
0x7f9e838a32b8: {[B0 Gradient[512 x 1]] [H1 Gradient[512 x 1 x *3]] [H2 Value[512 x 1 x *3]] [W1_SVD Gradient[512 x 1 x *3]] }
0x7f9e838a3478: {[W1*H1 Gradient[128 x 1 x *3]] [W1*H1+B1 Gradient[512 x 1 x *3]] [W2*H1 Value[32 x 1 x *3]] }
0x7f9e838a3638: {[W2_SVD Value[132 x 1 x *3]] [W2_V Gradient[32 x 512]] }
0x7f9e838a4d58: {[W0_SVD Value[512 x *3]] [W0_V Gradient[104 x 363]] }
0x7f9e838a5248: {[MVNormalizedFeatures Value[363 x *3]] }
0x7f9e838a5628: {[W0*features Value[104 x *3]] }
0x7f9e8b2085b8: {[Prior Value[132]] }
0x7f9e8b20cde8: {[B0 Value[512 x 1]] }
0x7f9e8b213f78: {[CrossEntropyWithSoftmax Gradient[1]] }
0x7f9e8b214138: {[HLast Gradient[132 x 1 x *3]] [W2*H1 Gradient[32 x 1 x *3]] }
0x7f9e8b2142f8: {[B1 Gradient[512 x 1]] [H2 Gradient[512 x 1 x *3]] [W2_SVD Gradient[132 x 1 x *3]] }
0x7f9e8b2144b8: {[B2 Gradient[132 x 1]] }
0x7f9e8b217798: {[W2_V Value[32 x 512]] }
0x7f9e8b217ce8: {[labels Value[132 x *3]] }
0x7f9e8b218128: {[W0*features+B0 Value[512 x 1 x *3]] [W0_U Gradient[512 x 104]] }
0x7f9e8b2182e8: {[H1 Value[512 x 1 x *3]] [W0_SVD Gradient[512 x *3]] }
0x7f9e8b218528: {[LogOfPrior Value[132]] }
0x7f9e8b21bb98: {[MeanOfFeatures Value[363]] }
0x7f9e8b21fc78: {[W1_V Value[128 x 512]] }
0x7f9e8b21fd28: {[W1_U Value[512 x 128]] }
0x7f9e8d6ccaf8: {[EvalErrorPrediction Value[1]] }
0x7f9e8d6ccd98: {[ScaledLogLikelihood Value[132 x 1 x *3]] }
0x7f9e8d6ccf58: {[CrossEntropyWithSoftmax Value[1]] }
0x7f9e8d6d5cc8: {[HLast Value[132 x 1 x *3]] [W2_U Gradient[132 x 32]] }
0x7f9e8dc00448: {[B1 Value[512 x 1]] }
0x7f9e8dc02668: {[W0_V Value[104 x 363]] }
0x7f9e8dc02718: {[W0_U Value[512 x 104]] }

08/04/2016 13:56:16: No PreCompute nodes found, skipping PreCompute step.

08/04/2016 13:56:16: Starting Epoch 1: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
minibatchiterator: epoch 0: frames [0..20480] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
requiredata: determined feature kind as 33-dimensional 'USER' with frame shift 10.0 ms

08/04/2016 13:56:16: Starting minibatch loop.
08/04/2016 13:56:16:  Epoch[ 1 of 2]-Minibatch[   1-  10, 50.00%]: CrossEntropyWithSoftmax = 1.93027859 * 10240; EvalErrorPrediction = 0.53388672 * 10240; time = 0.0337s; samplesPerSecond = 303659.3
08/04/2016 13:56:16:  Epoch[ 1 of 2]-Minibatch[  11-  20, 100.00%]: CrossEntropyWithSoftmax = 1.88385143 * 10240; EvalErrorPrediction = 0.51904297 * 10240; time = 0.0284s; samplesPerSecond = 360157.6
08/04/2016 13:56:16: Finished Epoch[ 1 of 2]: [Training] CrossEntropyWithSoftmax = 1.90706501 * 20480; EvalErrorPrediction = 0.52646484 * 20480; totalSamplesSeen = 20480; learningRatePerSample = 9.7656251e-05; epochTime=0.278682s
08/04/2016 13:56:16: SGD: Saving checkpoint model '/tmp/cntk-test-20160804135211.433559/Speech_SVD@release_gpu/models/cntkSpeech.svd.dnn.1'

08/04/2016 13:56:16: Starting Epoch 2: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
minibatchiterator: epoch 1: frames [20480..40960] (first utterance at frame 20480), data subset 0 of 1, with 1 datapasses

08/04/2016 13:56:16: Starting minibatch loop.
08/04/2016 13:56:16:  Epoch[ 2 of 2]-Minibatch[   1-  10, 50.00%]: CrossEntropyWithSoftmax = 1.88610764 * 10240; EvalErrorPrediction = 0.52304688 * 10240; time = 0.0298s; samplesPerSecond = 343370.7
08/04/2016 13:56:16:  Epoch[ 2 of 2]-Minibatch[  11-  20, 100.00%]: CrossEntropyWithSoftmax = 1.84394188 * 10240; EvalErrorPrediction = 0.51074219 * 10240; time = 0.0284s; samplesPerSecond = 360081.6
08/04/2016 13:56:16: Finished Epoch[ 2 of 2]: [Training] CrossEntropyWithSoftmax = 1.86502476 * 20480; EvalErrorPrediction = 0.51689453 * 20480; totalSamplesSeen = 40960; learningRatePerSample = 9.7656251e-05; epochTime=0.061912s
08/04/2016 13:56:16: SGD: Saving checkpoint model '/tmp/cntk-test-20160804135211.433559/Speech_SVD@release_gpu/models/cntkSpeech.svd.dnn'
08/04/2016 13:56:16: CNTKCommandTrainEnd: SVDTrain

08/04/2016 13:56:16: Action "train" complete.

08/04/2016 13:56:16: __COMPLETED__